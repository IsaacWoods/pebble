searchState.loadedDescShard("mer", 0, "An ELF binary\nThe magic number at the beginning of the file (should be …\nThe <code>.symtab</code> section is not actually a symbol table.\nThe header was malformed in some way.\nThe provided byte stream was too short to be a valid ELF.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an <code>Elf</code> from a stream of bytes\nCreate a <code>SectionIter</code> that iterates over this ELF’s …\nThe ELF header\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis is the section index of the string table that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA section with type <code>0x60000000</code> through <code>0x6fffffff</code> …\nA section with type <code>0x70000000</code> through <code>0x7fffffff</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this is a <code>PT_NOTE</code> segment, iterate the entries. Returns …\nContains a dynamic loader symbol table.\nContains tables used during dynamic linking.\nContains a symbol hash table.\nDefines a section as containing uninitialized space. This …\nContains note information.\nThe first section in a valid ELF’s section table will be …\nA section with type <code>0x60000000</code> through <code>0x6fffffff</code> …\nA section with type <code>0x70000000</code> through <code>0x7fffffff</code> …\nContains information defined by the program.\nContains “Rel”-type relocations.\nContains “Rela”-type relocations.\nReserved by the spec.\nContains a string table.\nContains a symbol table.\nGet this section’s data, as a byte slice. Returns <code>None</code> …\nIf this section contains a table, this is the size of one …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCan contain extra information about a section.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this section should be allocated into the memory …\nWhether this section contains executable instructions\nWhether this section contains writable data\nSome sections are ‘linked’ to another section. This …\nGlobal symbol - visible to all object files.\nOnly visible inside the object file that defines it.\nEnvironment-specific use.\nProcessor-specific use.\nGlobal scope, but with a lower precedence than global …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe offset into the string table, in bytes, to the symbol …")