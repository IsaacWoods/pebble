searchState.loadedDescShard("hal", 0, "The HAL memory API tries to model an abstract version of a …\nThe virtual memory that is being mapped is already mapped …\nA <code>FrameAllocator</code> that can’t actually allocate or free …\nDefines the permissions for a region of memory. Used both …\n<code>FrameAllocator</code> is used to interact with a physical memory …\nThis trait is implemented by a number of marker types, one …\nRepresents a physical address. If the target architecture …\nA <code>PageTable</code> allows the manipulation of a set of …\nRepresents a virtual address. On architectures that have …\nAlign this address to the given alignment, moving …\nAlign this address to the given alignment, moving …\nAlign this address to the given alignment, moving upwards …\nAllocate a <code>Frame</code>.\nAllocate <code>n</code> contiguous <code>Frame</code>s.\nCanonicalise this virtual address. On this architecture, …\nFree <code>n</code> frames that were previously allocated by this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap a <code>Page</code> to a <code>Frame</code> with the given flags.\nMap an area of <code>size</code> bytes starting at the given address …\nMap each <code>Page</code> in a range to a corresponding <code>Frame</code> with the …\nMap each <code>Page</code> in a range to a corresponding <code>Frame</code> with the …\nConstruct a new <code>PAddr</code>. The target architecture does not …\nConstruct a new <code>VAddr</code>. This will canonicalise the given …\nConstructs a new set of page tables, but with the kernel …\nInstall these page tables as the current set.\nGet the physical address that a given virtual address is …")