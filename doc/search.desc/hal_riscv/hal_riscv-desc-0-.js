searchState.loadedDescShard("hal_riscv", 0, "RISC-V paging. Currently we only support <code>Sv48</code>.\nThe Advanced Platform-Level Interrupt Controller (APLIC) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Supervisor Address Translation and Protection (<code>satp</code>) …\nA dedicated register for the supervisor to hold whatever …\nClear the <code>SUM</code> bit of <code>sstatus</code>, denying kernel code access …\nSet the <code>SUM</code> bit of <code>sstatus</code>, allowing kernel code to access …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Incoming Message-Signalled Interrupt Controller …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe Platform-Level Interrupt Controller (PLIC) distributes …\nClaim an interrupt on the given interrupt context. Returns …\nSignal to the PLIC that the given interrupt has been …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe register block of a UART16550-compatible serial …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTables of levels that implement <code>HierarchicalLevel</code> are page …\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nCreate a <code>PageTableImpl</code> from a <code>Frame</code> that already contains …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if this is a leaf entry - that is, this entry …\nGet a reference to the table at the given <code>index</code>, assuming …\nGet a mutable reference to the table at the given <code>index</code>, …\nReturns the complement of this set of flags.\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nGet the ID of the PLIC context corresponding to the S-mode …\nThe kernel starts at -2GiB. The kernel image is loaded …\nPlatforms using <code>Level4</code> paging schemes define this to set …\nAccess a given physical address through the physical …\nThis module contains constants that define how the kernel …\nThe kernel starts at -1GiB. The kernel image is loaded …\nAccess a given physical address through the physical …\nThis module contains constants that define how the kernel …\nThe kernel starts at -2GiB. The kernel image is loaded …\nAccess a given physical address through the physical …")