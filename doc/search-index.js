var searchIndex = new Map(JSON.parse('[\
["bit_field",{"doc":"Provides the abstraction of a bit field, which allows for …","t":"TKKMMMMMMMMM","n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":[[0,"bit_field"],[12,"core::ops::range"]],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[3,0,0,1,3,1,3,1,3,1,3,1],"f":[0,0,0,[1,2],[[3,2],4],[[1,2],4],[[3,-1],3,[[5,[2]]]],[[1,-1],-2,[[5,[2]]],3],[[3,2,4],3],[[1,2,4],6],[[3,-1,3],3,[[5,[2]]]],[[1,-1,-2],6,[[5,[2]]],3]],"c":[],"p":[[10,"BitArray",0],[1,"usize"],[10,"BitField",0],[1,"bool"],[10,"RangeBounds",12],[1,"tuple"]],"b":[]}],\
["bitflags",{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"TEKRTTFKNNQMNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNFKKNNNNNNHNNNMHNNNM","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"],[105,"core::option"],[106,"core::result"],[107,"core::any"],[108,"core::fmt"],[109,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","Write a flags value as text.","","","","Write the value as hex."],"i":[3,0,0,2,3,2,0,0,2,2,0,2,8,8,2,2,2,2,2,2,2,2,8,2,2,2,2,2,2,2,2,2,2,2,2,2,8,2,2,2,2,8,8,0,2,2,2,2,8,8,0,2,2,2,2,2,2,2,2,8,8,8,2,2,8,0,0,9,10,9,10,9,10,9,10,9,10,9,10,10,9,10,9,10,9,10,0,0,0,13,13,13,13,13,13,0,13,13,13,17,0,13,13,13,20],"f":[0,0,0,0,0,0,0,0,[[],[[2,[],[[1,[-1]]]]],3],[[],[[2,[],[[1,[-1]]]]],3],0,[[[2,[],[[1,[-1]]]]],-1,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[],[[2,[],[[1,[-1]]]]],3],[[],[[2,[],[[1,[-1]]]]],3],[-1,-1,[]],[-1,[[5,[[2,[],[[1,[-1]]]]]]],3],[-1,[[5,[[2,[],[[1,[-1]]]]]]],3],[-1,[[2,[],[[1,[-1]]]]],3],[-1,[[2,[],[[1,[-1]]]]],3],[-1,[[2,[],[[1,[-1]]]]],3],[6,[[5,[[2,[],[[1,[-1]]]]]]],3],[6,[[5,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],4,3],[-1,-2,[],[]],[[[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]]],4,3],[[[2,[],[[1,[-1]]]]],4,3],[[[8,[-1]]],4,[]],[[[8,[-1]]],4,[]],0,[[[2,[],[[1,[-1]]]]],[[9,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]]],[[9,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]]],[[10,[[2,[],[[1,[-1]]]]]]],3],[[[2,[],[[1,[-1]]]]],[[10,[[2,[],[[1,[-1]]]]]]],3],[[[8,[-1]]],6,[]],[[6,-1],[[8,[-1]]],[]],0,[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]],4],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]],4],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],7,3],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[2,[],[[1,[-1]]]],[2,[],[[1,[-1]]]]],[[2,[],[[1,[-1]]]]],3],[[[8,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[5,[-2]]],2,[]],[[[10,[-1]]],[[5,[-2]]],2,[]],[[[10,[-1]]],-1,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[13,14],15],[[13,14],15],[-1,-1,[]],[6,[[11,[-1,13]]],2],[-1,-2,[],[]],[-1,13,16],[-1,13,16],[6,[[11,[17,13]]]],[[-1,-2],[[11,[7,18]]],2,19],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[[20,-1],15,19]],"c":[],"p":[[17,"Bits"],[10,"Flags",0],[10,"Bits",0],[1,"bool"],[6,"Option",105],[1,"str"],[1,"tuple"],[5,"Flag",0],[5,"Iter",65],[5,"IterNames",65],[6,"Result",106],[5,"TypeId",107],[5,"ParseError",86],[5,"Formatter",108],[8,"Result",108],[10,"Display",108],[10,"ParseHex",86],[5,"Error",108],[10,"Write",108],[10,"WriteHex",86]],"b":[[92,"impl-Debug-for-ParseError"],[93,"impl-Display-for-ParseError"]]}],\
["byteorder",{"doc":"This crate provides convenience methods for encoding and …","t":"IGKIGIINNNNNNNNNNNNNNNNMNNMNNNNNNMNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNMNNMNNNMNNMNNNMNNMNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNMNNMNNNMNNMNNNMNNMNNMNNMNN","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"],[156,"core::cmp"],[157,"core::fmt"],[158,"core::fmt"],[159,"core::option"],[160,"core::result"],[161,"core::any"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,26,26,1,2,26,1,2,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,26,26,1,2,26,1,2,26,26,1,2,26,1,2,26,1,2,26,1,2],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[-1,-1,[]],[-1,-1,[]],[[[8,[7]]],9],[[[8,[7]]],9],[[[8,[7]]],9],[[[8,[10]]],9],[[[8,[10]]],9],[[[8,[10]]],9],[[[8,[11]]],9],[[[8,[12]]],9],[[[8,[13]]],9],[[[8,[14]]],9],[[[8,[15]]],9],[[[8,[15]]],9],[[[8,[15]]],9],[[[8,[16]]],9],[[[8,[16]]],9],[[[8,[16]]],9],[[[8,[17]]],9],[[[8,[17]]],9],[[[8,[17]]],9],[[[8,[18]]],9],[[[8,[18]]],9],[[[8,[18]]],9],[[1,-1],9,19],[[2,-1],9,19],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[20,[3]]]],[[2,2],[[20,[3]]]],[[[8,[21]]],7],[[[8,[21]],[8,[7]]],9],[[[8,[21]],[8,[7]]],9],[[[8,[21]]],10],[[[8,[21]],[8,[10]]],9],[[[8,[21]],[8,[10]]],9],[[[8,[21]]],11],[[[8,[21]],[8,[11]]],9],[[[8,[21]]],12],[[[8,[21]],[8,[12]]],9],[[[8,[21]]],13],[[[8,[21]]],13],[[[8,[21]],[8,[13]]],9],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]],9],[[[8,[21]],22],14],[[[8,[21]],22],11],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]],9],[[[8,[21]],[8,[15]]],9],[[[8,[21]],[8,[15]]],9],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]],9],[[[8,[21]],[8,[16]]],9],[[[8,[21]],[8,[16]]],9],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]],9],[[[8,[21]],[8,[17]]],9],[[[8,[21]],[8,[17]]],9],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]],[8,[18]]],9],[[[8,[21]],[8,[18]]],9],[[[8,[21]],[8,[18]]],9],[[[8,[21]],22],18],[[[8,[21]],22],18],[[[8,[21]],22],18],[[[8,[21]],22],15],[[[8,[21]],22],15],[[[8,[21]],22],15],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[[8,[21]],7],9],[[[8,[7]],[8,[21]]],9],[[[8,[21]],10],9],[[[8,[10]],[8,[21]]],9],[[[8,[21]],11],9],[[[8,[11]],[8,[21]]],9],[[[8,[21]],12],9],[[[8,[12]],[8,[21]]],9],[[[8,[21]],13],9],[[[8,[21]],13],9],[[[8,[13]],[8,[21]]],9],[[[8,[21]],14],9],[[[8,[21]],14],9],[[[8,[14]],[8,[21]]],9],[[[8,[25]],[8,[21]]],9],[[[8,[21]],14,22],9],[[[8,[21]],11,22],9],[[[8,[21]],15],9],[[[8,[21]],15],9],[[[8,[21]],15],9],[[[8,[15]],[8,[21]]],9],[[[8,[15]],[8,[21]]],9],[[[8,[15]],[8,[21]]],9],[[[8,[21]],16],9],[[[8,[21]],16],9],[[[8,[21]],16],9],[[[8,[16]],[8,[21]]],9],[[[8,[16]],[8,[21]]],9],[[[8,[16]],[8,[21]]],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[17]],[8,[21]]],9],[[[8,[17]],[8,[21]]],9],[[[8,[17]],[8,[21]]],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[18]],[8,[21]]],9],[[[8,[18]],[8,[21]]],9],[[[8,[18]],[8,[21]]],9],[[[8,[21]],18,22],9],[[[8,[21]],18,22],9],[[[8,[21]],18,22],9],[[[8,[21]],15,22],9],[[[8,[21]],15,22],9],[[[8,[21]],15,22],9]],"c":[53,56],"p":[[6,"BigEndian",0],[6,"LittleEndian",0],[6,"Ordering",156],[1,"bool"],[5,"Formatter",157],[8,"Result",157],[1,"f32"],[1,"slice"],[1,"tuple"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[10,"Hasher",158],[6,"Option",159],[1,"u8"],[1,"usize"],[6,"Result",160],[5,"TypeId",161],[1,"i8"],[10,"ByteOrder",0]],"b":[]}],\
["cfg_if",{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"Q","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]}],\
["cordyceps",{"doc":"data structures","t":"RKFFFFNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMMCCNCNNNNNNNNNNNNFFFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFPPFFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNN","n":["Handle","Linked","List","MpscQueue","Stack","TransferStack","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","drop","drop","drop","drop","extend","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","from_ptr","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_ptr","links","list","mpsc_queue","next","stack","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Cursor","CursorMut","DrainFilter","IntoIter","Iter","IterMut","Links","List","append","as_cursor","assert_valid","back","back_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","current","current_mut","cursor_back","cursor_back_mut","cursor_front","cursor_front_mut","default","drain_filter","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","front","front_mut","index","index","insert_after","insert_before","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_empty","is_linked","iter","iter_mut","len","len","len","len","len","len","move_next","move_next","move_prev","move_prev","new","new","next","next","next","next","next","next","next_back","next_back","next_back","peek_next","peek_next","peek_next_mut","peek_prev","peek_prev","peek_prev_mut","pop_back","pop_front","push_back","push_front","remove","remove_current","remove_first","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","splice_after","splice_before","split_after","split_before","split_off","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_split_off","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Busy","Consumer","Empty","Inconsistent","Links","MpscQueue","OwnedConsumer","TryDequeueError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consume","consume_owned","default","dequeue","dequeue","dequeue","dequeue_unchecked","drop","drop","enqueue","eq","fmt","fmt","fmt","fmt","from","from","from","from","has_producers","into","into","into","into","into_iter","new","new","new_stub","new_with_static_stub","new_with_stub","next","try_consume","try_consume_owned","try_dequeue","try_dequeue","try_dequeue","try_dequeue_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Links","Stack","TransferStack","borrow","borrow_mut","fmt","from","into","is_empty","new","new","new","pop","push","push","take_all","take_all","try_from","try_into","type_id"],"q":[[0,"cordyceps"],[56,"cordyceps::list"],[197,"cordyceps::mpsc_queue"],[262,"cordyceps::stack"],[282,"core::marker"],[283,"core::iter::traits::collect"],[284,"core::fmt"],[285,"core::fmt"],[286,"core::option"],[287,"core::result"],[288,"core::any"],[289,"core::pin"],[290,"core::ops::function"],[291,"alloc::sync"],[292,"core::marker"]],"d":["The handle owning nodes in the linked list.","Trait implemented by types which can be members of an …","An intrusive doubly-linked list.","A multi-producer, single-consumer (MPSC) queue, …","An intrusive singly-linked mutable FIFO stack.","An intrusive lock-free singly-linked FIFO stack, where all …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert a raw pointer to <code>Self</code> into an owning <code>Self::Handle</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Convert a <code>Self::Handle</code> to a raw pointer to <code>Self</code>, taking …","Return the links of the node pointed to by <code>ptr</code>.","An intrusive doubly-linked list.","A multi-producer, single-consumer (MPSC) queue, …","","Intrusive, singly-linked first-in, first-out (FIFO) stacks.","","","","","","","","","","","","","A cursor over a <code>List</code>.","A cursor over a <code>List</code> with editing operations.","An iterator returned by <code>List::drain_filter</code>.","An owning iterator over the elements of a <code>List</code>.","Iterates over the items in a <code>List</code> by reference.","Iterates over the items in a <code>List</code> by mutable reference.","Links to other nodes in a <code>List</code>.","An intrusive doubly-linked list.","Moves all elements from <code>other</code> to the end of the list.","Returns a read-only cursor pointing to the current element.","Asserts as many of the linked list’s invariants as …","Returns a reference to the last element in the list/","Returns a mutable reference to the last element in the …","","","","","","","","","","","","","","","Borrows the element that the cursor is currently pointing …","Borrows the element that the cursor is currently pointing …","Mutably borrows the element that the cursor is currently …","Returns a <code>Cursor</code> starting at the last element.","Returns a <code>CursorMut</code> starting at the last element.","Returns a <code>Cursor</code> starting at the first element.","Returns a <code>CursorMut</code> starting at the first element.","","Returns an iterator which uses a closure to determine if …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an immutable reference to the first element in the …","Returns a mutable reference to the first element in the …","Returns the index of this cursor’s position in the <code>List</code>.","Returns the index of this cursor’s position in the <code>List</code>.","Inserts a new element into the <code>List</code> after the current one.","Inserts a new element into the <code>List</code> before the current one.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns <code>true</code> if the <code>List</code> this cursor points to is empty","Returns <code>true</code> if the <code>List</code> this cursor points to is empty","Returns <code>true</code> if this list is empty.","Returns <code>true</code> if this node is currently linked to a <code>List</code>.","Returns an iterator over the items in this list, by …","Returns an iterator over the items in this list, by …","Returns the length of the <code>List</code> this cursor points to.","Returns the length of the <code>List</code> this cursor points to.","Returns the number of elements in the list.","","","","Moves the cursor position to the next element in the <code>List</code>.","Moves the cursor position to the next element in the <code>List</code>.","Moves the cursor to the previous element in the <code>List</code>.","Moves the cursor to the previous element in the <code>List</code>.","Returns a new empty list.","Returns new links for a doubly-linked intrusive list.","","","","","","","","","","Borrows the next element after the cursor’s current …","Borrows the next element after the cursor’s current …","Mutably borrows the next element after the cursor’s …","Borrows the previous element before the cursor’s current …","Borrows the previous element before the cursor’s current …","Mutably borrows the previous element before the cursor’s …","Removes an item from the tail of the list.","Removes an item from the head of the list.","Appends an item to the tail of the list.","Appends an item to the head of the list.","Remove an arbitrary node from the list.","Removes the current element from the <code>List</code> and returns the …","Find and remove the first element matching the provided …","A <code>CursorMut</code> can never return an accurate <code>size_hint</code> — its …","A <code>Cursor</code> can never return an accurate <code>size_hint</code> — its …","","","","","Inserts all elements from <code>spliced</code> after the cursor’s …","Inserts all elements from <code>spliced</code> before the cursor’s …","Splits the list into two after the current element. This …","Splits the list into two before the current element. This …","Split the list into two at the given index (inclusive).","","","","","","","","","","","","","","","Attempts to split the list into two at the given index …","","","","","","","","Another thread is currently calling <code>MpscQueue::try_dequeue</code> …","A handle that holds the right to dequeue elements from a …","No element was dequeued because the queue was empty.","The queue is currently in an inconsistent state.","Links to other nodes in a <code>MpscQueue</code>.","A multi-producer, single-consumer (MPSC) queue, …","An owned handle that holds the right to dequeue elements …","Errors returned by <code>MpscQueue::try_dequeue</code> and …","","","","","","","","","Returns a <code>Consumer</code> handle that reserves the exclusive …","Returns a <code>OwnedConsumer</code> handle that reserves the exclusive …","","Dequeue an element from the queue.","Dequeue an element from the queue.","Dequeue an element from the queue.","Dequeue an element from the queue, without checking …","","","Enqueue a new element at the end of the queue.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>true</code> if any producers exist for this queue.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a new <code>MpscQueue</code>.","Returns a new set of <code>Links</code> for a <code>MpscQueue</code>.","Returns a new set of <code>Links</code> for the stub node in an …","Returns a new <code>MpscQueue</code> with a static “stub” entity","Returns a new <code>MpscQueue</code> with the provided stub node.","","Attempts to reserve a <code>Consumer</code> handle that holds the …","Attempts to reserve an <code>OwnedConsumer</code> handle that holds the …","Try to dequeue an element from the queue, without waiting …","Try to dequeue an element from the queue, without waiting …","Try to dequeue an element from the queue, without waiting …","Try to dequeue an element from the queue, without waiting …","","","","","","","","","","","","","Links to other nodes in a <code>TransferStack</code> or <code>Stack</code>.","An intrusive singly-linked mutable FIFO stack.","An intrusive lock-free singly-linked FIFO stack, where all …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Stack</code> is empty.","Returns a new <code>TransferStack</code> with no elements.","Returns a new <code>Stack</code> with no elements in it.","Returns new <code>TransferStack</code> links.","Returns the element most recently pushed to this <code>Stack</code>, or …","Pushes <code>element</code> onto the end of this <code>TransferStack</code>, taking …","Pushes <code>element</code> onto the end of this <code>Stack</code>, taking ownership","Takes all elements <em>currently</em> in this <code>TransferStack</code>, …","Takes all elements <em>currently</em> in this <code>Stack</code>, returning a new","","",""],"i":[3,0,0,0,0,0,4,1,8,10,4,1,8,10,1,4,1,8,10,4,4,1,8,10,4,1,8,10,4,3,4,1,8,10,4,4,4,10,3,3,0,0,10,0,4,1,8,10,4,1,8,10,4,1,8,10,0,0,0,0,0,0,0,0,4,20,4,4,4,20,21,6,29,30,27,23,20,21,6,29,30,27,23,20,21,20,4,4,4,4,6,4,6,20,21,6,27,23,20,21,6,29,30,27,23,4,4,20,21,20,20,20,21,6,29,30,27,23,20,21,29,30,27,23,20,21,4,6,4,4,20,21,4,29,30,27,20,21,20,21,4,6,20,21,29,30,27,23,29,30,27,20,21,20,20,21,20,4,4,4,4,4,20,20,20,21,29,30,27,23,20,20,20,20,4,20,21,6,29,30,27,23,20,21,6,29,30,27,23,4,20,21,6,29,30,27,23,35,0,35,35,0,0,0,0,31,2,35,33,31,2,35,33,1,1,2,1,31,33,1,31,33,1,35,31,2,35,33,31,2,35,33,33,31,2,35,33,31,1,2,2,1,1,31,1,1,1,31,33,1,31,2,35,33,31,2,35,33,31,2,35,33,0,0,0,9,9,9,9,9,10,8,10,9,10,8,10,8,10,9,9,9],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[[3,[2]]]],[[[4,[-1]]],5,[[3,[6]],7]],[[[1,[-1]]],5,[[3,[2]]]],[[[8,[-1]]],5,[[3,[9]]]],[[[10,[-1]]],5,[[3,[9]]]],[[[4,[-1]],-2],5,[[3,[6]],7],[[12,[],[[11,[]]]]]],[[[4,[-1]],13],14,[[3,[6]],7]],[[[1,[-1]],13],14,[[3,[2]]]],[[[8,[-1]],13],14,[[3,[9]]]],[[[10,[-1]],13],14,[[3,[9]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[4,[-2]]],[[12,[],[[11,[]]]]],[[3,[6]],7]],[[[16,[[3,[],[[15,[-1]]]]]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],-2,[[3,[6]],7],[]],[[[4,[-1]]],-2,[[3,[6]],7],[]],[[[4,[-1]]],-2,[[3,[6]],7],[]],[-1,-2,[],[]],[-1,[[16,[[3,[],[[15,[-1]]]]]]],[]],[[[16,[[3,[],[[15,[-1]]]]]]],[[16,[-2]]],[],[]],0,0,[[[10,[-1]]],[[17,[-2]]],[[3,[9]]],[]],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,[[[4,[-1]],[4,[-1]]],5,[[3,[6]],7]],[[[20,[-1]]],[[21,[-1]]],[[3,[6]],7]],[[[4,[-1]]],5,[[3,[6]],7]],[[[4,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[4,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[21,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[20,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[4,[-1]]],[[21,[-1]]],[[3,[6]],7]],[[[4,[-1]]],[[20,[-1]]],[[3,[6]],7]],[[[4,[-1]]],[[21,[-1]]],[[3,[6]],7]],[[[4,[-1]]],[[20,[-1]]],[[3,[6]],7]],[[],[[6,[-1]]],7],[[[4,[-1]],-2],[[23,[-1,-2]]],[[3,[6]],7],[[26,[-1],[[24,[25]]]]]],[[[6,[-1]],[6,[-1]]],25,7],[[[20,[-1]],13],14,[[3,[6]],7]],[[[21,[-1]],13],14,[[3,[6]],7]],[[[6,[-1]],13],14,7],[[[27,[-1]],13],14,[[3,[6]],7]],[[[23,[-1,-2]],13],14,[[3,[6]],7],[[26,[-1],[[24,[25]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[4,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[4,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[20,[-1]]],[[17,[28]]],[[3,[6]],7]],[[[21,[-1]]],[[17,[28]]],[[3,[6]],7]],[[[20,[-1]]],5,[[3,[6]],7]],[[[20,[-1]]],5,[[3,[6]],7]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],25,[[3,[6]],7]],[[[21,[-1]]],25,[[3,[6]],7]],[[[4,[-1]]],25,[[3,[6]],7]],[[[6,[-1]]],25,7],[[[4,[-1]]],[[29,[-1]]],[[3,[6]],7]],[[[4,[-1]]],[[30,[-1]]],[[3,[6]],7]],[[[20,[-1]]],28,[[3,[6]],7]],[[[21,[-1]]],28,[[3,[6]],7]],[[[4,[-1]]],28,[[3,[6]],7]],[[[29,[-1]]],28,[[3,[6]],7]],[[[30,[-1]]],28,[[3,[6]],7]],[[[27,[-1]]],28,[[3,[6]],7]],[[[20,[-1]]],5,[[3,[6]],7]],[[[21,[-1]]],5,[[3,[6]],7]],[[[20,[-1]]],5,[[3,[6]],7]],[[[21,[-1]]],5,[[3,[6]],7]],[[],[[4,[-1]]],[[3,[6]],7]],[[],[[6,[-1]]],7],[[[20,[-1]]],[[17,[-2]]],[[3,[6]],7],[]],[[[21,[-1]]],[[17,[-2]]],[[3,[6]],7],[]],[[[29,[-1]]],[[17,[-2]]],[[3,[6]],7],[]],[[[30,[-1]]],[[17,[-2]]],[[3,[6]],7],[]],[[[27,[-1]]],17,[[3,[6]],7]],[[[23,[-1,-2]]],[[17,[-3]]],[[3,[6]],7],[[26,[-1],[[24,[25]]]]],[]],[[[29,[-1]]],[[17,[-2]]],[[3,[6]],7],[]],[[[30,[-1]]],[[17,[-2]]],[[3,[6]],7],[]],[[[27,[-1]]],17,[[3,[6]],7]],[[[20,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[21,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[20,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[20,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[21,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[20,[-1]]],[[17,[[22,[-1]]]]],[[3,[6]],7]],[[[4,[-1]]],17,[[3,[6]],7]],[[[4,[-1]]],17,[[3,[6]],7]],[[[4,[-1]]],5,[[3,[6]],7]],[[[4,[-1]]],5,[[3,[6]],7]],[[[4,[-1]],[16,[-1]]],17,[[3,[6]],7]],[[[20,[-1]]],17,[[3,[6]],7]],[[[20,[-1]],-2],17,[[3,[6]],7],[[26,[-1],[[24,[25]]]]]],[[[20,[-1]]],[[5,[28,[17,[28]]]]],[[3,[6]],7]],[[[21,[-1]]],[[5,[28,[17,[28]]]]],[[3,[6]],7]],[[[29,[-1]]],[[5,[28,[17,[28]]]]],[[3,[6]],7]],[[[30,[-1]]],[[5,[28,[17,[28]]]]],[[3,[6]],7]],[[[27,[-1]]],[[5,[28,[17,[28]]]]],[[3,[6]],7]],[[[23,[-1,-2]]],[[5,[28,[17,[28]]]]],[[3,[6]],7],[[26,[-1],[[24,[25]]]]]],[[[20,[-1]],[4,[-1]]],5,[[3,[6]],7]],[[[20,[-1]],[4,[-1]]],5,[[3,[6]],7]],[[[20,[-1]]],[[4,[-1]]],[[3,[6]],7]],[[[20,[-1]]],[[4,[-1]]],[[3,[6]],7]],[[[4,[-1]],28],[[4,[-1]]],[[3,[6]],7]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[[4,[-1]],28],[[17,[[4,[-1]]]]],[[3,[6]],7]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[31,[-1]]],[[3,[2]]]],[[[32,[[1,[-1]]]]],[[33,[-1]]],3],[[],[[2,[-1]]],[]],[[[1,[-1]]],17,[[3,[2]]]],[[[31,[-1]]],17,[34,[3,[2]]]],[[[33,[-1]]],17,[[3,[2]]]],[[[1,[-1]]],17,[[3,[2]]]],[[[31,[-1]]],5,[[3,[2]]]],[[[33,[-1]]],5,[[3,[2]]]],[[[1,[-1]]],5,[[3,[2]]]],[[35,35],25],[[[31,[-1]],13],14,[[3,[2]]]],[[[2,[-1]],13],14,[]],[[35,13],14],[[[33,[-1]],13],14,[[3,[2]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[33,[-1]]],25,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[[3,[2]]]],[[],[[2,[-1]]],[]],[[],[[2,[-1]]],[]],[-1,[[1,[-1]]],[]],[[],[[1,[-1]]],[[3,[2]]]],[[[31,[-1]]],[[17,[-2]]],[34,[3,[2]]],[]],[[[1,[-1]]],[[17,[[31,[-1]]]]],[[3,[2]]]],[[[32,[[1,[-1]]]]],[[17,[[33,[-1]]]]],3],[[[1,[-1]]],[[18,[35]]],[[3,[2]]]],[[[31,[-1]]],[[18,[35]]],[34,[3,[2]]]],[[[33,[-1]]],[[18,[35]]],[[3,[2]]]],[[[1,[-1]]],[[18,[35]]],[[3,[2]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]],13],14,[]],[-1,-1,[]],[-1,-2,[],[]],[[[10,[-1]]],25,[[3,[9]]]],[[],[[8,[-1]]],[[3,[9]]]],[[],[[10,[-1]]],[[3,[9]]]],[[],[[9,[-1]]],[]],[[[10,[-1]]],17,[[3,[9]]]],[[[8,[-1]]],5,[[3,[9]]]],[[[10,[-1]]],5,[[3,[9]]]],[[[8,[-1]]],[[10,[-1]]],[[3,[9]]]],[[[10,[-1]]],[[10,[-1]]],[[3,[9]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]]],"c":[],"p":[[5,"MpscQueue",0],[5,"Links",197],[10,"Linked",0],[5,"List",0],[1,"tuple"],[5,"Links",56],[10,"Sized",282],[5,"TransferStack",0],[5,"Links",262],[5,"Stack",0],[17,"Item"],[10,"IntoIterator",283],[5,"Formatter",284],[8,"Result",284],[17,"Handle"],[5,"NonNull",285],[6,"Option",286],[6,"Result",287],[5,"TypeId",288],[5,"CursorMut",56],[5,"Cursor",56],[5,"Pin",289],[5,"DrainFilter",56],[17,"Output"],[1,"bool"],[10,"FnMut",290],[5,"IntoIter",56],[1,"usize"],[5,"Iter",56],[5,"IterMut",56],[5,"Consumer",197],[5,"Arc",291],[5,"OwnedConsumer",197],[10,"Send",282],[6,"TryDequeueError",197]],"b":[[34,"impl-IntoIterator-for-List%3CT%3E"],[35,"impl-IntoIterator-for-%26List%3CT%3E"],[36,"impl-IntoIterator-for-%26mut+List%3CT%3E"]]}],\
["hal",{"doc":"","t":"CPIFFFKKIIIFFKGTGGGFNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNNNNNNNNNNNNHMMNNHNNNMNNNNNNNNOONNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMOO","n":["memory","AlreadyMapped","Bytes","FakeFrameAllocator","Flags","Frame","FrameAllocator","FrameSize","Gibibytes","Kibibytes","Mebibytes","PAddr","Page","PageTable","PagingError","SIZE","Size1GiB","Size2MiB","Size4KiB","VAddr","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","align_down","align_down","align_up","align_up","allocate","allocate","allocate_n","allocate_n","backward_checked","backward_checked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached","canonicalise","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","contains","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","executable","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","frames_needed","free_n","free_n","from","from","from","from","from","from","from","from","from","from","from","from","gibibytes","into","into","into","into","into","into","into","into","into","into","is_aligned","is_aligned","kibibytes","map","map_area","map_range","map_range","mebibytes","mut_ptr","new","new","new_with_kernel_mapped","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ptr","start","start","starts_with","starts_with","steps_between","steps_between","sub","sub","sub_assign","sub_assign","switch_to","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","user_accessible","writable"],"q":[[0,"hal"],[1,"hal::memory"],[200,"core::ops::range"],[201,"core::option"],[202,"core::clone"],[203,"core::cmp"],[204,"core::cmp"],[205,"core::fmt"],[206,"core::cmp"]],"d":["The HAL memory API tries to model an abstract version of a …","The virtual memory that is being mapped is already mapped …","","A <code>FrameAllocator</code> that can’t actually allocate or free …","Defines the permissions for a region of memory. Used both …","","<code>FrameAllocator</code> is used to interact with a physical memory …","This trait is implemented by a number of marker types, one …","","","","Represents a physical address. If the target architecture …","","A <code>PageTable</code> allows the manipulation of a set of …","","","","","","Represents a virtual address. On architectures that have …","","","","","","","","","","Align this address to the given alignment, moving …","Align this address to the given alignment, moving …","","Align this address to the given alignment, moving upwards …","Allocate a <code>Frame</code>.","","Allocate <code>n</code> contiguous <code>Frame</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","Canonicalise this virtual address. On x86_64 and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Free <code>n</code> frames that were previously allocated by this …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Map a <code>Page</code> to a <code>Frame</code> with the given flags.","Map an area of <code>size</code> bytes starting at the given address …","Map each <code>Page</code> in a range to a corresponding <code>Frame</code> with the …","Map each <code>Page</code> in a range to a corresponding <code>Frame</code> with the …","","","Construct a new <code>PAddr</code>. On x86_64, physical addresses must …","Construct a new <code>VAddr</code>. This will canonicalise the given …","Constructs a new set of page tables, but with the kernel …","","","","","","","","","","","","","","","","","","","Install these page tables as the current set.","Get the physical address that a given virtual address is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1,4,5,6,7,1,4,6,7,6,7,6,7,9,10,9,10,1,4,10,1,4,5,24,6,7,14,15,16,10,1,4,5,24,6,7,14,15,16,5,7,6,7,6,7,1,4,5,6,7,14,15,16,1,4,6,7,14,15,16,1,4,5,6,7,1,4,5,6,7,14,15,16,5,1,4,5,24,6,6,6,7,7,7,14,15,16,1,4,3,9,10,10,1,4,5,24,6,7,7,7,14,15,16,0,10,1,4,5,24,6,7,14,15,16,6,7,0,28,28,28,28,0,7,6,7,28,1,4,6,7,14,15,16,7,1,4,1,4,1,4,6,7,6,7,28,28,10,1,4,5,24,6,7,14,15,16,10,1,4,5,24,6,7,14,15,16,10,1,4,5,24,6,7,14,15,16,28,5,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]],2],-2,3,[]],[[[4,[-1]],2],-2,3,[]],[[5,5],-1,[]],[[6,2],-1,[]],[[7,2],-1,[]],[[[1,[-1]],2],8,3],[[[4,[-1]],2],8,3],[[6,2],8],[[7,2],8],[[6,2],6],[[7,2],7],[[6,2],6],[[7,2],7],[9,[[1,[-1]]],3],[10,[[1,[-1]]],3],[[9,2],[[11,[[1,[-1]]]]],3],[[10,2],[[11,[[1,[-1]]]]],3],[[[1,[-1]],2],[[12,[[1,[-1]]]]],3],[[[4,[-1]],2],[[12,[[4,[-1]]]]],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[7,7],[[6,2],[[12,[6]]]],[[7,2],[[12,[7]]]],[[6,2],[[12,[6]]]],[[7,2],[[12,[7]]]],[[[1,[-1]]],[[1,[-1]]],[3,13]],[[[4,[-1]]],[[4,[-1]]],[13,3]],[5,5],[6,6],[7,7],[14,14],[15,15],[16,16],[[[1,[-1]],[1,[-1]]],17,[3,18]],[[[4,[-1]],[4,[-1]]],17,[18,3]],[[6,6],17],[[7,7],17],[[14,14],17],[[15,15],17],[[16,16],17],[6,[[1,[-1]]],3],[7,[[4,[-1]]],3],[[],5],[[],6],[[],7],[[[1,[-1]],[1,[-1]]],19,[3,20]],[[[4,[-1]],[4,[-1]]],19,[20,3]],[[5,5],19],[[6,6],19],[[7,7],19],[[14,14],19],[[15,15],19],[[16,16],19],0,[[[1,[-1]],21],22,[3,23]],[[[4,[-1]],21],22,[23,3]],[[5,21],22],[[24,21],22],[[6,21],22],[[6,21],22],[[6,21],22],[[7,21],22],[[7,21],22],[[7,21],22],[[14,21],22],[[15,21],22],[[16,21],22],[[[1,[-1]],2],[[12,[[1,[-1]]]]],3],[[[4,[-1]],2],[[12,[[4,[-1]]]]],3],[25,25],[[9,[1,[-1]],2],8,3],[[10,[1,[-1]],2],8,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],7],[-1,-1,[]],[[],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[26,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,2],19],[[7,2],19],[27,25],[[28,[4,[-1]],[1,[-1]],5,-3],[[29,[8,24]]],3,3,[[9,[-2]]]],[[28,7,6,2,5,-2],[[29,[8,24]]],3,[[9,[-1]]]],[[28,[11,[[4,[-1]]]],[11,[[1,[-1]]]],5,-3],[[29,[8,24]]],3,3,[[9,[-2]]]],[[28,[11,[[4,[-1]]]],[11,[[1,[-1]]]],5,-3],[[29,[8,24]]],3,3,[[9,[-2]]]],[30,25],[7],[2,[[12,[6]]]],[2,7],[[28,-2],28,3,[[9,[-1]]]],[[[1,[-1]],[1,[-1]]],[[12,[17]]],[3,31]],[[[4,[-1]],[4,[-1]]],[[12,[17]]],[31,3]],[[6,6],[[12,[17]]]],[[7,7],[[12,[17]]]],[[14,14],[[12,[17]]]],[[15,15],[[12,[17]]]],[[16,16],[[12,[17]]]],[7],0,0,[6,[[1,[-1]]],3],[7,[[4,[-1]]],3],[[[1,[-1]],[1,[-1]]],[[12,[2]]],3],[[[4,[-1]],[4,[-1]]],[[12,[2]]],3],[[6,2],-1,[]],[[7,2],-1,[]],[[6,2],8],[[7,2],8],[28,8],[[28,7],[[12,[6]]]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[28,[4,[-1]]],[[12,[[1,[-1]]]]],3],0,0],"c":[],"p":[[5,"Frame",1],[1,"usize"],[10,"FrameSize",1],[5,"Page",1],[5,"Flags",1],[5,"PAddr",1],[5,"VAddr",1],[1,"tuple"],[10,"FrameAllocator",1],[5,"FakeFrameAllocator",1],[5,"Range",200],[6,"Option",201],[10,"Clone",202],[6,"Size4KiB",1],[6,"Size2MiB",1],[6,"Size1GiB",1],[6,"Ordering",203],[10,"Ord",203],[1,"bool"],[10,"PartialEq",203],[5,"Formatter",204],[8,"Result",204],[10,"Debug",204],[6,"PagingError",1],[8,"Bytes",1],[8,"Gibibytes",1],[8,"Kibibytes",1],[10,"PageTable",1],[6,"Result",205],[8,"Mebibytes",1],[10,"PartialOrd",203],[5,"TypeId",206]],"b":[[98,"impl-Debug-for-PAddr"],[99,"impl-LowerHex-for-PAddr"],[100,"impl-UpperHex-for-PAddr"],[101,"impl-UpperHex-for-VAddr"],[102,"impl-Debug-for-VAddr"],[103,"impl-LowerHex-for-VAddr"],[118,"impl-From%3C*mut+T%3E-for-VAddr"],[120,"impl-From%3C*const+T%3E-for-VAddr"]]}],\
["hash32",{"doc":"32-bit hashing algorithms","t":"FFKFNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNN","n":["BuildHasherDefault","FnvHasher","Hasher","Murmur3Hasher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_hasher","clone","default","default","default","eq","finish","finish","finish32","finish32","finish32","fmt","from","from","from","into","into","into","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write"],"q":[[0,"hash32"],[40,"core::default"],[41,"core::hash"],[42,"core::fmt"],[43,"core::fmt"],[44,"core::any"]],"d":["A copy of <code>core::hash::BuildHasherDefault</code>, but with a const …","32-bit Fowler-Noll-Vo hasher","An extension of core::hash::Hasher for hashers which use …","32-bit MurmurHash3 hasher","","","","","","","","","","","","","","","The equivalent of <code>core::hash::Hasher.finish</code> for 32-bit …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>const</code> constructor","","","","","","","","","","",""],"i":[0,0,0,0,4,5,1,4,5,1,1,1,4,5,1,1,4,5,8,4,5,1,4,5,1,4,5,1,1,4,5,1,4,5,1,4,5,1,4,5],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-2,[2,3],[]],[[[1,[-1]]],[[1,[-1]]],[]],[[],4],[[],5],[[],[[1,[-1]]],[]],[[[1,[-1]],[1,[-1]]],6,[]],[4,7],[5,7],[8,9],[4,9],[5,9],[[[1,[-1]],10],11,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[4,[15,[14]]],16],[[5,[15,[14]]],16]],"c":[],"p":[[5,"BuildHasherDefault",0],[10,"Default",40],[10,"Hasher",41],[5,"FnvHasher",0],[5,"Murmur3Hasher",0],[1,"bool"],[1,"u64"],[10,"Hasher",0],[1,"u32"],[5,"Formatter",42],[8,"Result",42],[6,"Result",43],[5,"TypeId",44],[1,"u8"],[1,"slice"],[1,"tuple"]],"b":[]}],\
["heapless",{"doc":"<code>static</code> friendly data structures that don’t require …","t":"EEFGIIFFFFFFFFFFPFFEFPFFNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKGGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIIIIIINNNNNNNNNNNFFKFFFFFFFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BinaryHeap","Bucket","Deque","Entry","FnvIndexMap","FnvIndexSet","HistoryBuffer","IndexMap","IndexMapIter","IndexMapIterMut","IndexMapKeys","IndexMapValues","IndexMapValuesMut","IndexSet","IndexSetIter","LinearMap","Occupied","OccupiedEntry","OldestOrdered","Pos","String","Vacant","VacantEntry","Vec","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_mut_slices","as_mut_str","as_mut_vec","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","as_slices","as_slices","as_str","back","back_mut","binary_heap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","capacity","capacity","capacity","clear","clear","clear","clear","clear","clear","clear","clear_with","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","contains","contains_key","contains_key","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","difference","drop","drop","drop","ends_with","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","extend_from_slice","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_slice","from_str","from_utf8","from_utf8_unchecked","front","front_mut","get","get","get","get_mut","get_mut","get_mut","hash","hash","index","index","index_mut","index_mut","insert","insert","insert","insert","insert","insert","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_array","into_bytes","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_full","is_full","is_subset","is_superset","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","key","key","keys","keys","last","last","last_mut","len","len","len","len","len","mpmc","ne","ne","ne","new","new","new","new","new","new","new","new_with","next","next","next","next","next","next","next","oldest_ordered","partial_cmp","partial_cmp","pop","pop","pop_back","pop_back_unchecked","pop_front","pop_front_unchecked","pop_unchecked","push","push","push_back","push_back_unchecked","push_front","push_front_unchecked","push_str","push_unchecked","recent","remove","remove","remove","remove","remove","remove","remove_entry","resize","resize_default","retain","retain","retain","retain_mut","set_len","sorted_linked_list","spsc","starts_with","swap_remove","swap_remove","swap_remove_unchecked","symmetric_difference","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","values","values","values_mut","values_mut","write","write_char","write_str","write_str","BinaryHeap","Kind","Max","Min","PeekMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","default","deref","deref_mut","drop","fmt","from","from","from","from","into","into","into","into","into_iter","into_vec","is_empty","iter","iter_mut","len","new","peek","peek_mut","pop","pop","pop_unchecked","push","push_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","MpMcQueue","Q16","Q2","Q32","Q4","Q64","Q8","borrow","borrow_mut","default","dequeue","enqueue","from","into","new","try_from","try_into","type_id","FindMut","Iter","Kind","LinkedIndexU16","LinkedIndexU8","LinkedIndexUsize","Max","Min","Node","SortedLinkedList","SortedLinkedListIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","deref","deref_mut","drop","drop","eq","eq","eq","find_mut","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_iter","is_empty","is_full","iter","new_u16","new_u8","new_usize","next","partial_cmp","partial_cmp","partial_cmp","peek","pop","pop","pop_unchecked","push","push_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Consumer","Iter","IterMut","Producer","Queue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clone","clone","default","dequeue","dequeue","dequeue_unchecked","dequeue_unchecked","drop","enqueue","enqueue","enqueue_unchecked","enqueue_unchecked","eq","fmt","from","from","from","from","from","hash","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_full","iter","iter_mut","len","len","len","new","next","next","next_back","next_back","peek","peek","ready","ready","split","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"heapless"],[410,"heapless::binary_heap"],[465,"heapless::mpmc"],[483,"heapless::sorted_linked_list"],[593,"heapless::spsc"],[672,"core::option"],[673,"core::cmp"],[674,"core::marker"],[675,"core::clone"],[676,"core::cmp"],[677,"core::borrow"],[678,"core::hash"],[679,"core::cmp"],[680,"core::result"],[681,"core::fmt"],[682,"core::fmt"],[683,"core::hash"],[684,"hash32"],[685,"core::cmp"],[686,"core::any"],[687,"core::fmt"],[688,"core::slice::iter"]],"d":["","","A fixed capacity double-ended queue.","A view into an entry in the map","A <code>IndexMap</code> using the default FNV hasher","A <code>IndexSet</code> using the default FNV hasher. A list of all …","A “history buffer”, similar to a write-only ring …","Fixed capacity <code>IndexMap</code>","An iterator over the items of a <code>IndexMap</code>.","A mutable iterator over the items of a <code>IndexMap</code>.","An iterator over the keys of a <code>IndexMap</code>.","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","Fixed capacity <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A fixed capacity map / dictionary that performs lookups …","The entry corresponding to the key <code>K</code> exists in the map","An occupied entry which can be manipulated","An iterator on the underlying buffer ordered from oldest …","","A fixed capacity <code>String</code>","The entry corresponding to the key <code>K</code> does not exist in the …","A view into an empty slot in the underlying map","A fixed capacity <code>Vec</code>","","","Returns a raw pointer to the vector’s buffer, which may …","Extracts a mutable slice containing the entire vector.","Returns a pair of mutable slices which contain, in order, …","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","Returns a raw pointer to the vector’s buffer.","","","","","","Returns the array slice backing the buffer, without …","Extracts a slice containing the entire vector.","Returns a pair of slices which contain, in order, the …","Returns a pair of slices which contain, in order, the …","Extracts a string slice containing the entire string.","Provides a reference to the back element, or None if the …","Provides a mutable reference to the back element, or None …","A priority queue implemented with a binary heap.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the maximum number of elements the deque can hold.","Returns the capacity of the buffer, which is the length of …","Returns the number of elements the map can hold","Returns the number of elements the set can hold","Returns the number of elements that the map can hold","Returns the maximum number of elements the String can hold","Returns the maximum number of elements the vector can hold.","Clears the deque, removing all values.","Clears the buffer, replacing every element with the …","Remove all key-value pairs in the map, while preserving …","Clears the set, removing all values.","Clears the map, removing all key-value pairs","Truncates this <code>String</code>, removing all contents.","Clears the vector, removing all values.","Clears the buffer, replacing every element with the given …","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns true if the map contains a value for the specified …","Returns true if the map contains a value for the specified …","","","","","","","","","","","","","Visits the values representing the difference, i.e. the …","","","","Returns <code>true</code> if <code>needle</code> is a suffix of the Vec.","Returns an entry for the corresponding key","","","","","","","","","","","","","","","","","","","","Extends the vec from an iterator.","","","Clones and writes all elements in a slice to the buffer.","Clones and appends all elements in a slice to the <code>Vec</code>.","Get the first key-value pair","Get the first value","Get the first key-value pair, with mutable access to the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Constructs a new vector with a fixed capacity of <code>N</code> and …","","Convert UTF-8 bytes into a <code>String</code>.","Convert UTF-8 bytes into a <code>String</code>, without checking that …","Provides a reference to the front element, or None if the …","Provides a mutable reference to the front element, or None …","Gets a reference to the value associated with this entry","Returns a reference to the value corresponding to the key.","Returns a reference to the value corresponding to the key","Gets a mutable reference to the value associated with this …","Returns a mutable reference to the value corresponding to …","Returns a mutable reference to the value corresponding to …","","","","","","","Overwrites the underlying map’s value with this entry’…","Inserts this entry into to underlying map, yields a …","Inserts a key-value pair into the map.","Adds a value to the set.","Inserts a key-value pair into the map.","Inserts an element at position <code>index</code> within the vector, …","Visits the values representing the intersection, i.e. the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the contents of the vector as an array of length <code>M</code> …","Converts a <code>String</code> into a byte vector.","","","","","","","","","","","","","","","","","","","Consumes this entry to yield to key associated with it","Consumes this entry and yields a reference to the …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns whether the deque is empty.","Returns true if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns true if the map contains no elements","Returns true if the vec is empty","Returns whether the deque is full (i.e. if …","Returns true if the vec is full","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Examples","Returns an iterator over the deque.","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the values of the set, in …","An iterator visiting all key-value pairs in arbitrary …","Returns an iterator that allows modifying each value.","Return an iterator over the key-value pairs of the map, in …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key that this entity corresponds to","Get the key associated with this entry","Return an iterator over the keys of the map, in insertion …","An iterator visiting all keys in arbitrary order","Get the last key-value pair","Get the last value","Get the last key-value pair, with mutable access to the …","Returns the number of elements currently in the deque.","Returns the current fill level of the buffer.","Return the number of key-value pairs in the map.","Returns the number of elements in the set.","Returns the number of elements in this map","A fixed capacity Multiple-Producer Multiple-Consumer …","","","","Constructs a new, empty deque with a fixed capacity of <code>N</code>","Constructs a new history buffer.","Creates an empty <code>IndexMap</code>.","Creates an empty <code>IndexSet</code>","Creates an empty <code>LinearMap</code>","Constructs a new, empty <code>String</code> with a fixed capacity of <code>N</code> …","Constructs a new, empty vector with a fixed capacity of <code>N</code>","Constructs a new history buffer, where every element is …","","","","","","","","Returns an iterator for iterating over the buffer from …","","","Removes the last character from the string buffer and …","Removes the last element from a vector and returns it, or …","Removes the item from the back of the deque and returns …","Removes an item from the back of the deque and returns it, …","Removes the item from the front of the deque and returns …","Removes an item from the front of the deque and returns …","Removes the last element from a vector and returns it","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the front of the deque","Appends an <code>item</code> to the front of the deque","Appends a given string slice onto the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Returns a reference to the most recently written value.","Removes this entry from the map and yields its value","Same as <code>swap_remove</code>","Removes a value from the set. Returns <code>true</code> if the value …","Removes a key from the map, returning the value at the key …","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Removes and returns the element at position <code>index</code> within …","Removes this entry from the map and yields its …","Resizes the Vec in-place so that len is equal to new_len.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","A fixed sorted priority linked list, similar to <code>BinaryHeap</code> …","Fixed capacity Single Producer Single Consumer (SPSC) queue","Returns <code>true</code> if <code>needle</code> is a prefix of the Vec.","Remove the key-value pair equivalent to <code>key</code> and return its …","Removes an element from the vector and returns it.","Removes an element from the vector and returns it.","Visits the values representing the symmetric difference, …","Shortens this <code>String</code> to the specified length.","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visits the values representing the union, i.e. all the …","Return an iterator over the values of the map, in …","An iterator visiting all values in arbitrary order","Return an iterator over mutable references to the the …","An iterator visiting all values mutably in arbitrary order","Writes an element to the buffer, overwriting the oldest …","","","","A priority queue implemented with a binary heap.","The binary heap kind: min-heap or max-heap","Max-heap","Min-heap","Structure wrapping a mutable reference to the greatest …","","","","","","","","","Returns the capacity of the binary heap.","Drops all items from the binary heap.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the underlying <code>Vec&lt;T,N&gt;</code>. Order is arbitrary and …","Checks if the binary heap is empty.","Returns an iterator visiting all values in the underlying …","Returns a mutable iterator visiting all values in the …","Returns the length of the binary heap.","Creates an empty BinaryHeap as a $K-heap.","Returns the <em>top</em> (greatest if max-heap, smallest if …","Returns a mutable reference to the greatest item in the …","Removes the <em>top</em> (greatest if max-heap, smallest if …","Removes the peeked value from the heap and returns it.","Removes the <em>top</em> (greatest if max-heap, smallest if …","Pushes an item onto the binary heap.","Pushes an item onto the binary heap without first checking …","","","","","","","","","","","","","MPMC queue with a capacity for N elements N must be a …","MPMC queue with a capability for 16 elements.","MPMC queue with a capability for 2 elements.","MPMC queue with a capability for 32 elements.","MPMC queue with a capability for 4 elements.","MPMC queue with a capability for 64 elements.","MPMC queue with a capability for 8 elements.","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Adds an <code>item</code> to the end of the queue","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates an empty queue","","","","Comes from <code>SortedLinkedList::find_mut</code>.","Iterator for the linked list.","The linked list kind: min-list or max-list","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Marker for Max sorted <code>SortedLinkedList</code>.","Marker for Min sorted <code>SortedLinkedList</code>.","A node in the <code>SortedLinkedList</code>.","The linked list.","Trait for defining an index for the linked list, never …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find an element in the list that can be changed and …","This will resort the element into the correct position in …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the linked list is empty.","Checks if the linked list is full.","Get an iterator over the sorted list.","Create a new linked list.","Create a new linked list.","Create a new linked list.","","","","","Peek at the first element.","Pops the first element in the list.","This will pop the element from the list.","Pop an element from the list without checking so the list …","Pushes an element to the linked list and sorts it into …","Pushes a value onto the list without checking if the list …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A queue “consumer”; it can dequeue items from the queue","An iterator over the items of a queue","A mutable iterator over the items of a queue","A queue “producer”; it can enqueue items into the queue","A statically allocated single producer single consumer …","","","","","","","","","","","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, without …","Returns the item in the front of the queue, without …","","Adds an <code>item</code> to the end of the queue","Adds an <code>item</code> to the end of the queue, returns back the <code>item</code>…","Adds an <code>item</code> to the end of the queue, without checking if …","Adds an <code>item</code> to the end of the queue, without checking if …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if the queue is empty","Returns <code>true</code> if the queue is full","Iterates from the front of the queue to the back","Returns an iterator that allows modifying each value","Returns the number of elements in the queue","Returns the number of elements in the queue","Returns the number of elements in the queue","Creates an empty queue with a fixed capacity of <code>N - 1</code>","","","","","Returns a reference to the item in the front of the queue …","Returns the item in the front of the queue without …","Returns if there are any items to dequeue. When this …","Returns if there is any space to enqueue a new item. When …","Splits a queue into producer and consumer endpoints","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,0,29,0,0,1,1,1,1,3,5,5,1,8,5,5,1,1,8,1,3,8,5,3,3,0,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,1,19,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,1,19,3,8,11,12,13,5,1,3,8,11,12,13,5,1,8,3,8,11,17,12,18,13,5,1,19,5,1,12,11,13,3,8,11,12,13,5,1,8,5,1,5,1,12,3,8,1,1,11,8,11,12,13,5,5,5,1,1,1,1,1,1,8,8,11,11,12,12,1,1,1,8,1,11,12,11,3,8,11,12,13,5,5,1,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,1,19,11,12,13,5,5,5,1,1,5,5,5,3,3,39,11,13,39,11,13,5,1,11,13,11,13,39,41,11,12,13,1,12,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,1,19,1,5,3,3,3,11,11,11,17,42,43,46,47,12,18,13,1,1,1,19,41,39,12,3,11,12,13,1,3,1,12,12,3,11,12,13,3,11,13,39,41,11,13,11,12,11,3,8,11,12,13,0,5,5,5,3,8,11,12,13,5,1,8,17,42,43,46,47,18,19,8,5,1,5,1,3,3,3,3,1,5,1,3,3,3,3,5,1,8,39,11,12,13,5,1,39,1,1,11,12,1,1,1,0,0,1,11,1,1,12,5,1,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,5,5,5,5,5,5,5,5,5,1,1,19,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,1,19,3,8,29,39,41,11,17,42,43,46,47,12,18,13,5,1,19,12,11,13,11,13,8,5,5,1,0,0,0,0,0,79,80,60,62,79,80,60,62,60,60,60,60,62,62,62,60,79,80,60,62,79,80,60,62,60,60,60,60,60,60,60,60,60,60,62,60,60,60,79,80,60,62,79,80,60,62,79,80,60,62,0,0,0,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,0,0,0,0,0,0,0,81,82,83,72,73,69,66,67,68,81,82,83,72,73,69,66,67,68,66,67,68,66,67,68,69,69,72,69,66,67,68,72,69,72,66,67,68,81,82,83,72,73,69,66,67,68,81,82,83,72,73,69,66,67,68,73,72,72,72,72,72,72,73,66,67,68,72,72,69,72,72,72,81,82,83,72,73,69,66,67,68,81,82,83,72,73,69,66,67,68,81,82,83,72,73,69,66,67,68,0,0,0,0,0,74,77,78,75,76,74,77,78,75,76,74,75,76,74,77,74,74,75,74,75,74,74,76,74,76,74,74,74,77,78,75,76,74,74,77,78,75,76,74,74,77,78,74,74,74,74,74,75,76,74,77,78,77,78,74,75,75,76,74,74,77,78,75,76,74,77,78,75,76,74,77,78,75,76],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],[[1,[-1]]],[]],[[[1,[-1]]],[[2,[-1]]],[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],[[2,[-1]]],[]],[[[3,[-1]]],[[4,[[2,[-1]],[2,[-1]]]]],[]],[5,6],[5,[[1,[7]]]],[[[1,[-1]]],[],[]],[[[8,[-1]]],[[2,[-1]]],[]],[5,6],[5,[[2,[7]]]],[[[1,[-1]]],[[1,[-1]]],[]],[[[1,[-1]]],[[2,[-1]]],[]],[[[8,[-1]]],[[2,[-1]]],[]],[[[1,[-1]]],[[2,[-1]]],[]],[[[3,[-1]]],[[4,[[2,[-1]],[2,[-1]]]]],[]],[[[8,[-1]]],[[4,[[2,[-1]],[2,[-1]]]]],[]],[5,6],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],10,[]],[[[8,[-1]]],10,[]],[[[11,[-1,-2,-3]]],10,[],[],[]],[[[12,[-1,-2]]],10,[],[]],[[[13,[-1,-2]]],10,14,[]],[5,10],[[[1,[-1]]],10,[]],[[[3,[-1]]],4,[]],[[[8,[-1]]],4,[]],[[[11,[-1,-2,-3]]],4,[],[],[]],[[[12,[-1,-2]]],4,[],[]],[[[13,[-1,-2]]],4,14,[]],[5,4],[[[1,[-1]]],4,[]],[[[8,[-1]],-1],4,[15,16]],[[[3,[-1]]],[[3,[-1]]],16],[[[8,[-1]]],[[8,[-1]]],16],[[[11,[-1,-2,-3]]],[[11,[-1,-2,-3]]],16,16,16],[[[17,[-1,-2]]],[[17,[-1,-2]]],[],[]],[[[12,[-1,-2]]],[[12,[-1,-2]]],16,16],[[[18,[-1]]],[[18,[-1]]],[]],[[[13,[-1,-2]]],[[13,[-1,-2]]],[14,16],16],[5,5],[[[1,[-1]]],[[1,[-1]]],16],[[[19,[-1]]],[[19,[-1]]],16],[[5,5],20],[[[1,[-1]],[1,[-1]]],20,21],[[[12,[-2,-3]],-1],22,[23,14,24],[[25,[-1]],14,24],26],[[[11,[-2,-3,-4]],-1],22,[23,14,24],[[25,[-1]],14,24],[],26],[[[13,[-1,-2]],-1],22,14,[]],[[],[[3,[-1]]],[]],[[],[[8,[-1]]],[]],[[],[[11,[-1,-2,-3]]],[],[],27],[[],[[12,[-1,-2]]],[],27],[[],[[13,[-1,-2]]],14,[]],[[],5],[[],[[1,[-1]]],[]],[[[8,[-1]]],[[2,[-1]]],[]],[5,6],[[[1,[-1]]],[[2,[-1]]],[]],[5,6],[[[1,[-1]]],[[2,[-1]]],[]],[[[12,[-1,-2]],[12,[-1,-3]]],[[0,[-1,-3]]],[14,24],26,26],[[[3,[-1]]],4,[]],[[[8,[-1]]],4,[]],[[[1,[-1]]],4,[]],[[[1,[-1]],[2,[-1]]],22,28],[[[11,[-1,-2,-3]],-1],[[29,[-1,-2]]],[14,24],[],26],[[[8,[-1]],[8,[-1]]],22,28],[[[11,[-1,-2,-3]],[11,[-1,-2,-4]]],22,[14,24],14,26,26],[[[12,[-1,-2]],[12,[-1,-3]]],22,[14,24],26,26],[[[13,[-1,-2]],[13,[-1,-2]]],22,14,28],[[5,6],22],[[5,6],22],[[5,5],22],[[[1,[-2]],[2,[-1]]],22,[],[[28,[-1]]]],[[[1,[-2]],[2,[-1]]],22,[],[[28,[-1]]]],[[[1,[-2]],[30,[-1]]],22,[],[[28,[-1]]]],[[[1,[-2]],[2,[-1]]],22,[],[[28,[-1]]]],[[[1,[-2]],[1,[-1]]],22,[],[[28,[-1]]]],[[[1,[-2]],[30,[-1]]],22,[],[[28,[-1]]]],[[[8,[-1]],-2],4,16,[[32,[],[[31,[-1]]]]]],[[[8,[-1]],-2],4,[],[[32,[],[[31,[-1]]]]]],[[[11,[-1,-2,-3]],-4],4,[14,24],[],26,[[32,[],[[31,[[4,[-1,-2]]]]]]]],[[[11,[-1,-2,-3]],-4],4,[14,24,15],15,26,[[32,[],[[31,[[4,[-1,-2]]]]]]]],[[[12,[-1,-2]],-3],4,[14,24,15],26,[[32,[],[[31,[-1]]]]]],[[[12,[-1,-2]],-3],4,[14,24],26,[[32,[],[[31,[-1]]]]]],[[[1,[-1]],-2],4,[],[[32,[],[[31,[-1]]]]]],[[[1,[-1]],-2],4,[],[[32,[],[[31,[-1]]]]]],[[[1,[-1]],-2],4,15,[[32,[],[[31,[-1]]]]]],[[[8,[-1]],[2,[-1]]],4,16],[[[1,[-1]],[2,[-1]]],[[33,[4,4]]],16],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[],[],[]],[[[12,[-1,-2]]],[[9,[-1]]],[],[]],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[],[],[]],[[[3,[-1]],34],35,36],[[[8,[-1]],34],35,36],[[[11,[-1,-2,-3]],34],35,36,36,[]],[[[12,[-1,-2]],34],35,36,[]],[[[13,[-1,-2]],34],35,[14,36],36],[[5,34],35],[[5,34],35],[[[1,[-1]],34],35,36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-3,[[11,[-1,-2,-4]]],[14,24],[],[[32,[],[[31,[[4,[-1,-2]]]]]]],[26,27]],[-2,[[12,[-1,-3]]],[14,24],[[32,[],[[31,[-1]]]]],[26,27]],[-3,[[13,[-1,-2]]],14,[],[[32,[],[[31,[[4,[-1,-2]]]]]]]],[-1,5,[[32,[],[[31,[37]]]]]],[-1,5,[[32,[],[[31,[6]]]]]],[-1,5,[[32,[],[[31,[37]]]]]],[-2,[[1,[-1]]],[],[[32,[],[[31,[-1]]]]]],[[[2,[-1]]],[[33,[[1,[-1]],4]]],16],[6,[[33,[5,-1]]],[]],[[[1,[7]]],[[33,[5,38]]]],[[[1,[7]]],5],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[39,[-1,-2]]],-2,[14,24],[]],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,24,14],[[25,[-1]],14,24],[],26],[[[13,[-2,-3]],-1],[[9,[-3]]],[14,23],[[25,[-1]],14],[]],[[[39,[-1,-2]]],-2,[14,24],[]],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,24,14],[[25,[-1]],14,24],[],26],[[[13,[-2,-3]],-1],[[9,[-3]]],[14,23],[[25,[-1]],14],[]],[[5,-1],4,40],[[[1,[-1]],-2],4,24,40],[[[11,[-2,-3,-4]],-1],-3,[23,14,24],[14,24,[25,[-1]]],[],26],[[[13,[-2,-3]],-1],-3,[14,23],[[25,[-1]],14],[]],[[[11,[-2,-3,-4]],-1],-3,[23,14,24],[14,24,[25,[-1]]],[],26],[[[13,[-2,-3]],-1],-3,[14,23],[[25,[-1]],14],[]],[[[39,[-1,-2]],-2],-2,[14,24],[]],[[[41,[-1,-2]],-2],[[33,[-2,-2]]],[14,24],[]],[[[11,[-1,-2,-3]],-1,-2],[[33,[[9,[-2]],[4,[-1,-2]]]]],[14,24],[],26],[[[12,[-1,-2]],-1],[[33,[22,-1]]],[14,24],26],[[[13,[-1,-2]],-1,-2],[[33,[[9,[-2]],[4,[-1,-2]]]]],14,[]],[[[1,[-1]],10,-1],[[33,[4,-1]]],[]],[[[12,[-1,-2]],[12,[-1,-3]]],[[0,[-1,-3]]],[14,24],26,26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[33,[[30,[-1]],[1,[-1]]]]],[]],[5,[[1,[7]]]],[[[3,[-1]]],-2,[],[]],[[[3,[-1]]],-2,[],[]],[[[3,[-1]]],-2,[],[]],[[[11,[-1,-2,-3]]],-4,[],[],[],[]],[[[11,[-1,-2,-3]]],-4,[],[],[],[]],[[[11,[-1,-2,-3]]],-4,[],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2]]],-3,[14,24],26,[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-3,14,[],[]],[[[1,[-1]]],-2,[],[]],[[[1,[-1]]],-2,[],[]],[[[1,[-1]]],-2,[],[]],[-1,-2,[],[]],[[[41,[-1,-2]]],-1,[14,24],[]],[[[39,[-1,-2]]],-2,[14,24],[]],[[[12,[-1,-2]],[12,[-1,-3]]],22,[14,24],26,26],[[[3,[-1]]],22,[]],[[[11,[-1,-2,-3]]],22,[],[],[]],[[[12,[-1,-2]]],22,[],[]],[[[13,[-1,-2]]],22,14,[]],[[[1,[-1]]],22,[]],[[[3,[-1]]],22,[]],[[[1,[-1]]],22,[]],[[[12,[-1,-2]],[12,[-1,-3]]],22,[14,24],26,26],[[[12,[-1,-2]],[12,[-1,-3]]],22,[14,24],26,26],[[[3,[-1]]],[[0,[-1]]],[]],[[[11,[-1,-2,-3]]],[[17,[-1,-2]]],[],[],[]],[[[12,[-1,-2]]],[[18,[-1]]],[],[]],[[[13,[-1,-2]]],[[0,[-1,-2]]],14,[]],[[[3,[-1]]],[[0,[-1]]],[]],[[[11,[-1,-2,-3]]],[[42,[-1,-2]]],[],[],[]],[[[13,[-1,-2]]],[[0,[-1,-2]]],14,[]],[[[39,[-1,-2]]],-1,[14,24],[]],[[[41,[-1,-2]]],-1,[14,24],[]],[[[11,[-1,-2,-3]]],[[43,[-1,-2]]],[],[],[]],[[[13,[-1,-2]]],[[0,[[44,[],[[31,[-1]]]]]]],14,[]],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[],[],[]],[[[12,[-1,-2]]],[[9,[-1]]],[],[]],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[],[],[]],[[[3,[-1]]],10,[]],[[[8,[-1]]],10,[]],[[[11,[-1,-2,-3]]],10,[],[],[]],[[[12,[-1,-2]]],10,[],[]],[[[13,[-1,-2]]],10,14,[]],0,[[5,6],22],[[5,6],22],[[5,5],22],[[],[[3,[-1]]],[]],[[],[[8,[-1]]],[]],[[],[[11,[-1,-2,[45,[-3]]]]],[],[],[]],[[],[[12,[-1,[45,[-2]]]]],[],[]],[[],[[13,[-1,-2]]],[],[]],[[],5],[[],[[1,[-1]]],[]],[-1,[[8,[-1]]],[15,16]],[[[17,[-1,-2]]],[[9,[-3]]],[],[],[]],[[[42,[-1,-2]]],[[9,[-3]]],[],[],[]],[[[43,[-1,-2]]],[[9,[-3]]],[],[],[]],[[[46,[-1,-2]]],[[9,[-3]]],[],[],[]],[[[47,[-1,-2]]],[[9,[-3]]],[],[],[]],[[[18,[-1]]],[[9,[-2]]],[],[]],[[[19,[-1]]],[[9,[-1]]],[]],[[[8,[-1]]],[[19,[-1]]],[]],[[5,5],[[9,[20]]]],[[[1,[-1]],[1,[-1]]],[[9,[20]]],48],[5,[[9,[37]]]],[[[1,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],-1,[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[5,37],[[33,[4,4]]]],[[[1,[-1]],-1],[[33,[4,-1]]],[]],[[[3,[-1]],-1],[[33,[4,-1]]],[]],[[[3,[-1]],-1],4,[]],[[[3,[-1]],-1],[[33,[4,-1]]],[]],[[[3,[-1]],-1],4,[]],[[5,6],[[33,[4,4]]]],[[[1,[-1]],-1],4,[]],[[[8,[-1]]],[[9,[-1]]],[]],[[[39,[-1,-2]]],-2,[14,24],[]],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,24,14],[[25,[-1]],14,24],[],26],[[[12,[-2,-3]],-1],22,[23,14,24],[[25,[-1]],14,24],26],[[[13,[-2,-3]],-1],[[9,[-3]]],[14,23],[[25,[-1]],14],[]],[[5,10],37],[[[1,[-1]],10],-1,[]],[[[39,[-1,-2]]],[[4,[-1,-2]]],[14,24],[]],[[[1,[-1]],10,-1],[[33,[4,4]]],16],[[[1,[-1]],10],[[33,[4,4]]],[16,27]],[[[11,[-1,-2,-3]],-4],4,[14,24],[],26,[[50,[-1,-2],[[49,[22]]]]]],[[[12,[-1,-2]],-3],4,[14,24],26,[[50,[-1],[[49,[22]]]]]],[[[1,[-1]],-2],4,[],[[50,[-1],[[49,[22]]]]]],[[[1,[-1]],-2],4,[],[[50,[-1],[[49,[22]]]]]],[[[1,[-1]],10],4,[]],0,0,[[[1,[-1]],[2,[-1]]],22,28],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,24,14],[[25,[-1]],14,24],[],26],[[[1,[-1]],10],-1,[]],[[[1,[-1]],10],-1,[]],[[[12,[-1,-2]],[12,[-1,-3]]],[[0,[[44,[],[[31,[-1]]]]]]],[14,24],26,26],[[5,10],4],[[[1,[-1]],10],4,[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[51,[[33,[5,-1]]],[]],[52,[[33,[5,-1]]],[]],[53,[[33,[5,-1]]],[]],[54,[[33,[5,-1]]],[]],[55,[[33,[5,-1]]],[]],[-1,[[33,[-2]]],[],[]],[7,[[33,[5,-1]]],[]],[56,[[33,[5,-1]]],[]],[57,[[33,[5,-1]]],[]],[6,[[33,[5,-1]]],[]],[-1,[[33,[-2]]],[],[]],[[[2,[-1]]],[[33,[[1,[-1]],-2]]],16,[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[[12,[-1,-2]],[12,[-1,-3]]],[[0,[[44,[],[[31,[-1]]]]]]],[14,24],26,26],[[[11,[-1,-2,-3]]],[[46,[-1,-2]]],[],[],[]],[[[13,[-1,-2]]],[[0,[[44,[],[[31,[-2]]]]]]],14,[]],[[[11,[-1,-2,-3]]],[[47,[-1,-2]]],[],[],[]],[[[13,[-1,-2]]],[[0,[[44,[],[[31,[-2]]]]]]],14,[]],[[[8,[-1]],-1],4,[]],[[5,37],[[33,[4,59]]]],[[5,6],[[33,[4,59]]]],[[[1,[7]],6],35],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[60,[-1,-2]]],10,21,61],[[[60,[-1,-2]]],4,21,61],[[[60,[-1,-2]]],[[60,[-1,-2]]],[21,16],61],[[],[[60,[-1,-2]]],21,61],[[[62,[-1,-2]]],-1,21,61],[[[62,[-1,-2]]],-1,21,61],[[[62,[-1,-2]]],4,21,61],[[[60,[-1,-2]],34],35,[21,36],61],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[60,[-1,-2]]],-3,21,61,[]],[[[60,[-1,-2]]],[[1,[-1]]],21,61],[[[60,[-1,-2]]],22,21,61],[[[60,[-1,-2]]],[[63,[-1]]],21,61],[[[60,[-1,-2]]],[[64,[-1]]],21,61],[[[60,[-1,-2]]],10,21,61],[[],[[60,[-1,-2]]],[],[]],[[[60,[-1,-2]]],[[9,[-1]]],21,61],[[[60,[-1,-2]]],[[9,[[62,[-1,-2]]]]],21,61],[[[60,[-1,-2]]],[[9,[-1]]],21,61],[[[62,[-1,-2]]],-1,21,61],[[[60,[-1,-2]]],-1,21,61],[[[60,[-1,-2]],-1],[[33,[4,-1]]],21,61],[[[60,[-1,-2]],-1],4,21,61],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[65,[-1]]],[]],[[[65,[-1]]],[[9,[-1]]],[]],[[[65,[-1]],-1],[[33,[4,-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[[],[[65,[-1]]],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,58,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[67,67],[68,68],[[66,66],20],[[67,67],20],[[68,68],20],[[[69,[-1,-2,-3]]],-4,21,70,71,[]],[[[69,[-1,-2,-3]]],-4,21,70,71,[]],[[[72,[-1,-2,-3]]],4,[],70,[]],[[[69,[-1,-2,-3]]],4,21,70,71],[[66,66],22],[[67,67],22],[[68,68],22],[[[72,[-1,-2,-3]],-4],[[9,[[69,[-1,-2,-3]]]]],21,70,71,[[50,[-1],[[49,[22]]]]]],[[[69,[-1,-2,-3]]],4,21,70,71],[[[72,[-1,-2,-3]],34],35,[21,36],70,71],[[66,34],35],[[67,34],35],[[68,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[72,[-1,-2,-3]]],22,21,70,71],[[[72,[-1,-2,-3]]],22,21,70,71],[[[72,[-1,-2,-3]]],[[73,[-1,-2,-3]]],21,70,71],[[],[[72,[-1,67,-2]]],[],[]],[[],[[72,[-1,66,-2]]],[],[]],[[],[[72,[-1,68,-2]]],[],[]],[[[73,[-1,-2,-3]]],[[9,[-4]]],21,70,71,[]],[[66,66],[[9,[20]]]],[[67,67],[[9,[20]]]],[[68,68],[[9,[20]]]],[[[72,[-1,-2,-3]]],[[9,[-1]]],21,70,71],[[[72,[-1,-2,-3]]],[[33,[-1,4]]],21,70,71],[[[69,[-1,-2,-3]]],-1,21,70,71],[[[72,[-1,-2,-3]]],-1,21,70,71],[[[72,[-1,-2,-3]],-1],[[33,[4,-1]]],21,70,71],[[[72,[-1,-2,-3]],-1],4,21,70,71],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],10,[]],[[[75,[-1]]],10,[]],[[[76,[-1]]],10,[]],[[[74,[-1]]],[[74,[-1]]],16],[[[77,[-1]]],[[77,[-1]]],[]],[[],[[74,[-1]]],[]],[[[74,[-1]]],[[9,[-1]]],[]],[[[75,[-1]]],[[9,[-1]]],[]],[[[74,[-1]]],-1,[]],[[[75,[-1]]],-1,[]],[[[74,[-1]]],4,[]],[[[74,[-1]],-1],[[33,[4,-1]]],[]],[[[76,[-1]],-1],[[33,[4,-1]]],[]],[[[74,[-1]],-1],4,[]],[[[76,[-1]],-1],4,[]],[[[74,[-1]],[74,[-1]]],22,28],[[[74,[-1]],34],35,36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[74,[-1]],-2],4,24,40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],-2,[],[]],[[[74,[-1]]],-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],22,[]],[[[74,[-1]]],22,[]],[[[74,[-1]]],[[77,[-1]]],[]],[[[74,[-1]]],[[78,[-1]]],[]],[[[74,[-1]]],10,[]],[[[75,[-1]]],10,[]],[[[76,[-1]]],10,[]],[[],[[74,[-1]]],[]],[[[77,[-1]]],[[9,[-2]]],[],[]],[[[78,[-1]]],[[9,[-2]]],[],[]],[[[77,[-1]]],[[9,[-2]]],[],[]],[[[78,[-1]]],[[9,[-2]]],[],[]],[[[74,[-1]]],[[9,[-1]]],[]],[[[75,[-1]]],[[9,[-1]]],[]],[[[75,[-1]]],22,[]],[[[76,[-1]]],22,[]],[[[74,[-1]]],[[4,[[76,[-1]],[75,[-1]]]]],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]]],"c":[],"p":[[5,"Vec",0],[1,"slice"],[5,"Deque",0],[1,"tuple"],[5,"String",0],[1,"str"],[1,"u8"],[5,"HistoryBuffer",0],[6,"Option",672],[1,"usize"],[5,"IndexMap",0],[5,"IndexSet",0],[5,"LinearMap",0],[10,"Eq",673],[10,"Copy",674],[10,"Clone",675],[5,"IndexMapIter",0],[5,"IndexSetIter",0],[5,"OldestOrdered",0],[6,"Ordering",673],[10,"Ord",673],[1,"bool"],[10,"Sized",674],[10,"Hash",676],[10,"Borrow",677],[10,"BuildHasher",676],[10,"Default",678],[10,"PartialEq",673],[6,"Entry",0],[1,"array"],[17,"Item"],[10,"IntoIterator",679],[6,"Result",680],[5,"Formatter",681],[8,"Result",681],[10,"Debug",681],[1,"char"],[5,"Utf8Error",682],[5,"OccupiedEntry",0],[10,"Hasher",676],[5,"VacantEntry",0],[5,"IndexMapIterMut",0],[5,"IndexMapKeys",0],[10,"Iterator",683],[5,"BuildHasherDefault",684],[5,"IndexMapValues",0],[5,"IndexMapValuesMut",0],[10,"PartialOrd",673],[17,"Output"],[10,"FnMut",685],[1,"i8"],[1,"u32"],[1,"u16"],[1,"u64"],[1,"i16"],[1,"i64"],[1,"i32"],[5,"TypeId",686],[5,"Error",681],[5,"BinaryHeap",410],[10,"Kind",410],[5,"PeekMut",410],[5,"Iter",687],[5,"IterMut",687],[5,"MpMcQueue",465],[5,"LinkedIndexU8",483],[5,"LinkedIndexU16",483],[5,"LinkedIndexUsize",483],[5,"FindMut",483],[10,"SortedLinkedListIndex",483],[10,"Kind",483],[5,"SortedLinkedList",483],[5,"Iter",483],[5,"Queue",593],[5,"Consumer",593],[5,"Producer",593],[5,"Iter",593],[5,"IterMut",593],[6,"Min",410],[6,"Max",410],[5,"Min",483],[5,"Max",483],[5,"Node",483]],"b":[[24,"impl-AsMut%3CVec%3CT,+N%3E%3E-for-Vec%3CT,+N%3E"],[25,"impl-AsMut%3C%5BT%5D%3E-for-Vec%3CT,+N%3E"],[33,"impl-AsRef%3Cstr%3E-for-String%3CN%3E"],[34,"impl-AsRef%3C%5Bu8%5D%3E-for-String%3CN%3E"],[35,"impl-AsRef%3CVec%3CT,+N%3E%3E-for-Vec%3CT,+N%3E"],[36,"impl-AsRef%3C%5BT%5D%3E-for-Vec%3CT,+N%3E"],[131,"impl-PartialEq%3Cstr%3E-for-String%3CN%3E"],[132,"impl-PartialEq%3C%26str%3E-for-String%3CN%3E"],[133,"impl-PartialEq%3CString%3CN2%3E%3E-for-String%3CN1%3E"],[134,"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-Vec%3CA,+N%3E"],[135,"impl-PartialEq%3C%5BB%5D%3E-for-Vec%3CA,+N%3E"],[136,"impl-PartialEq%3C%26%5BB;+M%5D%3E-for-Vec%3CA,+N%3E"],[137,"impl-PartialEq%3C%26%5BB%5D%3E-for-Vec%3CA,+N%3E"],[138,"impl-PartialEq%3CVec%3CB,+N2%3E%3E-for-Vec%3CA,+N1%3E"],[139,"impl-PartialEq%3C%5BB;+M%5D%3E-for-Vec%3CA,+N%3E"],[140,"impl-Extend%3C%26T%3E-for-HistoryBuffer%3CT,+N%3E"],[141,"impl-Extend%3CT%3E-for-HistoryBuffer%3CT,+N%3E"],[142,"impl-Extend%3C(K,+V)%3E-for-IndexMap%3CK,+V,+S,+N%3E"],[143,"impl-Extend%3C(%26K,+%26V)%3E-for-IndexMap%3CK,+V,+S,+N%3E"],[144,"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S,+N%3E"],[145,"impl-Extend%3CT%3E-for-IndexSet%3CT,+S,+N%3E"],[146,"impl-Vec%3CT,+N%3E"],[147,"impl-Extend%3CT%3E-for-Vec%3CT,+N%3E"],[148,"impl-Extend%3C%26T%3E-for-Vec%3CT,+N%3E"],[159,"impl-Display-for-String%3CN%3E"],[160,"impl-Debug-for-String%3CN%3E"],[182,"impl-FromIterator%3Cchar%3E-for-String%3CN%3E"],[183,"impl-FromIterator%3C%26str%3E-for-String%3CN%3E"],[184,"impl-FromIterator%3C%26char%3E-for-String%3CN%3E"],[230,"impl-IntoIterator-for-%26Deque%3CT,+N%3E"],[231,"impl-IntoIterator-for-%26mut+Deque%3CT,+N%3E"],[232,"impl-IntoIterator-for-Deque%3CT,+N%3E"],[233,"impl-IntoIterator-for-%26IndexMap%3CK,+V,+S,+N%3E"],[234,"impl-IntoIterator-for-IndexMap%3CK,+V,+S,+N%3E"],[235,"impl-IntoIterator-for-%26mut+IndexMap%3CK,+V,+S,+N%3E"],[244,"impl-IntoIterator-for-Vec%3CT,+N%3E"],[245,"impl-IntoIterator-for-%26Vec%3CT,+N%3E"],[246,"impl-IntoIterator-for-%26mut+Vec%3CT,+N%3E"],[280,"impl-PartialEq%3C%26str%3E-for-String%3CN%3E"],[281,"impl-PartialEq%3Cstr%3E-for-String%3CN%3E"],[282,"impl-PartialEq%3CString%3CN2%3E%3E-for-String%3CN1%3E"],[354,"impl-TryFrom%3Ci8%3E-for-String%3CN%3E"],[355,"impl-TryFrom%3Cu32%3E-for-String%3CN%3E"],[356,"impl-TryFrom%3Cu16%3E-for-String%3CN%3E"],[357,"impl-TryFrom%3Cu64%3E-for-String%3CN%3E"],[358,"impl-TryFrom%3Ci16%3E-for-String%3CN%3E"],[360,"impl-TryFrom%3Cu8%3E-for-String%3CN%3E"],[361,"impl-TryFrom%3Ci64%3E-for-String%3CN%3E"],[362,"impl-TryFrom%3Ci32%3E-for-String%3CN%3E"],[363,"impl-TryFrom%3C%26str%3E-for-String%3CN%3E"],[636,"impl-IntoIterator-for-%26Queue%3CT,+N%3E"],[637,"impl-IntoIterator-for-%26mut+Queue%3CT,+N%3E"]]}],\
["kernel",{"doc":"","t":"JJJJJRRKRMHMCHMMHCMCCCMCFFFFFFONHNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNHNNNNNNNONHOOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHNNNNNNNNNNNNNNNNNNNNFFFFONNNNNNONNNNOOCNNNNNNNNNNNNNNCONOCOOOONOONNNNNNSFSSNNNNNNONNNNNNNNNNNNNNFONNNNNNNNNNONONNNFNNNONNONNNNNNNOONNNJKFSCHNNNNCNNNNNNNNNNNNMNNNNNCNCNNNNPFSPGFSSSNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONOOOONNNNNNNNNNNOFFNNNNNNNNNONNNNONONNNNNNNNONNNOONNNNNNNNFNNNNONNNNONNNNNOOONNNPPPPPPPPFGGGNONNNNNNNNNNNNNNNNONNNNOHNNNNNNNNNNONONNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNOOFFFONNNNNNONNNNNNNNNONNNNOONNNNNOONNNNNNNNNNNNNOONNNNNNNNNNNOFFFNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNOOONNOONNNNNNNNNSSJHHHHHHHHHHCHFFFONNNNNNNNNNNNONNNNNNNNNNNNONNNOONNNNNNNNNNNNNNN","n":["ALLOCATOR","FRAMEBUFFER","PCI_ACCESS","PCI_INFO","PHYSICAL_MEMORY_MANAGER","PageTable","PageTableSize","Platform","TaskContext","context_switch","create_framebuffer","drop_into_userspace","heap_allocator","initialize_pci","initialize_task_stacks","kernel_page_table","load_task","memory","new_task_context","object","pci","scheduler","switch_user_stack_pointer","syscall","Allocation","Hole","HoleAllocator","HoleInfo","HoleList","LockedHoleAllocator","addr","alloc","allocate_first_fit","allocate_first_fit","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","back_padding","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dealloc","deref","first","fmt","fmt","free","free","from","from","from","from","from","from","front_padding","get_min_size","handle_alloc_error","heap_bottom","heap_size","holes","info","info","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","new_uninitialized","new_uninitialized","next","size","size","split_hole","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","KernelStackAllocator","PhysicalMemoryManager","SlabAllocator","Stack","_phantom","alloc_bytes","allocate_n","as_any","as_any","as_any_mut","as_any_mut","bitmap","borrow","borrow","borrow_mut","borrow_mut","bottom","buddy","buddy_allocator","clone","clone_into","fmt","free_n","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","kernel_stack_allocator","kernel_stack_slots","new","physical_start","slab_allocator","slab_size","slot_bottom","slot_size","stack_bottom","to_owned","top","top","try_from","try_from","try_into","try_into","type_id","type_id","BASE_SIZE","BuddyAllocator","MAX_ORDER","NUM_BINS","add_range","allocate_block","allocate_n","as_any","as_any_mut","available_bytes","bins","borrow","borrow_mut","buddy_of","free_block","free_n","from","into","into_any","into_any_arc","into_any_rc","new","try_from","try_into","type_id","KernelStackAllocator","_phantom","alloc_kernel_stack","as_any","as_any_mut","borrow","borrow_mut","from","into","into_any","into_any_arc","into_any_rc","kernel_stack_slots","new","slot_size","try_from","try_into","type_id","SlabAllocator","alloc","as_any","as_any_mut","bitmap","borrow","borrow_mut","bottom","free","from","into","into_any","into_any_arc","into_any_rc","new","slab_size","top","try_from","try_into","type_id","KERNEL_OBJECT_ID_COUNTER","KernelObject","KernelObjectId","SENTINEL_KERNEL_ID","address_space","alloc_kernel_object_id","as_any","as_any_mut","borrow","borrow_mut","channel","clone","clone_into","cmp","downcast","downcast_arc","downcast_mut","downcast_rc","downcast_ref","eq","fmt","from","hash","id","into","into_any","into_any_arc","into_any_rc","is","memory_object","partial_cmp","task","to_owned","try_from","try_into","type_id","Active","AddressSpace","MAX_TASKS","NotActive","State","TaskSlot","USER_STACK_BOTTOM","USER_STACK_SLOT_SIZE","USER_STACK_TOP","alloc_task_slot","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","from","from","from","id","id","index","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","map_memory_object","memory_objects","new","owner","page_table","slot_bitmap","state","switch_from","switch_to","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_stack","ChannelEnd","Message","add_message","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","bytes","fmt","fmt","from","from","handle_objects","id","id","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","messages","new_channel","new_kernel_channel","num_handles","other_end","owner","receive","send","try_from","try_from","try_into","try_into","type_id","type_id","MemoryObject","as_any","as_any_mut","borrow","borrow_mut","flags","fmt","from","from_boot_info","id","id","into","into_any","into_any_arc","into_any_rc","new","owner","physical_address","size","try_from","try_into","type_id","AddressSpaceFull","Blocked","InvalidCapabilityEncoding","InvalidName","NameTooLong","NoKernelStackSlots","Ready","Running","Task","TaskBlock","TaskCreationError","TaskState","add_handle","address_space","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone_into","clone_into","context","decode_capabilities","eq","eq","fmt","fmt","fmt","from","from","from","from","from_boot_info","handles","id","id","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kernel_stack","kernel_stack_pointer","name","next_handle","owner","state","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_slot","user_stack_pointer","PciDevice","PciInfo","PciResolver","access","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bars","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_bus","check_device","check_function","class","clone","clone","clone_into","clone_into","device_id","devices","fmt","fmt","from","from","from","info","interface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","resolve","revision","sub_class","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vendor_id","CpuScheduler","KernelScheduler","Scheduler","add_task","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","blocked_queue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choose_next","drop_to_userspace","for_this_cpu","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","kernel_scheduler","new","new","ready_queue","running_task","scheduler","spawn_tasklet","switch_to_next","task_scheduler","timer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","NONE_BAR","NONE_OBJECT","SERVICE_MAP","create_memory_object","early_log","get_framebuffer","get_message","handle_syscall","map_memory_object","pci_get_info","register_service","send_message","subscribe_to_service","validation","yield_syscall","UserPointer","UserSlice","UserString","_phantom","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_write","from","from","from","into","into","into","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","length","new","new","new","ptr","ptr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","validate_lossy","validate_read","validate_read","validate_write","validate_write"],"q":[[0,"kernel"],[24,"kernel::heap_allocator"],[136,"kernel::memory"],[187,"kernel::memory::buddy_allocator"],[212,"kernel::memory::kernel_stack_allocator"],[230,"kernel::memory::slab_allocator"],[250,"kernel::object"],[286,"kernel::object::address_space"],[349,"kernel::object::channel"],[390,"kernel::object::memory_object"],[412,"kernel::object::task"],[500,"kernel::pci"],[561,"kernel::scheduler"],[615,"kernel::syscall"],[630,"kernel::syscall::validation"],[680,"hal::memory::virtual_address"],[681,"seed::boot_info"],[682,"pci_types"],[683,"core::marker"],[684,"hal::memory"],[685,"hal::memory::paging"],[686,"seed::boot_info"],[687,"core::alloc"],[688,"core::result"],[689,"core::any"],[690,"spinning_top::spinlock"],[691,"core::fmt"],[692,"core::fmt"],[693,"alloc::sync"],[694,"alloc::rc"],[695,"core::option"],[696,"core::any"],[697,"hal::memory::frame"],[698,"core::ops::range"],[699,"seed::boot_info"],[700,"core::marker"],[701,"core::fmt"],[702,"hal::memory"],[703,"poplar::syscall"],[704,"poplar::caps"],[705,"alloc::vec"],[706,"spinning_top::spinlock"],[707,"core::future::future"],[708,"poplar::syscall"],[709,"poplar::syscall::pci"],[710,"poplar::syscall"]],"d":["","","","","","","","","","Do the final part of a context switch: save all the state …","","Do the actual drop into usermode. This assumes that the …","","","Often, the platform will need to put stuff on either the …","","","","","","","","","","","","","","","","","","","Search for a big enough hole for the given <code>Layout</code> with its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Walk the list, starting at <code>hole</code> and free the allocation …","Free an allocation defined by <code>ptr</code> and <code>layout</code>. Unsafe …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Initialise the <code>HoleAllocator</code>. This should only be called …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Create a new <code>HoleList</code> that contains the given hole. Unsafe …","Create a new, uninitialized <code>HoleAllocator</code>. Before heap …","","","","","Split the given hole into …","","","","","","","","","","","","","","","","","","","","","","","","Represents a stack, either in kernel-space or user-space. …","","","","","","","","","","","","","","","This module implements a buddy allocator, an efficient …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The “base” block size - the smallest block size this …","","The largest block stored by the buddy allocator is …","","Add a range of <code>Frame</code>s to this allocator, marking them free …","Tries to allocate a block of the given order. If no blocks …","Allocate a block of <code>block_size</code> bytes from this allocator. …","","","","The bins of free blocks, where bin <code>i</code> contains blocks of …","","","Finds the starting frame of the block that is the buddy of …","Free a block starting at <code>start</code> of order <code>order</code>.","Free a block starting at <code>start</code> of <code>block_size</code> bytes. …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Try to allocate a slab out of the allocator. Returns <code>None</code> …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","The next available <code>KernelObjectId</code>. It is shared between …","This trait should be implemented by all types that …","Each kernel object is assigned a unique 64-bit ID, which …","A kernel object ID of <code>0</code> is reserved as a sentinel value …","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …","Returns a mutable reference to the object within the trait …","Returns an <code>$crate::alloc_reexport::rc::Rc</code>-ed object from …","Returns a reference to the object within the trait object …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns true if the trait object wraps an object of type …","","","","","","","","","","","","","","","","","Try to allocate a slot for a Task. Creates a user stack …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a message <em>to</em> this <code>ChannelEnd</code>. Use <code>send</code> if you want to …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The actual objects extracted from the handles transferred …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The other end of the channel. If this is <code>None</code>, the channel…","","Try to “receive” a message from this <code>ChannelEnd</code>, …","Send a message through this <code>ChannelEnd</code>, to be received by …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Size of this MemoryObject in bytes.","","","","The <code>AddressSpace</code> that this task has been created in cannot …","","The byte stream describing the capabilities of an image is …","The task name is not valid UTF-8.","The loader can only load tasks that have a name that can …","The kernel stack allocator has run out of slots - this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode a capability stream (as found in a task’s image) …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The global <code>Scheduler</code> coordinates the main ‘run loop’ …","","","","","","","","","","","","","","","Choose the next task to be run. Returns <code>None</code> if no …","Performs the first transistion from the kernel into …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","List of Tasks ready to be scheduled. Backed by a <code>VecDeque</code> …","","","","Switch to the next scheduled task. This is called when a …","","","","","","","","","","","","","","Maps the name of a service to the channel used to register …","","","","","This is the architecture-independent syscall handler. It …","","","","","","This module contains functions that help us validate the …","","","Represents a slice of <code>T</code>s in userspace.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate this slice for a write, BUT DOES NOT ACTUALLY …"],"i":[0,0,0,0,0,11,11,0,11,11,0,11,0,0,11,11,0,0,11,0,0,0,11,0,0,0,0,0,0,0,27,18,0,25,28,18,21,25,27,22,28,18,21,25,27,22,22,28,18,21,25,27,22,28,18,21,25,27,22,27,22,27,22,18,18,25,27,22,0,25,28,18,21,25,27,22,22,25,0,28,28,28,21,22,28,28,18,21,25,27,22,28,18,21,25,27,22,28,18,21,25,27,22,28,18,21,25,27,22,25,28,18,21,21,27,0,27,22,28,18,21,25,27,22,28,18,21,25,27,22,28,18,21,25,27,22,0,0,0,0,17,16,16,16,7,16,7,44,16,7,16,7,44,16,0,7,7,7,16,16,7,16,7,16,7,16,7,16,7,0,17,16,7,0,44,7,17,7,7,44,7,16,7,16,7,16,7,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,45,45,45,45,0,45,45,45,47,47,47,47,47,45,45,45,45,47,45,45,45,45,47,0,45,0,45,45,45,45,53,0,0,53,0,0,0,0,0,51,53,52,51,53,52,51,53,52,51,53,52,51,53,53,52,51,53,52,51,51,51,52,53,52,51,53,52,51,53,52,51,53,52,51,51,51,51,51,51,51,51,51,51,53,52,51,53,52,51,53,52,51,52,0,0,58,59,58,59,58,59,58,59,58,59,59,58,59,58,59,58,58,59,58,59,58,59,58,59,58,58,58,58,59,58,58,58,58,59,58,59,58,59,58,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,73,69,73,73,73,73,69,69,0,0,0,0,66,66,66,68,69,73,66,68,69,73,66,68,69,73,66,68,69,73,66,68,69,68,69,66,0,68,69,68,69,73,66,68,69,73,66,66,66,66,66,68,69,73,66,68,69,73,66,68,69,73,66,68,69,73,66,66,66,66,66,66,68,69,66,68,69,73,66,68,69,73,66,68,69,73,66,66,0,0,0,74,74,75,76,74,75,76,75,74,75,76,74,75,76,74,74,74,75,75,76,75,76,75,76,75,76,74,75,76,74,75,74,75,76,74,75,76,74,75,76,74,75,76,74,75,75,75,76,74,75,76,74,75,76,74,75,76,75,0,0,0,14,14,92,77,14,92,77,77,14,92,77,14,92,77,77,14,14,14,92,77,14,92,77,14,92,77,14,92,77,14,92,77,14,14,77,77,77,92,14,14,14,92,14,92,77,14,92,77,14,92,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,87,88,89,87,88,89,87,88,89,87,88,89,87,87,88,89,87,88,89,87,88,89,87,88,89,88,87,88,89,87,88,87,88,89,87,88,89,87,88,89,89,89,87,88,87,88],"f":[0,0,0,0,0,0,0,0,0,[[1,1,-1,-1],2,[]],[3,2],[[-1,1,1],4,[]],0,[-1,2,[5,6]],[[7,7,1],[[2,[1,1]]]],[[[11,[],[[8,[-1]],[9,[-2]],[10,[-3]]]]],-2,12,[[13,[-1]],6],[]],[[[14,[-1]],15,16,[17,[-1]]],2,11],0,[[1,1,1],-1,[]],0,0,0,[1,1],0,0,0,0,0,0,0,0,[[18,19],20],[[21,19],[[24,[22,23]]]],[[25,19],[[24,[20,23]]]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[22,22],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[18,20,19],2],[18,[[29,[28]]]],0,[[27,30],31],[[22,30],31],[[21,1,32],2],[[25,20,19],2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],32],[19,4],0,0,0,[21,27],0,[[28,1,32],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[1,32],25],[[],28],[[],18],0,0,0,[[27,19],[[36,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],0,0,0,0,0,[[16,32],38],[[16,32],[[40,[[39,[-1]]]]],12],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[7,7],[[-1,-2],2,[],[]],[[7,30],31],[[16,[39,[-1]],32],2,12],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],0,0,[41,16],0,0,0,0,0,0,[-1,-2,[],[]],0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],0,0,0,0,[[42,[40,[39]]],2],[[42,32],[[36,[38]]]],[[42,43],[[36,[38]]]],[-1,26,[]],[-1,26,[]],[42,43],0,[-1,-2,[],[]],[-1,-2,[],[]],[[38,32],38],[[42,38,32],2],[[42,38,43],2],[-1,-1,[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[],42],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],0,0,[[[17,[-1]],32,16],[[36,[7]]],11],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],0,[[1,1,32],[[17,[-1]]],11],0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],0,[44,[[36,[1]]]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[44,1],2],[-1,-1,[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[1,1,32],44],0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],0,0,0,0,0,[[],45],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[45,45],[[-1,-2],2,[],[]],[[45,45],46],[[[33,[47]]],[[24,[[33,[-1]],[33,[47]]]]],47],[[[34,[47]]],[[24,[[34,[-1]],[34,[47]]]]],[26,6,48,47]],[47,[[36,[-1]]],47],[[[35,[47]]],[[24,[[35,[-1]],[35,[47]]]]],47],[47,[[36,[-1]]],47],[[45,45],49],[[45,30],31],[-1,-1,[]],[[45,-1],2,50],[47,45],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[47,49],0,[[45,45],[[36,[46]]]],0,[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],0,0,0,0,0,0,0,0,0,[[[51,[-1]],32,16],[[36,[52]]],11],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[53,53],49],[[53,30],31],[[52,30],31],[[[51,[-1]],30],31,[11,54]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[51,[-1]]],45,11],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[51,[-1]],[34,[55]],1,16],[[24,[2,56]]],11],0,[[45,-1],[[34,[[51,[-2]]]]],57,11],0,0,0,0,[[[51,[-1]]],2,11],[[[51,[-1]]],2,11],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],0,0,0,[[58,59],2],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[59,30],31],[[58,30],31],[-1,-1,[]],[-1,-1,[]],0,[58,45],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],0,[45,[[2,[[34,[58]],[34,[58]]]]]],[45,[[34,[58]]]],[59,32],0,0,[[58,-2],[[24,[-1,60]]],[],[[62,[59],[[61,[[24,[-1,[2,[59,60]]]]]]]]]],[[58,59],[[24,[2,63]]]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],0,[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[55,30],31],[-1,-1,[]],[[45,64],[[34,[55]]]],[55,45],0,[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[45,38,32,65],[[34,[55]]]],0,0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[66,[-1]],[34,[47]]],67,11],0,[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[68,68],[69,69],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[[70,[20]]],[[24,[[72,[71]],73]]]],[[68,68],49],[[69,69],49],[[68,30],31],[[69,30],31],[[73,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[45,[34,[[51,[-1]]]],15,16,[17,[-1]]],[[24,[[34,[[66,[-1]]]],73]]],11],0,[[[66,[-1]]],45,11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],0,0,0,0,0,0,[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]],20],2,5],[[[74,[-1]],20,20],2,5],[[[74,[-1]],20,20,20],2,5],0,[75,75],[76,76],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[75,30],31],[[76,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[-1,[[2,[-1,76]]],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],0,0,0,0,[[[14,[-1]],[34,[[66,[-1]]]]],2,11],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[77,[-1]]],[[36,[[34,[[66,[-1]]]]]]],11],[[[14,[-1]]],4,11],[[[14,[-1]]],[[78,[[77,[-1]]]]],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[34,[-1]]],[[34,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],0,[[],[[14,[-1]]],11],[[],[[77,[-1]]],11],0,0,0,[[[14,[-1]],-2],79,11,[80,6]],[[[14,[-1]],69],2,11],0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],0,0,0,[[[34,[[66,[-1]]]],32,32,32],[[24,[67,81]]],11],[[[34,[[66,[-1]]]],32,32],[[24,[2,82]]],11],[[[34,[[66,[-1]]]],32],[[24,[67,83]]],11],[[[34,[[66,[-1]]]],32,32,32,32,32],[[24,[32,60]]],11],[[[14,[-1]],32,32,32,32,32,32],32,11],[[[34,[[66,[-1]]]],32,32,32,32],[[24,[2,56]]],11],[[[34,[[66,[-1]]]],32,32],[[24,[32,84]]],11],[[[34,[[66,[-1]]]],32,32],[[24,[67,85]]],11],[[[34,[[66,[-1]]]],32,32,32,32,32],[[24,[2,63]]],11],[[[34,[[66,[-1]]]],32,32],[[24,[67,86]]],11],0,[[[14,[-1]]],32,11],0,0,0,0,[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[33,[-1]]],[[33,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],[[[35,[-1]]],[[35,[26]]],[]],0,[49,[[87,[-1]]],[]],[32,[[88,[-1]]],[]],[[20,32],89],0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[89,[[24,[90,2]]]],[89,[[24,[[91,[90]],2]]]],[[[87,[-1]]],[[24,[-1,2]]],[]],[[[88,[-1]]],[[24,[[70,[-1]],2]]],[]],[[[87,[-1]],-1],[[24,[2,2]]],[]],[[[88,[-1]]],[[24,[[70,[-1]],2]]],[]]],"c":[],"p":[[5,"VAddr",680],[1,"tuple"],[5,"VideoModeInfo",681],[1,"never"],[10,"ConfigRegionAccess",682],[10,"Send",683],[5,"Stack",136],[17,"PageTableSize"],[17,"PageTable"],[17,"TaskContext"],[10,"Platform",0],[10,"FrameSize",684],[10,"PageTable",685],[5,"Scheduler",561],[5,"LoadedImage",681],[5,"PhysicalMemoryManager",136],[5,"KernelStackAllocator",212],[5,"LockedHoleAllocator",24],[5,"Layout",686],[1,"u8"],[5,"Hole",24],[5,"Allocation",24],[5,"AllocError",687],[6,"Result",688],[5,"HoleList",24],[10,"Any",689],[5,"HoleInfo",24],[5,"HoleAllocator",24],[8,"Spinlock",690],[5,"Formatter",691],[8,"Result",691],[1,"usize"],[5,"Box",692],[5,"Arc",693],[5,"Rc",694],[6,"Option",695],[5,"TypeId",689],[5,"PAddr",696],[5,"Frame",697],[5,"Range",698],[5,"BootInfo",681],[5,"BuddyAllocator",187],[8,"Bytes",684],[5,"SlabAllocator",230],[5,"KernelObjectId",250],[6,"Ordering",699],[10,"KernelObject",250],[10,"Sync",683],[1,"bool"],[10,"Hasher",700],[5,"AddressSpace",286],[5,"TaskSlot",286],[6,"State",286],[10,"Debug",691],[5,"MemoryObject",390],[6,"MapMemoryObjectError",701],[10,"FrameAllocator",684],[5,"ChannelEnd",349],[5,"Message",349],[6,"GetMessageError",701],[17,"Output"],[10,"FnOnce",702],[6,"SendMessageError",701],[5,"Segment",681],[5,"Flags",685],[5,"Task",412],[5,"Handle",703],[6,"TaskBlock",412],[6,"TaskState",412],[1,"slice"],[6,"Capability",704],[5,"Vec",705],[6,"TaskCreationError",412],[5,"PciResolver",500],[5,"PciDevice",500],[5,"PciInfo",500],[5,"CpuScheduler",561],[8,"SpinlockGuard",690],[5,"JoinHandle",706],[10,"Future",707],[6,"CreateMemoryObjectError",701],[6,"EarlyLogError",701],[6,"GetFramebufferError",708],[6,"PciGetInfoError",709],[6,"RegisterServiceError",701],[6,"SubscribeToServiceError",701],[5,"UserPointer",630],[5,"UserSlice",630],[5,"UserString",630],[1,"str"],[6,"Cow",710],[5,"KernelScheduler",561]],"b":[]}],\
["lock_api",{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"RRKRRFFTTTTRRFFFFFFKKKFKKKKKKKKKKFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMNNNMMMMMMMNNNMMMNNNNNNNNNNNNNNNNNMNMNMNNNNNNNNNNNNNNNNNNNNNNMNMMMNNNNNNNNNNMMMMNNNNNNNNNNNMNNN","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","make_guard_unchecked","make_guard_unchecked","make_read_guard_unchecked","make_upgradable_guard_unchecked","make_write_guard_unchecked","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"],[372,"core::marker"],[373,"core::default"],[374,"core::fmt"],[375,"core::fmt"],[376,"core::num::nonzero"],[377,"core::result"],[378,"core::option"],[379,"core::any"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Creates a new <code>MutexGuard</code> without checking if the mutex is …","Creates a new <code>ReentrantMutexGuard</code> without checking if the …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Creates a new <code>RwLockUpgradableReadGuard</code> without checking …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[42,41,0,16,17,0,0,16,4,3,17,42,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,1,1,3,5,7,8,10,11,9,9,9,9,12,12,13,14,15,13,14,15,13,14,15,5,19,7,20,8,10,11,22,23,5,19,10,23,24,10,11,25,10,25,5,19,7,20,8,10,11,22,23,13,14,15,5,5,19,19,7,7,20,20,8,8,10,10,11,11,22,22,23,23,13,14,13,14,15,15,15,15,46,47,13,13,13,3,14,14,14,15,15,15,5,19,7,20,8,10,11,22,23,13,14,15,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,13,14,15,16,16,13,3,14,17,17,15,17,17,15,3,14,5,16,13,3,14,17,17,33,21,13,14,15,15,15,5,19,7,20,8,10,22,23,5,13,14,15,4,13,14,15,15,15,7,8,10,11,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,16,13,3,14,17,41,41,42,13,3,14,17,41,33,43,43,41,42,13,3,14,21,44,44,5,19,7,20,8,10,22,23,15,15,15,15,15,15,15,15,15,21,11,44,11,44,11,11,11,11,15,15,15,46,47,13,3,14,15,5,19,7,20,8,10,11,22,23,16,3,17,9,1,3,5,19,7,20,8,10,11,22,23,17,9,21,12,5,7,8,10,11,5,7,8,10,11,15,21,11,11,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[1,2],[[[3,[-1,-2]]],2,1,4],[[[5,[-1,-2]]],2,1,6],[[[7,[-1,-2,-3]]],2,1,4,6],[[[8,[-1,-2]]],2,9,6],[[[10,[-1,-2]]],2,9,6],[[[11,[-1,-2]]],2,12,6],[9,2],[9,2],[9,2],[9,2],[12,2],[12,2],[[-1,-2],[[13,[-1,-2]]],[],[]],[[-1,-2,-3],[[14,[-1,-2,-3]]],[],[],[]],[[-1,-2],[[15,[-1,-2]]],[],[]],[[[13,[-1,-2]]],[],16,6],[[[14,[-1,-2,-3]]],[],16,4,6],[[[15,[-1,-2]]],[],17,6],[[],[[13,[-1,-2]]],16,[6,18]],[[],[[14,[-1,-2,-3]]],16,4,[6,18]],[[],[[15,[-1,-2]]],17,[6,18]],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[7,[-1,-2,-3]]],-3,16,4,6],[[[20,[-1,-2,-3]]],-3,16,4,6],[[[8,[-1,-2]]],-2,17,6],[[[10,[-1,-2]]],-2,17,6],[[[11,[-1,-2]]],-2,21,6],[[[22,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[10,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[24,2],[[[10,[-1,-2]]],[[8,[-1,-2]]],24,6],[[[11,[-1,-2]]],[[8,[-1,-2]]],25,6],[25,2],[[[10,[-1,-2]]],[[11,[-1,-2]]],25,6],[25,2],[[[5,[-1,-2]]],2,16,6],[[[19,[-1,-2]]],2,16,6],[[[7,[-1,-2,-3]]],2,16,4,6],[[[20,[-1,-2,-3]]],2,16,4,6],[[[8,[-1,-2]]],2,17,6],[[[10,[-1,-2]]],2,17,6],[[[11,[-1,-2]]],2,21,6],[[[22,[-1,-2]]],2,17,6],[[[23,[-1,-2]]],2,17,6],[[[13,[-1,-2]],26],27,16,[6,28]],[[[14,[-1,-2,-3]],26],27,16,4,[6,28]],[[[15,[-1,-2]],26],27,17,[6,28]],[[[5,[-1,-2]],26],27,16,[28,6]],[[[5,[-1,-2]],26],27,16,[29,6]],[[[19,[-1,-2]],26],27,16,[29,6]],[[[19,[-1,-2]],26],27,16,[28,6]],[[[7,[-1,-2,-3]],26],27,16,4,[29,6]],[[[7,[-1,-2,-3]],26],27,16,4,[28,6]],[[[20,[-1,-2,-3]],26],27,16,4,[29,6]],[[[20,[-1,-2,-3]],26],27,16,4,[28,6]],[[[8,[-1,-2]],26],27,17,[29,6]],[[[8,[-1,-2]],26],27,17,[28,6]],[[[10,[-1,-2]],26],27,17,[28,6]],[[[10,[-1,-2]],26],27,17,[29,6]],[[[11,[-1,-2]],26],27,21,[28,6]],[[[11,[-1,-2]],26],27,21,[29,6]],[[[22,[-1,-2]],26],27,17,[29,6]],[[[22,[-1,-2]],26],27,17,[28,6]],[[[23,[-1,-2]],26],27,17,[28,6]],[[[23,[-1,-2]],26],27,17,[29,6]],[[[13,[-1,-2]]],2,16,6],[[[14,[-1,-2,-3]]],2,16,4,6],[[[13,[-1,-2]]],2,1,6],[[[14,[-1,-2,-3]]],2,1,4,6],[[[15,[-1,-2]]],2,17,6],[[[15,[-1,-2]]],2,9,6],[[[15,[-1,-2]]],2,17,6],[[[15,[-1,-2]]],2,9,6],[-1,-1,[]],[-1,-1,[]],[30,-1,[]],[-1,-1,[]],[-1,[[13,[-2,-1]]],[],16],[-1,-1,[]],[30,-1,[]],[-1,-1,[]],[-1,[[14,[-2,-3,-1]]],[],16,4],[30,-1,[]],[-1,[[15,[-2,-1]]],[],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[-1,-2]]],-2,16,6],[[[14,[-1,-2,-3]]],-3,16,4,6],[[[15,[-1,-2]]],-2,17,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-2,16,[]],[[[14,[-1,-2,-3]]],-3,16,4,[]],[[[15,[-1,-2]]],-2,17,[]],[[[16,[],[[31,[-1]]]]],32,[]],[[[16,[],[[31,[-1]]]]],32,[]],[[[13,[-1,-2]]],32,16,6],[[[3,[-1,-2]]],32,16,4],[[[14,[-1,-2,-3]]],32,16,4,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[17,[],[[31,[-1]]]]],32,[]],[[[15,[-1,-2]]],32,17,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[17,[],[[31,[-1]]]]],32,[]],[[[15,[-1,-2]]],32,17,6],[[[3,[-1,-2]]],32,16,4],[[[14,[-1,-2,-3]]],32,16,4,6],[[[5,[-1,-2]]],-2,16,6],[[[16,[],[[31,[-1]]]]],2,[]],[[[13,[-1,-2]]],[[5,[-1,-2]]],16,6],[[[3,[-1,-2]]],2,16,4],[[[14,[-1,-2,-3]]],[[7,[-1,-2,-3]]],16,4,6],[[[17,[],[[31,[-1]]]]],2,[]],[[[17,[],[[31,[-1]]]]],2,[]],[33,2],[21,2],[[[13,[-1,-2]]],[[5,[-1,-2]]],16,6],[[[14,[-1,-2,-3]]],[[7,[-1,-2,-3]]],16,4,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],17,6],[[[15,[-1,-2]]],[[11,[-1,-2]]],21,6],[[[15,[-1,-2]]],[[10,[-1,-2]]],17,6],[[[5,[-1,-2]],-4],[[19,[-1,-3]]],16,6,6,[[35,[-2],[[34,[-3]]]]]],[[[19,[-1,-2]],-4],[[19,[-1,-3]]],16,6,6,[[35,[-2],[[34,[-3]]]]]],[[[7,[-1,-2,-3]],-5],[[20,[-1,-2,-4]]],16,4,6,6,[[35,[-3],[[34,[-4]]]]]],[[[20,[-1,-2,-3]],-5],[[20,[-1,-2,-4]]],16,4,6,6,[[35,[-3],[[34,[-4]]]]]],[[[8,[-1,-2]],-4],[[22,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[10,[-1,-2]],-4],[[23,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[22,[-1,-2]],-4],[[22,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[23,[-1,-2]],-4],[[23,[-1,-3]]],17,6,6,[[35,[-2],[[34,[-3]]]]]],[[[5,[-1,-2]]],[[13,[-1,-2]]],16,6],[-1,[[13,[-2,-1]]],[],16],[-1,[[14,[-2,-3,-1]]],[],16,4],[-1,[[15,[-2,-1]]],[],17],[4,36],[[[13,[-1,-2]]],-1,16,6],[[[14,[-1,-2,-3]]],-1,16,4,6],[[[15,[-1,-2]]],-1,17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],33,6],[[[7,[-1,-2,-3]]],[[14,[-1,-2,-3]]],16,4,6],[[[8,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[10,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[11,[-1,-2]]],[[15,[-1,-2]]],21,6],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[[[16,[],[[31,[-1]]]]],32,[]],[[[13,[-1,-2]]],[[38,[[5,[-1,-2]]]]],16,6],[[[3,[-1,-2]]],32,16,4],[[[14,[-1,-2,-3]]],[[38,[[7,[-1,-2,-3]]]]],16,4,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-1],32,[],[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-2],32,[],[]],[[[42,[],[[39,[-1]],[40,[-2]]]],-1],32,[],[]],[[[13,[-1,-2]]],[[38,[[5,[-1,-2]]]]],42,6],[[[3,[-1,-2]]],32,42,4],[[[14,[-1,-2,-3]]],[[38,[[7,[-1,-2,-3]]]]],42,4,6],[[[17,[],[[31,[-1]]]]],32,[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-1],32,[],[]],[33,32],[[43,-1],32,[]],[[43,-1],32,[]],[[[41,[],[[39,[-1]],[40,[-2]]]],-2],32,[],[]],[[[42,[],[[39,[-1]],[40,[-2]]]],-2],32,[],[]],[[[13,[-1,-2]]],[[38,[[5,[-1,-2]]]]],42,6],[[[3,[-1,-2]]],32,42,4],[[[14,[-1,-2,-3]]],[[38,[[7,[-1,-2,-3]]]]],42,4,6],[21,32],[[44,-1],32,[]],[[44,-1],32,[]],[[[5,[-1,-2]],-4],[[37,[[19,[-1,-3]],[5,[-1,-2]]]]],16,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[19,[-1,-2]],-4],[[37,[[19,[-1,-3]],[19,[-1,-2]]]]],16,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[7,[-1,-2,-3]],-5],[[37,[[20,[-1,-2,-4]],[7,[-1,-2,-3]]]]],16,4,6,6,[[35,[-3],[[34,[[38,[-4]]]]]]]],[[[20,[-1,-2,-3]],-5],[[37,[[20,[-1,-2,-4]],[20,[-1,-2,-3]]]]],16,4,6,6,[[35,[-3],[[34,[[38,[-4]]]]]]]],[[[8,[-1,-2]],-4],[[37,[[22,[-1,-3]],[8,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[10,[-1,-2]],-4],[[37,[[23,[-1,-3]],[10,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[22,[-1,-2]],-4],[[37,[[22,[-1,-3]],[22,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[23,[-1,-2]],-4],[[37,[[23,[-1,-3]],[23,[-1,-2]]]]],17,6,6,[[35,[-2],[[34,[[38,[-3]]]]]]]],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],41,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],33,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],43,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],43,6],[[[15,[-1,-2]]],[[38,[[8,[-1,-2]]]]],41,6],[[[15,[-1,-2]]],[[38,[[11,[-1,-2]]]]],21,6],[[[15,[-1,-2]]],[[38,[[11,[-1,-2]]]]],44,6],[[[15,[-1,-2]]],[[38,[[11,[-1,-2]]]]],44,6],[21,32],[[[11,[-1,-2]]],[[37,[[10,[-1,-2]],[11,[-1,-2]]]]],21,6],[[44,-1],32,[]],[[[11,[-1,-2]]],[[37,[[10,[-1,-2]],[11,[-1,-2]]]]],44,6],[[44,-1],32,[]],[[[11,[-1,-2]]],[[37,[[10,[-1,-2]],[11,[-1,-2]]]]],44,6],[[[11,[-1,-2]],-4],[[38,[-3]]],25,6,[],[[35,[-2],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],[[38,[-3]]],[44,25],6,[],[[35,[-2],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],[[38,[-3]]],[44,25],6,[],[[35,[-2],[[34,[-3]]]]]],[[[15,[-1,-2]]],[[38,[[10,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[38,[[10,[-1,-2]]]]],41,6],[[[15,[-1,-2]]],[[38,[[10,[-1,-2]]]]],41,6],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[[16,[],[[31,[-1]]]]],2,[]],[[[3,[-1,-2]]],2,16,4],[[[17,[],[[31,[-1]]]]],2,[]],[9,2],[1,2],[[[3,[-1,-2]]],2,1,4],[[[5,[-1,-2]]],2,1,6],[[[19,[-1,-2]]],2,1,6],[[[7,[-1,-2,-3]]],2,1,4,6],[[[20,[-1,-2,-3]]],2,1,4,6],[[[8,[-1,-2]]],2,9,6],[[[10,[-1,-2]]],2,9,6],[[[11,[-1,-2]]],2,12,6],[[[22,[-1,-2]]],2,9,6],[[[23,[-1,-2]]],2,9,6],[[[17,[],[[31,[-1]]]]],2,[]],[9,2],[21,2],[12,2],[[[5,[-1,-2]],-4],-3,16,6,[],[[35,[],[[34,[-3]]]]]],[[[7,[-1,-2,-3]],-5],-4,16,4,6,[],[[35,[],[[34,[-4]]]]]],[[[8,[-1,-2]],-4],-3,17,6,[],[[35,[],[[34,[-3]]]]]],[[[10,[-1,-2]],-4],-3,17,6,[],[[35,[],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],-3,21,6,[],[[35,[],[[34,[-3]]]]]],[[[5,[-1,-2]],-4],-3,1,6,[],[[35,[],[[34,[-3]]]]]],[[[7,[-1,-2,-3]],-5],-4,1,4,6,[],[[35,[],[[34,[-4]]]]]],[[[8,[-1,-2]],-4],-3,9,6,[],[[35,[],[[34,[-3]]]]]],[[[10,[-1,-2]],-4],-3,9,6,[],[[35,[],[[34,[-3]]]]]],[[[11,[-1,-2]],-4],-3,12,6,[],[[35,[],[[34,[-3]]]]]],[[[15,[-1,-2]]],[[11,[-1,-2]]],21,6],[21,2],[[[11,[-1,-2]]],[[10,[-1,-2]]],21,6],[[[11,[-1,-2]],-4],-3,25,6,[],[[35,[-2],[[34,[-3]]]]]],[[[15,[-1,-2]]],[[10,[-1,-2]]],17,6]],"c":[],"p":[[10,"RawMutexFair",0],[1,"tuple"],[5,"RawReentrantMutex",0],[10,"GetThreadId",0],[5,"MutexGuard",0],[10,"Sized",372],[5,"ReentrantMutexGuard",0],[5,"RwLockReadGuard",0],[10,"RawRwLockFair",0],[5,"RwLockWriteGuard",0],[5,"RwLockUpgradableReadGuard",0],[10,"RawRwLockUpgradeFair",0],[5,"Mutex",0],[5,"ReentrantMutex",0],[5,"RwLock",0],[10,"RawMutex",0],[10,"RawRwLock",0],[10,"Default",373],[5,"MappedMutexGuard",0],[5,"MappedReentrantMutexGuard",0],[10,"RawRwLockUpgrade",0],[5,"MappedRwLockReadGuard",0],[5,"MappedRwLockWriteGuard",0],[10,"RawRwLockDowngrade",0],[10,"RawRwLockUpgradeDowngrade",0],[5,"Formatter",374],[8,"Result",374],[10,"Debug",374],[10,"Display",374],[1,"never"],[17,"GuardMarker"],[1,"bool"],[10,"RawRwLockRecursive",0],[17,"Output"],[10,"FnOnce",375],[5,"NonZeroUsize",376],[6,"Result",377],[6,"Option",378],[17,"Duration"],[17,"Instant"],[10,"RawRwLockTimed",0],[10,"RawMutexTimed",0],[10,"RawRwLockRecursiveTimed",0],[10,"RawRwLockUpgradeTimed",0],[5,"TypeId",379],[5,"GuardSend",0],[5,"GuardNoSend",0]],"b":[[123,"impl-Debug-for-MutexGuard%3C\'a,+R,+T%3E"],[124,"impl-Display-for-MutexGuard%3C\'a,+R,+T%3E"],[125,"impl-Display-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[126,"impl-Debug-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[127,"impl-Display-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[128,"impl-Debug-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[129,"impl-Display-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[130,"impl-Debug-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[131,"impl-Display-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[132,"impl-Debug-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[133,"impl-Debug-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[134,"impl-Display-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[135,"impl-Debug-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[136,"impl-Display-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[137,"impl-Display-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[138,"impl-Debug-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[139,"impl-Debug-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"],[140,"impl-Display-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"]]}],\
["log",{"doc":"A lightweight logging facade.","t":"PPPPPPGGKFFPFFFSFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNMNNNNNNNQNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNMQQHNNHNNNNNNNNNNNNNNHHHHNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNQ","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::fmt"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,10,4,4,6,6,8,7,12,0,1,3,1,3,10,4,4,6,6,1,3,8,7,17,17,12,12,4,6,1,3,8,7,17,12,4,6,4,6,8,7,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,1,3,10,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,4,6,1,3,8,7,17,12,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[[10,8],11],[[4,4],11],[[4,6],11],[[6,6],11],[[6,4],11],[[8,8],11],[[7,7],11],[[12,12],11],0,[1,[[13,[5]]]],[[3,[13,[5]]],3],[1,[[13,[5]]]],[[3,[13,[5]]],3],[10,14],[[4,15],16],[[4,15],16],[[6,15],16],[[6,15],16],[[1,15],16],[[3,15],16],[[8,15],16],[[7,15],16],[[17,15],16],[[17,15],16],[[12,15],16],[[12,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[18,[4,-1]]],[]],[5,[[18,[6,-1]]],[]],[[4,-1],14,19],[[6,-1],14,19],[[8,-1],14,19],[[7,-1],14,19],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[[21,[],[[20,[4]]]]]]]],[[],[[0,[[21,[],[[20,[6]]]]]]]],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[13,[22]]]],[[3,[13,[22]]],3],[[10,1],14],0,0,[[],10],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[13,[5]]]],[[3,[13,[5]]],3],[1,[[13,[5]]]],[[3,[13,[5]]],3],[[],3],[[],7],[[4,6],[[13,[9]]]],[[4,4],[[13,[9]]]],[[6,4],[[13,[9]]]],[[6,6],[[13,[9]]]],[[8,8],[[13,[9]]]],[[7,7],[[13,[9]]]],[10,[[18,[14,17]]]],[10,[[18,[14,17]]]],[6,14],[6,14],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[13,[4]]]],[4,6],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0],"c":[],"p":[[5,"Record",0],[5,"Arguments",170],[5,"RecordBuilder",0],[6,"Level",0],[1,"str"],[6,"LevelFilter",0],[5,"MetadataBuilder",0],[5,"Metadata",0],[6,"Ordering",171],[10,"Log",0],[1,"bool"],[5,"ParseLevelError",0],[6,"Option",172],[1,"tuple"],[5,"Formatter",170],[8,"Result",170],[5,"SetLoggerError",0],[6,"Result",173],[10,"Hasher",174],[17,"Item"],[10,"Iterator",175],[1,"u32"],[5,"TypeId",176]],"b":[[57,"impl-PartialEq-for-Level"],[58,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[59,"impl-PartialEq-for-LevelFilter"],[60,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[70,"impl-Display-for-Level"],[71,"impl-Debug-for-Level"],[72,"impl-Display-for-LevelFilter"],[73,"impl-Debug-for-LevelFilter"],[78,"impl-Display-for-SetLoggerError"],[79,"impl-Debug-for-SetLoggerError"],[80,"impl-Display-for-ParseLevelError"],[81,"impl-Debug-for-ParseLevelError"],[128,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[129,"impl-PartialOrd-for-Level"],[130,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[131,"impl-PartialOrd-for-LevelFilter"]]}],\
["maitake",{"doc":"","t":"CQCCCCFNNNNNNNNNNNHPTTTTPFFFFFKFFFFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNQNNNOMNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFPTFFPFFFFFFFFFFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNCCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNCCNNCNNNNNNFFFFNNNNNNNNNNFFFFFFFPPFFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPFPPPPFGFFIGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFTFFTPGPKRFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFPTTTTPTFFFGFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNHHNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNOOFFNNNNNNNNNNNNNNNNNNNN","n":["future","new_static_scheduler","scheduler","sync","task","time","Yield","borrow","borrow_mut","fmt","from","into","into_future","new","poll","try_from","try_into","type_id","yield_now","Busy","DEFAULT_TICK_SIZE","DEFAULT_TICK_SIZE","DEFAULT_TICK_SIZE","DEFAULT_TICK_SIZE","Empty","Injector","LocalScheduler","LocalSpawner","LocalStaticScheduler","LocalStaticSpawner","Schedule","Scheduler","StaticScheduler","Stealer","TaskStub","Tick","TryStealError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_task","build_task","build_task","build_task","build_task","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","completed","current_task","current_task","current_task","current_task","current_task","current_task","current_task","current_task","current_task","default","default","default","default","default","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","has_remaining","initial_task_count","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new_static","new_with_static_stub","new_with_static_stub","new_with_static_stub","polled","schedule","schedule","schedule","schedule","schedule","spawn","spawn","spawn","spawn","spawn","spawn","spawn","spawn_allocated","spawn_allocated","spawn_allocated","spawn_allocated","spawn_allocated","spawn_allocated","spawn_allocated","spawn_half","spawn_n","spawn_one","spawned","spawner","spawner","task_count","tick","tick","tick","tick","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_steal","try_steal","try_steal","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","woken","woken_external","woken_internal","Closed","Err","MAX_PERMITS","Mutex","MutexGuard","Ok","OwnedMutexGuard","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","Semaphore","WaitCell","WaitMap","WaitQueue","WaitResult","acquire","acquire_owned","add_permits","available_permits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","close","close","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","lock","lock_owned","mutex","new","new","new","new","new","new","poll_wait","read","read_owned","rwlock","semaphore","spin","subscribe","to_owned","to_string","try_acquire","try_acquire_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","wait","wait","wait","wait_cell","wait_map","wait_owned","wait_owned","wait_queue","wake","wake","wake","wake_all","write","write_owned","Lock","Mutex","MutexGuard","OwnedMutexGuard","borrow","borrow_mut","fmt","from","into","into_future","poll","try_from","try_into","type_id","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","Acquire","AcquireOwned","Closed","InsufficientPermits","OwnedPermit","Permit","Semaphore","TryAcquireError","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","forget","forget","from","from","from","from","from","into","into","into","into","into","into_future","into_future","permits","permits","poll","poll","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","InitOnce","Lazy","Mutex","MutexGuard","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","fmt","fmt","fmt","fmt","fmt","force_unlock","from","from","from","from","get","get","get_if_present","get_mut","get_or_else","get_unchecked","init","init","into","into","into","into","lock","new","new","once","to_string","try_from","try_from","try_from","try_from","try_get","try_init","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","uninitialized","InitOnce","Lazy","TryInitError","borrow","borrow_mut","fmt","fmt","from","into","into_inner","to_string","try_from","try_into","type_id","Backoff","CachePadded","DEFAULT_MAX_EXPONENT","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","from","from","hash","into","into","into_inner","new","new","spin","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_max_exponent","Busy","Closed","PollWaitError","Subscribe","Wait","WaitCell","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_future","into_future","poll","poll","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AlreadyConsumed","Closed","Closed","Duplicate","EnqueueWait","Err","NeverAdded","NoMatch","Ok","Wait","WaitError","WaitMap","WaitOwned","WaitResult","WakeOutcome","Woke","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","drop","drop","enqueue","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_future","into_future","into_future","poll","poll","poll","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Wait","WaitOwned","WaitQueue","borrow","borrow","borrow_mut","borrow_mut","drop","drop","fmt","fmt","from","from","into","into","into_future","into_future","poll","poll","same_queue","same_queue","subscribe","subscribe","try_from","try_from","try_into","try_into","type_id","type_id","waits_on","waits_on","BoxStorage","Builder","Context","FINISHED","JoinError","JoinHandle","PENDING","Pending","Poll","Ready","Storage","StoredTask","Task","TaskId","TaskRef","Waker","as_raw","async_gen_ready","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch","cancel","cancel","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_output","from_output","from_raw","from_raw","from_raw","from_residual","from_residual","from_waker","hash","hash","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into_future","into_raw","into_raw","is_canceled","is_complete","is_complete","is_completed","is_pending","is_ready","kind","location","map","map_err","map_err","map_ok","map_ok","name","new","noop","output","partial_cmp","poll","spawn","spawn_allocated","spawn_local","spawn_local","spawn_local_allocated","spawn_local_allocated","task_ref","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wake","wake_by_ref","waker","will_wake","AlreadyInitialized","Duration","DurationTooLong","MAX","MICROSECOND","MILLISECOND","NANOSECOND","NoGlobalTimer","SECOND","Sleep","Timeout","Timer","TimerError","Turn","ZERO","abs_diff","add","add_assign","advance","advance_ticks","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","drop","duration","elapsed","eq","eq","expired","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_advance","force_advance_ticks","from","from","from","from","from","from","from","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","has_remaining","hash","into","into","into","into","into","into","into","into_future","into_future","is_zero","max_duration","mul","mul_assign","mul_f32","mul_f64","new","new","now","partial_cmp","pend_duration","pend_ticks","poll","poll","saturating_add","saturating_mul","saturating_sub","set_global_timer","sleep","sleep","sleep_ticks","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","ticks_to_next_deadline","time_to_next_deadline","timeout","timeout","timeout","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_sleep","try_sleep","try_timeout","try_timeout","type_id","type_id","type_id","type_id","type_id","type_id","type_id","max","requested","Elapsed","Timeout","borrow","borrow_mut","clone","clone_into","duration","duration","eq","fmt","fmt","from","get_mut","get_pin_mut","get_ref","into","into_inner","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"maitake"],[6,"maitake::future"],[19,"maitake::scheduler"],[207,"maitake::sync"],[392,"maitake::sync::mutex"],[406,"maitake::sync::rwlock"],[411,"maitake::sync::semaphore"],[474,"maitake::sync::spin"],[536,"maitake::sync::spin::once"],[550,"maitake::sync::util"],[586,"maitake::sync::wait_cell"],[624,"maitake::sync::wait_map"],[695,"maitake::sync::wait_queue"],[726,"maitake::task"],[920,"maitake::time"],[1077,"maitake::time::TimerError"],[1079,"maitake::time::timeout"],[1101,"core::fmt"],[1102,"core::fmt"],[1103,"core::result"],[1104,"core::any"],[1105,"core::option"],[1106,"core::future::future"],[1107,"core::marker"],[1108,"alloc::boxed"],[1109,"alloc::sync"],[1110,"core::cmp"],[1111,"core::marker"],[1112,"core::convert"],[1113,"core::convert"],[1114,"core::fmt"],[1115,"core::default"],[1116,"core::hash"],[1117,"core::hash"],[1118,"core::ops::control_flow"],[1119,"core::cmp"],[1120,"core::marker"],[1121,"core::convert"],[1122,"core::cmp"],[1123,"core::time"]],"d":["","Safely constructs a new <code>StaticScheduler</code> instance in a …","Schedulers for executing tasks.","Asynchronous synchronization primitives","The <code>maitake</code> task system.","Utilities for tracking time and constructing system timers.","A future that yields to the scheduler one or more times …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns a new future that yields <code>yields</code> times before …","","","","","Yield to the scheduler a single time before proceeding.","Tasks could not be stolen because the targeted queue …","How many tasks are polled per call to <code>StaticScheduler::tick</code>…","How many tasks are polled per call to …","How many tasks are polled per call to <code>Scheduler::tick</code>.","How many tasks are polled per call to <code>LocalScheduler::tick</code>.","No tasks were available to steal.","An injector queue for spawning tasks on multiple <code>Scheduler</code> …","A reference-counted scheduler for <code>!</code><code>Send</code> tasks.","A handle to a <code>LocalScheduler</code> that implements <code>Send</code>.","A statically-initialized scheduler for <code>!</code><code>Send</code> tasks.","A handle to a <code>LocalStaticScheduler</code> that implements <code>Send</code>.","Trait implemented by schedulers.","An atomically reference-counted single-core scheduler …","A statically-initialized scheduler implementation.","A handle for stealing tasks from a <code>Scheduler</code>’s run …","A stub <code>Task</code>.","Metrics recorded during a scheduler tick.","Errors returned by <code>Injector::try_steal</code>, …","","","","","","","","","","","","","","","","","","","","","","","Returns a new task <code>Builder</code> for configuring tasks prior to …","Returns a new task <code>Builder</code> for configuring tasks prior to …","Returns a new task <code>Builder</code> for configuring tasks prior to …","Returns a new task <code>Builder</code> for configuring tasks prior to …","Returns a new task <code>Builder</code> for configuring tasks prior to …","","","","","","","","","The number of polled tasks that <em>completed</em> on this …","Returns a <code>TaskRef</code> referencing the task currently being …","","Returns a <code>TaskRef</code> referencing the task currently being …","Returns a <code>TaskRef</code> referencing the task currently being …","","","Returns a <code>TaskRef</code> referencing the task currently being …","","Returns a <code>TaskRef</code> referencing the task currently being …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>true</code> if the tick completed with any tasks remaining in the …","Returns the number of tasks that were in the targeted …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a new <code>Injector</code> queue with a dynamically …","Returns a new <code>StaticScheduler</code> with a heap-allocated stub …","Returns a new <code>LocalStaticScheduler</code> with a heap-allocated …","Create a new unique stub <code>Task</code>.","Returns a new <code>Scheduler</code>.","Returns a new <code>LocalScheduler</code>.","Safely constructs a new <code>StaticScheduler</code> instance in a …","Returns a new injector queue.","Create a StaticScheduler with a static “stub” task …","Create a <code>LocalStaticScheduler</code> with a static “stub” …","The total number of tasks polled on this scheduler tick.","Schedule a task on this scheduler.","","","","","Spawns a new task on the injector queue, to execute on any …","Spawn a task.","Spawn a task.","Spawn a task on the <code>LocalStaticScheduler</code> this handle …","Spawn a task.","Spawn a <code>!</code><code>Send</code> task.","Spawn a task on the <code>LocalScheduler</code> this handle references.","Spawns a pre-allocated task on the injector queue.","Spawn a pre-allocated task","Spawn a pre-allocated, <code>Send</code> task.","Spawn a pre-allocated task on the <code>LocalStaticScheduler</code> …","Spawn a pre-allocated task","Spawn a pre-allocated <code>!</code><code>Send</code> task.","Spawn a pre-allocated task on the <code>LocalScheduler</code> this …","Steal half of the tasks currently in the targeted queue …","Steal up to <code>max</code> tasks from the targeted queue and spawn …","Steal one task from the targeted queue and spawn it on the …","The number of tasks that were spawned since the last tick.","Returns a new <code>LocalStaticSpawner</code> that can be used by other …","Returns a new <code>LocalSpawner</code> that can be used by other …","Returns the number of tasks currently in the targeted …","Tick this scheduler, polling up to <code>Self::DEFAULT_TICK_SIZE</code> …","Tick this scheduler, polling up to <code>Self::DEFAULT_TICK_SIZE</code> …","Tick this scheduler, polling up to <code>Self::DEFAULT_TICK_SIZE</code> …","Tick this scheduler, polling up to <code>Self::DEFAULT_TICK_SIZE</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to take tasks from the injector queue.","Attempt to steal tasks from this scheduler’s run queue.","Attempt to steal tasks from this scheduler’s run queue.","","","","","","","","","","","","Returns the total number of tasks woken since the last …","The number of tasks that were woken from outside of their …","The number of tasks that were woken from within their own …","An error indicating that a <code>WaitCell</code>, <code>WaitQueue</code> or <code>Semaphore</code>…","Contains the error value","The maximum number of permits a <code>Semaphore</code> may contain.","An asynchronous mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","Contains the success value","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An asynchronous readers-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","An asynchronous counting semaphore.","An atomically registered <code>Waker</code>.","A map of <code>Waker</code>s associated with keys, allowing tasks to be …","A queue of waiting tasks which can be woken in first-in, …","The result of waiting on a <code>WaitQueue</code> or <code>Semaphore</code>.","Acquire <code>permits</code> permits from the <code>Semaphore</code>, waiting …","Acquire <code>permits</code> permits from the <code>Semaphore</code>, waiting …","Add <code>permits</code> new permits to the semaphore.","Returns the number of permits currently available in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close the <code>WaitCell</code>.","Close the queue, indicating that it may no longer be used.","Closes the semaphore.","Close the queue, indicating that it may no longer be used.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Locks this mutex.","Locks this mutex, returning an owned RAII guard.","An asynchronous mutual exclusion lock.","Returns a new <code>Mutex</code> protecting the provided <code>data</code>.","Returns a new <code>RwLock</code> protecting the provided <code>data</code>, in an …","Returns a new <code>WaitCell</code>, with no <code>Waker</code> stored in it.","Returns a new <code>WaitMap</code>.","Returns a new <code>Semaphore</code> with <code>permits</code> permits available.","Returns a new <code>WaitQueue</code>.","Poll to wait on this <code>WaitCell</code>, consuming a stored wakeup or","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, returning an …","An asynchronous readers-writer lock.","An asynchronous counting semaphore.","Synchronous spinning-based synchronization primitives.","Eagerly subscribe to notifications from this <code>WaitCell</code>.","","","Try to acquire <code>permits</code> permits from the <code>Semaphore</code>, without …","Try to acquire <code>permits</code> permits from the <code>Semaphore</code>, without …","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to lock the mutex without waiting, returning <code>None</code> …","Attempts this mutex without waiting, returning an owned …","Attempts to acquire this <code>RwLock</code> for shared read access, …","Attempts to acquire this <code>RwLock</code> for shared read access, …","Attempts to acquire this <code>RwLock</code> for exclusive write …","Attempts to acquire this <code>RwLock</code> for exclusive write …","","","","","","","","","","","","","","Reusable utilities for synchronization primitives.","Wait to be woken up by this cell.","Wait to be woken up by this queue.","Wait to be woken up by this queue.","An atomically registered <code>Waker</code>, for waking a single task.","A map of <code>Waker</code>s associated with keys, so that a task can …","Wait to be woken up by this queue, returning a future that…","Wait to be woken up by this queue, returning a future that…","A queue of waiting tasks that can be woken in first-in, …","Wake the <code>Waker</code> stored in this cell.","Wake a certain task in the queue.","Wake the next task in the queue.","Wake <em>all</em> tasks currently in the queue.","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access,returning an …","A future returned by the <code>Mutex::lock</code> method.","An asynchronous mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An asynchronous readers-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","The future returned by the <code>Semaphore::acquire</code> method.","Future returned from <code>Semaphore::acquire_owned()</code>.","The semaphore has been closed, so additional permits …","The semaphore does not currently have enough permits to …","An owned RAII guard representing one or more permits …","A RAII guard representing one or more permits acquired …","An asynchronous counting semaphore.","Errors returned by <code>Semaphore::try_acquire</code>.","","","","","","","","","","","","","","","","","","","","","","Forget this permit, dropping it <em>without</em> returning the …","Forget this permit, dropping it <em>without</em> returning the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the count of semaphore permits owned by this <code>Permit</code>…","Returns the count of semaphore permits owned by this …","","","","","","","","","","","","","","","","","","","A cell which may be initialized a single time after it is …","A cell which will be lazily initialized by the provided …","A spinlock-based mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a mutex. …","","","","","","","","","","","","","","","","","","","","","Forcibly unlock the mutex.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Borrow the contents of this <code>InitOnce</code> cell, or panic if it …","Borrow the value, or initialize it if it has not yet been …","Returns the value of the lazy cell, if it has already been …","Borrow the value mutably, or initialize it if it has not …","Borrow the contents of this <code>InitOnce</code> cell, or initialize …","Borrow the contents of this <code>InitOnce</code> cell, <strong>without</strong> checking","Initialize the cell to <code>value</code>, panicking if it has already …","Ensure that the cell has been initialized.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Acquires a mutex, spinning until it is locked.","Returns a new <code>Lazy</code> cell, initialized with the provided …","Returns a new <code>Mutex</code> protecting the provided <code>data</code>.","Cells storing a value which must be initialized prior to …","","","","","","Borrow the contents of this <code>InitOnce</code> cell, if it has been …","Initialize the cell to <code>value</code>, returning an error if it has …","","","","","Attempts to acquire this lock without spinning","","","","","Returns a new <code>InitOnce</code> in the uninitialized state.","A cell which may be initialized a single time after it is …","A cell which will be lazily initialized by the provided …","Errors returned by <code>InitOnce::try_init</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the value that the caller attempted to initialize …","","","","","An exponential backoff for spin loops.","Aligns the wrapped value to the size of a cache line.","The default maximum exponent (2^8).","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the inner value and returns it.","Returns a new exponential backoff with the maximum …","Pads <code>value</code> to the length of a cache line.","Backs off in a spin loop.","","","","","","","","","Returns a new exponential backoff with the provided max …","The <code>Waker</code> was not registered because another task was …","The <code>Waker</code> was not registered because the <code>WaitCell</code> has been …","An error indicating that a <code>WaitCell</code> was closed or busy …","Future returned from <code>WaitCell::subscribe()</code>.","Future returned from <code>WaitCell::wait()</code>.","An atomically registered <code>Waker</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The received data has already been extracted","The <code>WaitMap</code> has already been closed.","The queue was already closed when the wake was attempted, …","The <code>WaitMap</code> already had an item matching the given key","A future that ensures a <code>Wait</code> has been added to a <code>WaitMap</code>.","Contains the error value","The <code>Wait</code> was never added to the <code>WaitMap</code>","No task matching the given key was found in the queue.","Contains the success value","Future returned from <code>WaitMap::wait()</code>.","Errors returned by <code>WaitMap::wait</code>, indicating a failed wake.","A map of <code>Waker</code>s associated with keys, allowing tasks to be …","Future returned from <code>WaitMap::wait_owned()</code>.","The result of a call to <code>WaitMap::wait()</code>.","The result of an attempted <code>WaitMap::wake()</code> operation.","The task was successfully woken, and the data was provided.","","","","","","","","","","","","","","","Returns a future that completes when the <code>Wait</code> item has been","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Future returned from <code>WaitQueue::wait()</code>.","Future returned from <code>WaitQueue::wait_owned()</code>.","A queue of waiting tasks which can be woken in first-in, …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if <code>self</code> and <code>other</code> are waiting on a …","Returns <code>true</code> if <code>self</code> and <code>other</code> are waiting on a …","Eagerly subscribe this future to wakeups from …","Eagerly subscribe this future to wakeups from …","","","","","","","Returns <code>true</code> if this <code>Wait</code> future is waiting for a …","Returns <code>true</code> if this <code>WaitOwned</code> future is waiting for a …","A type representing <code>Box</code> storage of a task","Builds a new <code>Task</code> prior to spawning it.","The context of an asynchronous task.","A helper constant for internal desugaring – produces …","Errors returned by awaiting a <code>JoinHandle</code>.","An owned permission to join a task (await its termination).","A helper constant for internal desugaring – produces …","Represents that a value is not ready yet.","Indicates whether a value is available or if the current …","Represents that a value is immediately ready.","A trait representing a heap allocation that can own a <code>Task</code>.","The type of a stored Task.","A task.","A unique identifier for a running task.","A type-erased, reference-counted pointer to a spawned <code>Task</code>.","A <code>Waker</code> is a handle for waking up a task by notifying its …","Get a reference to the underlying <code>RawWaker</code>.","A helper function for internal desugaring – produces …","","","","","","","","","","","","","","","","","","","","","","","Forcibly cancel the task.","Forcibly cancel the task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Use a <code>Wake</code>-able type as a <code>Waker</code>.","Moves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.","","Returns the argument unchanged.","","","Convert a raw task pointer into an owned, heap<code>allocated [</code>…","","Creates a new <code>Waker</code> from <code>RawWaker</code>.","","","Create a new <code>Context</code> from a <code>&amp;Waker</code>.","","","Returns a <code>TaskId</code> that uniquely identifies this task.","Returns a <code>TaskId</code> that uniquely identifies this task.","Returns the <code>TaskId</code> of the task that failed to join.","Returns a <code>TaskId</code> that uniquely identifies this task.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert an owned, heap-allocated <code>Task</code> type to a raw pointer","","Returns <code>true</code> if a task failed to join because it was …","Returns <code>true</code> if this task has completed.","Returns <code>true</code> if this task has completed.","Returns <code>true</code> if the task completed successfully before it …","Returns <code>true</code> if the poll is a <code>Pending</code> value.","Returns <code>true</code> if the poll is a <code>Poll::Ready</code> value.","Adds a static string which describes the type of the …","Overrides the task’s source code location.","Maps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a …","Maps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …","Maps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to …","Maps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …","Maps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by …","Adds a name to the tasks produced by this builder.","Create a new (non-heap-allocated) Task.","Creates a new <code>Waker</code> that does nothing when <code>wake</code> is called.","Returns the task’s output, if the task completed …","","","Spawns a new task with this builder’s configured …","Spawns a new task in a custom allocation, with this builder…","Spawns a new <code>!</code><code>Send</code> task with this builder’s configured …","Spawns a new <code>!</code><code>Send</code> task with this builder’s configured …","Spawns a new <code>!</code><code>Send</code> task in a custom allocation, with this …","Spawns a new <code>!</code><code>Send</code> task in a custom allocation, with this …","Returns a <code>TaskRef</code> referencing the task this <code>JoinHandle</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wake up the task associated with this <code>Waker</code>.","Wake up the task associated with this <code>Waker</code> without …","Returns a reference to the <code>Waker</code> for the current task.","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> would awake …","Errors returned by <code>set_global_timer</code>.","A <code>Duration</code> type to represent a span of time, typically …","The requested <code>Duration</code> exceeds the timer’s maximum …","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","No global default timer has been set.","The duration of one second.","A <code>Future</code> that completes after a specified <code>Duration</code>.","A <code>Future</code> that requires an inner <code>Future</code> to complete within a","A <code>Timer</code> tracks the current time, and notifies <code>Sleep</code> and …","Errors returned by <code>Timer::try_sleep</code>, <code>Timer::try_timeout</code>, …","Represents a single turn of the timer wheel.","A duration of zero time.","Computes the absolute difference between <code>self</code> and <code>other</code>.","","","Advance the timer by <code>duration</code>, potentially waking any <code>Sleep</code>…","Advance the timer by <code>ticks</code> timer ticks, potentially waking …","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","","","","","","","","","","","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","Returns the <code>Duration</code> that this <code>Sleep</code> future will sleep for.","Returns the total elapsed time since this timer wheel …","","","The number of <code>Sleep</code> futures that were woken up by this …","","","","","","","","","Advance the timer by <code>duration</code>, ensuring any <code>Sleep</code> futures …","Advance the timer by <code>ticks</code> timer ticks, ensuring any <code>Sleep</code> …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Returns <code>true</code> if there are currently pending <code>Sleep</code> futures …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if this <code>Duration</code> spans no time.","Returns the maximum duration of <code>Sleep</code> futures driven by …","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Returns a new <code>Timer</code> with the specified <code>tick_duration</code> for a …","Creates a new <code>Duration</code> from the specified number of whole …","The total number of ticks elapsed since the first time …","","Add pending time to the timer <em>without</em> turning the wheel.","Add pending ticks to the timer <em>without</em> turning the wheel.","","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Sets a <code>Timer</code> as the global default timer.","Returns a <code>Future</code> that completes after the specified …","Returns a <code>Future</code> that will complete in <code>duration</code>.","Returns a <code>Future</code> that will complete in <code>ticks</code> timer ticks.","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","Returns the number of ticks until the deadline at which …","Returns the <code>Duration</code> from the current time to the deadline …","<code>Timeout</code>s limit the amount of time a <code>Future</code> is allowed to …","Requires the provided <code>Future</code> to complete before the …","Returns a new <code>Timeout</code> future that fails if <code>future</code> does not …","","","","","","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","Returns a <code>Future</code> that completes after the specified …","Returns a <code>Future</code> that will complete in <code>duration</code>.","Requires the provided <code>Future</code> to complete before the …","Returns a new <code>Timeout</code> future that fails if <code>future</code> does not …","","","","","","","","The maximum duration supported by this <code>Timer</code> instance.","The duration that was requested for a <code>Sleep</code> or <code>Timeout</code> …","An error indicating that a <code>Timeout</code> elapsed before the …","A <code>Future</code> that requires an inner <code>Future</code> to complete within a","","","","","Returns the <code>Duration</code> the inner <code>Future</code> is allowed to run …","Returns the <code>Duration</code> the inner <code>Future</code> was allowed to run …","","","","Returns the argument unchanged.","Mutably the inner <code>Future</code>.","Borrows the inner <code>Future</code> as a <code>Pin</code>ned reference, if this …","Borrows the inner <code>Future</code> immutably.","Calls <code>U::from(self)</code>.","Consumes this <code>Timeout</code>, returning the inner <code>Future</code>.","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,17,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,0,21,23,17,13,14,24,25,26,15,16,18,21,23,17,13,14,24,25,26,15,16,18,11,13,14,15,16,17,15,16,18,17,15,16,18,25,11,13,13,14,14,15,15,16,16,21,13,14,15,16,17,21,23,17,13,14,24,25,26,15,16,18,21,23,17,13,14,24,25,26,15,16,18,25,23,21,23,17,13,14,24,25,26,15,16,18,21,13,14,26,15,16,0,21,13,14,25,11,13,14,15,16,21,13,14,24,15,16,18,21,13,14,24,15,16,18,23,23,23,25,14,16,23,13,14,15,16,17,15,16,18,21,23,17,13,14,24,25,26,15,16,18,21,23,17,13,14,24,25,26,15,16,18,21,13,15,21,23,17,13,14,24,25,26,15,16,18,25,25,25,0,120,33,0,0,120,0,0,0,0,0,0,0,0,0,0,0,33,33,33,33,49,42,52,44,45,38,39,46,47,48,33,41,37,49,42,52,44,45,38,39,46,47,48,33,41,37,37,37,38,39,33,41,42,44,45,46,47,48,42,45,46,48,38,37,49,42,52,44,45,38,39,46,47,48,33,41,37,37,49,42,52,44,45,38,39,46,47,48,33,41,37,49,42,52,44,45,38,39,46,47,48,33,41,37,49,49,0,49,52,38,39,33,41,38,52,52,0,0,0,38,37,37,33,33,49,42,52,44,45,38,39,46,47,48,33,41,37,49,42,52,44,45,38,39,46,47,48,33,41,37,49,49,52,52,52,52,49,42,52,44,45,38,39,46,47,48,33,41,37,0,38,39,41,0,0,39,41,0,38,39,41,41,52,52,0,0,0,0,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,0,58,58,0,0,0,0,57,34,58,36,59,57,34,58,36,59,57,34,36,59,58,57,34,58,58,36,59,57,59,57,34,58,36,59,57,34,58,36,59,34,36,57,59,34,36,58,57,34,58,36,59,57,34,58,36,59,57,34,58,36,59,0,0,0,0,66,66,66,73,69,74,66,73,69,74,66,69,66,69,66,66,66,73,69,74,74,66,73,69,74,73,69,69,69,73,73,73,69,66,73,69,74,74,69,74,0,66,66,73,69,74,73,73,66,73,69,74,74,66,73,69,74,73,0,0,0,76,76,76,76,76,76,76,76,76,76,76,0,0,77,77,78,77,78,77,78,77,78,77,78,78,78,78,77,78,77,78,78,77,78,78,77,78,77,77,78,77,78,77,78,77,78,77,54,54,0,0,0,0,54,60,55,54,60,55,54,54,54,54,60,55,54,60,55,54,60,55,60,55,60,55,54,54,60,55,54,60,55,54,60,55,84,84,65,84,0,121,84,65,121,0,0,0,0,0,0,65,84,61,65,85,63,84,61,65,85,63,84,84,61,63,61,84,84,84,61,65,85,63,84,61,65,85,63,84,61,65,85,63,61,85,63,61,85,63,84,84,84,61,65,85,63,84,61,65,85,63,84,61,65,85,63,0,0,0,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,62,64,0,0,0,8,0,0,8,8,0,8,0,97,0,0,0,0,86,8,31,12,89,27,92,30,19,6,86,8,31,12,89,27,92,30,19,6,86,8,8,8,27,19,12,89,19,86,8,86,12,89,19,86,8,8,31,27,19,86,89,89,89,89,89,27,27,27,27,27,92,19,19,19,8,31,12,89,89,89,89,27,92,92,19,19,6,86,8,31,12,89,27,92,30,19,6,86,86,8,8,8,8,8,97,30,86,8,8,6,89,8,31,27,92,19,31,12,89,27,92,30,19,6,86,8,27,97,30,92,27,19,92,8,8,12,12,8,8,8,8,8,12,31,86,92,8,27,12,12,12,12,12,12,27,12,89,19,86,8,89,92,31,12,89,27,92,30,19,6,86,8,31,12,89,27,92,30,19,6,86,8,31,12,89,27,92,30,19,6,86,8,86,86,6,86,0,0,113,104,104,104,104,113,104,0,0,0,0,0,104,104,104,104,105,105,104,104,104,104,104,104,105,114,115,111,112,113,104,105,114,115,111,112,113,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,111,111,112,113,104,112,105,114,115,111,112,113,113,104,105,105,105,114,115,111,112,113,104,104,104,104,104,104,104,104,112,104,105,114,115,111,112,113,104,114,111,104,105,104,104,104,104,105,104,112,104,105,105,114,111,104,104,104,0,0,105,105,104,104,104,104,104,104,104,112,112,0,0,105,104,113,105,114,115,111,112,113,104,104,104,105,114,115,111,112,113,104,0,105,0,105,105,114,115,111,112,113,104,122,122,0,0,116,116,116,116,114,116,116,116,116,116,114,114,114,116,114,116,116,116,116,116],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],3],[-1,-1,[]],[-1,-2,[],[]],[-1,[],[]],[4,1],[[[5,[1]],6],[[8,[7]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,[[12,[11]]]],[13,[[12,[13]]]],[14,[[12,[14]]]],[15,[[12,[15]]]],[16,[[12,[16]]]],[17,17],[15,15],[16,16],[18,18],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[11,[[20,[19]]]],[13,[[20,[19]]]],[13,[[20,[19]]]],[14,[[20,[19]]]],[14,[[20,[19]]]],[15,[[20,[19]]]],[15,[[20,[19]]]],[16,[[20,[19]]]],[16,[[20,[19]]]],[[],[[21,[-1]]],11],[[],13],[[],14],[[],15],[[],16],[[17,17],22],[[[21,[-1]],2],3,[]],[[[23,[-1]],2],3,[]],[[17,2],3],[[13,2],3],[[14,2],3],[[24,2],3],[[25,2],3],[[26,2],3],[[15,2],3],[[16,2],3],[[18,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[[23,[-1]]],4,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[-1]]],11],[[],13],[[],14],[[],26],[[],15],[[],16],0,[26,[[21,[-1]]],11],[26,13],[26,14],0,[[11,19],7],[[13,19],7],[[14,19],7],[[15,19],7],[[16,19],7],[[[21,[-1]],-2],27,11,[28,29]],[[13,-1],27,[28,29]],[[14,-1],27,28],[[24,-1],27,[28,29]],[[15,-1],27,[28,29]],[[16,-1],27,28],[[18,-1],27,[28,29]],[[[21,[-1]]],27,11],[13,27],[14,27],[24,27],[[15,[32,[[31,[15,-1,30]]]]],27,[28,29]],[[16,[32,[[31,[16,-1,30]]]]],27,28],[[18,[32,[[31,[16,-1,30]]]]],27,[28,29]],[[[23,[-1]],-1],4,11],[[[23,[-1]],-1,4],4,11],[[[23,[-1]],-1],22,11],0,[14,24],[16,18],[[[23,[-1]]],4,11],[13,25],[14,25],[15,25],[16,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[21,[-1]]],[[9,[[23,[-1]],17]]],11],[13,[[9,[[23,[13]],17]]]],[15,[[9,[[23,[15]],17]]]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[25,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,4],34],[[[35,[33]],4],36],[[33,4],7],[33,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[[-1,-2],7,[],[]],[38,22],[[[39,[-1,-2]]],7,40,[]],[33,7],[41,7],[[[42,[-1]]],[],43],[[[44,[-1]]],[],43],[[[45,[-1]]],[],43],[[[46,[-1]]],[],43],[[[47,[-1]]],[],43],[[[48,[-1]]],[],43],[[[42,[-1]]],[],43],[[[45,[-1]]],[],43],[[[46,[-1]]],[],43],[[[48,[-1]]],[],43],[38,7],[[37,37],22],[[[49,[-1]],2],[[9,[7,50]]],[51,43]],[[[42,[-1]],2],[[9,[7,50]]],[51,43]],[[[52,[-1]],2],[[9,[7,50]]],[51,43]],[[[44,[-1]],2],[[9,[7,50]]],[51,43]],[[[45,[-1]],2],[[9,[7,50]]],[51,43]],[[38,2],[[9,[7,50]]]],[[[39,[-1,-2]],2],[[9,[7,50]]],40,[]],[[[46,[-1]],2],[[9,[7,50]]],[51,43]],[[[47,[-1]],2],[[9,[7,50]]],[51,43]],[[[48,[-1]],2],[[9,[7,50]]],[51,43]],[[33,2],[[9,[7,50]]]],[[41,2],[[9,[7,50]]]],[[37,2],[[9,[7,50]]]],[[37,2],[[9,[7,50]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[49,[-1]]],[[53,[-1]]],43],[[[35,[[49,[-1]]]]],[[46,[-1]]],43],0,[-1,[[49,[-1]]],[]],[-1,[[52,[-1]]],[]],[[],38],[[],[[39,[-1,-2]]],40,[]],[4,33],[[],41],[[38,6],[[8,[[9,[7,54]]]]]],[[[52,[-1]]],[[44,[-1]]],43],[[[35,[[52,[-1]]]]],[[47,[-1]]],43],0,0,0,[38,55],[-1,-2,[],[]],[-1,56,[]],[[33,4],[[9,[57,58]]]],[[[35,[33]],4],[[9,[59,58]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[49,[-1]]],[[20,[[42,[-1]]]]],43],[[[35,[[49,[-1]]]]],[[9,[[46,[-1]],[35,[[49,[-1]]]]]]],43],[[[52,[-1]]],[[20,[[44,[-1]]]]],43],[[[35,[[52,[-1]]]]],[[20,[[47,[-1]]]]],43],[[[52,[-1]]],[[20,[[45,[-1]]]]],43],[[[35,[[52,[-1]]]]],[[20,[[48,[-1]]]]],43],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[38,60],[[[39,[-1,-2]],-1],[[61,[-1,-2]]],40,[]],[41,62],0,0,[[[35,[[39,[-1,-2]]]],-1],[[63,[-1,-2]]],40,[]],[[[35,[41]]],64],0,[38,22],[[[39,[-1,-2]],-1,-2],[[65,[-2]]],40,[]],[41,7],[41,7],[[[52,[-1]]],[[45,[-1]]],43],[[[35,[[52,[-1]]]]],[[48,[-1]]],43],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1]],2],[[9,[7,50]]],[51,43]],[-1,-1,[]],[-1,-2,[],[]],[-1,[],[]],[[[5,[[53,[-1]]]],6],8,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,7],[34,7],[36,7],[59,7],[[58,58],22],[[57,2],[[9,[7,50]]]],[[34,2],[[9,[7,50]]]],[[58,2],[[9,[7,50]]]],[[58,2],[[9,[7,50]]]],[[36,2],[[9,[7,50]]]],[[59,2],[[9,[7,50]]]],[57,7],[59,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[57,4],[59,4],[[[5,[34]],6],8],[[[5,[36]],6],8],[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,[[[66,[-2]]],-1,43,[[67,[-1]]]],[[[66,[-2]]],-1,43,[[68,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[66,[-1]]],[],[]],[[[69,[-1,-2]]],[],[],[[71,[],[[70,[-1]]]]]],[[[66,[-1]]],[],[]],[[[69,[-1,-2]]],[],[],[[71,[],[[70,[-1]]]]]],[[[66,[-1]]],7,[]],[[[66,[-1]],2],[[9,[7,50]]],51],[[[66,[-1]],2],[[9,[7,50]]],72],[[[73,[-1]],2],[[9,[7,50]]],51],[[[69,[-1,-2]],2],[[9,[7,50]]],51,[]],[[[74,[-1]],2],[[9,[7,50]]],51],[[[74,[-1]]],7,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[73,[-1]]],-1,[]],[[[69,[-1,-2]]],-1,[],[[71,[],[[70,[-1]]]]]],[[[69,[-1,-2]]],[[20,[-1]]],[],[]],[[[69,[-1,-2]]],-1,[],[[71,[],[[70,[-1]]]]]],[[[73,[-1]],-2],-1,[],[[75,[],[[70,[-1]]]]]],[[[73,[-1]]],-1,[]],[[[73,[-1]],-1],-1,[]],[[[69,[-1,-2]]],7,[],[[71,[],[[70,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],[[66,[-1]]],[]],[-1,[[69,[-2,-1]]],[],[]],[-1,[[74,[-1]]],[]],0,[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[73,[-1]]],[[20,[-1]]],[]],[[[73,[-1]],-1],[[9,[7,[76,[-1]]]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[74,[-1]]],[[20,[[66,[-1]]]]],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[],[[73,[-1]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[76,[-1]],2],[[9,[7,50]]],[]],[[[76,[-1]],2],[[9,[7,50]]],[]],[-1,-1,[]],[-1,-2,[],[]],[[[76,[-1]]],-1,[]],[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,77],[[[78,[-1]]],[[78,[-1]]],79],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[],77],[[],[[78,[-1]]],80],[[[78,[-1]]],-1,[]],[[[78,[-1]]],-1,[]],[[[78,[-1]],[78,[-1]]],22,40],[[77,2],[[9,[7,50]]]],[[[78,[-1]],2],[[9,[7,50]]],51],[-1,-1,[]],[-1,-1,[]],[[[78,[-1]],-2],7,81,82],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1]]],-1,[]],[[],77],[-1,[[78,[-1]]],[]],[77,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[83,77],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[-1,-2],7,[],[]],[[54,54],22],[[54,2],[[9,[7,50]]]],[[60,2],[[9,[7,50]]]],[[55,2],[[9,[7,50]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[5,[60]],6],8],[[[5,[55]],6],8],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],7,[],[]],[[[61,[-1,-2]]],7,40,[]],[[[63,[-1,-2]]],7,40,[]],[[[5,[[61,[-1,-2]]]]],[[85,[-1,-2]]],40,[]],[[84,84],22],[[84,2],[[9,[7,50]]]],[[84,2],[[9,[7,50]]]],[[[61,[-1,-2]],2],[[9,[7,50]]],[51,40],51],[[[65,[-1]],2],[[9,[7,50]]],51],[[[85,[-1,-2]],2],[[9,[7,50]]],[51,40],51],[[[63,[-1,-2]],2],[[9,[7,50]]],[51,40],51],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[[5,[[61,[-1,-2]]]],6],8,40,[]],[[[5,[[85,[-1,-2]]]],6],8,40,[]],[[[5,[[63,[-1,-2]]]],6],8,40,[]],[-1,-2,[],[]],[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,7],[64,7],[[62,2],[[9,[7,50]]]],[[64,2],[[9,[7,50]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[5,[62]],6],8],[[[5,[64]],6],8],[[62,62],22],[[64,64],22],[[[5,[62]]],[[8,[[9,[7,37]]]]]],[[[5,[64]]],[[8,[[9,[7,37]]]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[62,41],22],[[64,41],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,87],[-1,[[8,[[20,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[[9,[-1,-2]]]]],88,[],[]],[[[8,[[20,[[9,[-1,-2]]]]]]],88,[],[]],[[[27,[-1]]],22,[]],[19,22],[[[12,[-1]]],[[12,[-1]]],79],[89,89],[19,19],[86,86],[[[8,[-1]]],[[8,[-1]]],79],[[86,86],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[[8,[-1]],[8,[-1]]],90,91],[[[31,[-1,-2,-3]]],7,[],28,[]],[[[27,[-1]]],7,[]],[19,7],[86,7],[[89,89],22],[[89,-1],22,[]],[[89,[27,[-1]]],22,[]],[[89,89],22],[[89,[27,[-1]]],22,[]],[[[27,[-1]],89],22,[]],[[[27,[-1]],89],22,[]],[[[27,[-1]],[27,[-1]]],22,40],[[[27,[-1]],19],22,[]],[[[27,[-1]],19],22,[]],[[[92,[-1]],[92,[-1]]],22,40],[[19,[27,[-1]]],22,[]],[[19,19],22],[[19,[27,[-1]]],22,[]],[[[8,[-1]],[8,[-1]]],22,40],[[[31,[-1,-2,-3]],2],3,[],28,[]],[[[12,[-1]],2],3,51],[[89,2],3],[[89,2],3],[[89,2],3],[[89,2],3],[[[27,[-1]],2],3,[]],[[[92,[-1]],2],3,[]],[[[92,[-1]],2],3,[]],[[19,2],3],[[19,2],3],[[6,2],[[9,[7,50]]]],[[86,2],[[9,[7,50]]]],[[[8,[-1]],2],[[9,[7,50]]],51],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[35,[-1]]],86,[93,29,94]],[-1,[[8,[-1]]],[]],[95,-1,[]],[-1,-1,[]],[[],[[8,[[9,[-1,-2]]]]],[],[]],[[],[[8,[[20,[[9,[-1,-2]]]]]]],[],[]],[[[98,[[31,[-1,-2,[97,[],[[96,[-3]]]]]]]]],-3,[],28,[]],[[[98,[[31,[-1,-2,30]]]]],[[32,[[31,[-1,-2,30]]]]],[],28],[87,86],[[[9,[99,-1]]],[[8,[[20,[[9,[-2,-3]]]]]]],[],[],[[100,[-1]]]],[[[9,[99,-1]]],[[8,[[9,[-2,-3]]]]],[],[],[[100,[-1]]]],[86,6],[[89,-1],7,82],[[[8,[-1]],-2],7,81,82],[[[31,[-1,-2,-3]]],89,11,28,[[97,[-1,-2]]]],[[[27,[-1]]],89,[]],[[[92,[-1]]],89,[]],[19,89],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[98,[[31,[-2,-3,[97,[],[[96,[-1]]]]]]]]],[],[],28],[[[32,[[31,[-1,-2,30]]]]],[[98,[[31,[-1,-2,30]]]]],[],28],[[[92,[-1]]],22,[]],[[[27,[-1]]],22,[]],[19,22],[[[92,[-1]]],22,[]],[[[8,[-1]]],22,[]],[[[8,[-1]]],22,[]],[[[12,[-1]],101],[[12,[-1]]],11],[[[12,[-1]],102],[[12,[-1]]],11],[[[8,[-1]],-3],[[8,[-2]]],[],[],[[75,[-1],[[70,[-2]]]]]],[[[8,[[20,[[9,[-1,-2]]]]]],-4],[[8,[[20,[[9,[-1,-3]]]]]]],[],[],[],[[75,[-2],[[70,[-3]]]]]],[[[8,[[9,[-1,-2]]]],-4],[[8,[[9,[-1,-3]]]]],[],[],[],[[75,[-2],[[70,[-3]]]]]],[[[8,[[20,[[9,[-1,-2]]]]]],-4],[[8,[[20,[[9,[-3,-2]]]]]]],[],[],[],[[75,[-1],[[70,[-3]]]]]],[[[8,[[9,[-1,-2]]]],-4],[[8,[[9,[-3,-2]]]]],[],[],[],[[75,[-1],[[70,[-3]]]]]],[[[12,[-1]],101],[[12,[-1]]],11],[-1,[[31,[-2,-1,-3]]],28,11,[[97,[-2,-1]]]],[[],86],[[[92,[-1]]],[[20,[-1]]],[]],[[[8,[-1]],[8,[-1]]],[[20,[90]]],103],[[[5,[[27,[-1]]]],6],[[8,[-2]]],[],[]],[[[12,[-1]],-2],27,11,[28,29]],[[[12,[-1]]],27,11],[[[12,[14]],-1],27,28],[[[12,[16]],-1],27,28],[[[12,[14]]],27],[[[12,[16]]],27],[[[27,[-1]]],19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,56,[]],[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[86,7],[86,7],[6,86],[[86,86],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[104,104],104],[[104,104],104],[[104,104],7],[[105,104],7],[[105,106],7],[104,107],[104,107],[104,107],[104,106],[104,108],[104,109],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[104,104],[[20,[104]]]],[[104,110],[[20,[104]]]],[[104,110],[[20,[104]]]],[[104,104],[[20,[104]]]],[104,104],[[-1,-2],7,[],[]],[[104,104],90],[[],104],[[104,110],104],[[104,110],7],[[104,104],108],[[104,104],109],[[104,108],104],[[104,109],104],[111,7],[111,104],[112,104],[[113,113],22],[[104,104],22],0,[[105,2],3],[[[114,[-1]],2],3,51],[[115,2],3],[[111,2],3],[[112,2],3],[[113,2],3],[[113,2],3],[[104,2],[[9,[7,50]]]],[[105,104],112],[[105,106],112],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[116,104],[-1,-1,[]],[106,104],[106,104],[106,104],[106,104],[108,104],[109,104],[112,22],[[104,-1],7,82],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[104,22],[105,104],[[104,110],104],[[104,110],7],[[104,108],104],[[104,109],104],[104,105],[[106,110],104],0,[[104,104],[[20,[90]]]],[[105,104],7],[[105,106],7],[[[5,[[114,[-1]]]],6],[[8,[-2]]],28,[]],[[[5,[111]],6],[[8,[-1]]],[]],[[104,104],104],[[104,110],104],[[104,104],104],[105,[[9,[7,115]]]],[104,111],[[105,104],111],[[105,106],111],[[104,104],104],[[104,104],7],[104,110],[104,110],[104,110],[-1,104,[[118,[],[[117,[104]]]]]],[-1,104,[[118,[],[[117,[104]]]]]],[112,[[20,[106]]]],[112,[[20,[104]]]],0,[[104,-1],[[114,[-1]]],28],[[105,104,-1],[[114,[-1]]],28],[-1,-2,[],[]],[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[108,[[9,[104,119]]]],[109,[[9,[104,119]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[104,[[9,[111,113]]]],[[105,104],[[9,[111,113]]]],[[104,-1],[[9,[[114,[-1]],113]]],28],[[105,104,-1],[[9,[[114,[-1]],113]]],28],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[116,116],[[-1,-2],7,[],[]],[[[114,[-1]]],104,28],[116,104],[[116,116],22],[[116,2],3],[[116,2],3],[-1,-1,[]],[[[114,[-1]]],-1,28],[[[5,[[114,[-1]]]]],[[5,[-1]]],28],[[[114,[-1]]],-1,28],[-1,-2,[],[]],[[[114,[-1]]],-1,28],[-1,-2,[],[]],[-1,56,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[5,"Yield",6],[5,"Formatter",1101],[8,"Result",1101],[1,"usize"],[5,"Pin",1102],[5,"Context",726],[1,"tuple"],[6,"Poll",726],[6,"Result",1103],[5,"TypeId",1104],[10,"Schedule",19],[5,"Builder",726],[5,"StaticScheduler",19],[5,"LocalStaticScheduler",19],[5,"Scheduler",19],[5,"LocalScheduler",19],[6,"TryStealError",19],[5,"LocalSpawner",19],[5,"TaskRef",726],[6,"Option",1105],[5,"Injector",19],[1,"bool"],[5,"Stealer",19],[5,"LocalStaticSpawner",19],[5,"Tick",19],[5,"TaskStub",19],[5,"JoinHandle",726],[10,"Future",1106],[10,"Send",1107],[5,"BoxStorage",726],[5,"Task",726],[5,"Box",1108],[5,"Semaphore",207],[5,"Acquire",411],[5,"Arc",1109],[5,"AcquireOwned",411],[5,"Closed",207],[5,"WaitCell",207],[5,"WaitMap",207],[10,"PartialEq",1110],[5,"WaitQueue",207],[5,"MutexGuard",207],[10,"Sized",1107],[5,"RwLockReadGuard",207],[5,"RwLockWriteGuard",207],[5,"OwnedMutexGuard",207],[5,"OwnedRwLockReadGuard",207],[5,"OwnedRwLockWriteGuard",207],[5,"Mutex",207],[5,"Error",1101],[10,"Debug",1101],[5,"RwLock",207],[5,"Lock",392],[6,"PollWaitError",586],[5,"Subscribe",586],[5,"String",1111],[5,"Permit",411],[6,"TryAcquireError",411],[5,"OwnedPermit",411],[5,"Wait",586],[5,"Wait",624],[5,"Wait",695],[5,"WaitOwned",624],[5,"WaitOwned",695],[6,"WakeOutcome",624],[5,"MutexGuard",474],[10,"AsMut",1112],[10,"AsRef",1112],[5,"Lazy",474],[17,"Output"],[10,"Fn",1113],[10,"Display",1101],[5,"InitOnce",474],[5,"Mutex",474],[10,"FnOnce",1113],[5,"TryInitError",536],[5,"Backoff",550],[5,"CachePadded",550],[10,"Clone",1114],[10,"Default",1115],[10,"Hash",1116],[10,"Hasher",1116],[1,"u8"],[6,"WaitError",624],[5,"EnqueueWait",624],[5,"Waker",726],[5,"RawWaker",1117],[6,"ControlFlow",1118],[5,"TaskId",726],[6,"Ordering",1110],[10,"Ord",1110],[5,"JoinError",726],[10,"Wake",1119],[10,"Sync",1107],[1,"never"],[17,"StoredTask"],[10,"Storage",726],[5,"NonNull",1120],[6,"Infallible",1112],[10,"From",1112],[1,"str"],[5,"Location",1121],[10,"PartialOrd",1110],[5,"Duration",920],[5,"Timer",920],[1,"u64"],[1,"u128"],[1,"f32"],[1,"f64"],[1,"u32"],[5,"Sleep",920],[5,"Turn",920],[6,"TimerError",920],[5,"Timeout",920],[5,"AlreadyInitialized",920],[5,"Elapsed",1079],[17,"Item"],[10,"Iterator",1122],[5,"TryFromFloatSecsError",1123],[8,"WaitResult",207],[8,"WaitResult",624],[15,"DurationTooLong",1077]],"b":[[74,"impl-Schedule-for-%26StaticScheduler"],[75,"impl-StaticScheduler"],[76,"impl-LocalStaticScheduler"],[77,"impl-Schedule-for-%26LocalStaticScheduler"],[78,"impl-Schedule-for-Scheduler"],[79,"impl-Scheduler"],[80,"impl-Schedule-for-LocalScheduler"],[81,"impl-LocalScheduler"],[284,"impl-Debug-for-Closed"],[285,"impl-Display-for-Closed"],[436,"impl-Display-for-TryAcquireError"],[437,"impl-Debug-for-TryAcquireError"],[493,"impl-Debug-for-MutexGuard%3C\'a,+T%3E"],[494,"impl-Display-for-MutexGuard%3C\'a,+T%3E"],[541,"impl-Debug-for-TryInitError%3CT%3E"],[542,"impl-Display-for-TryInitError%3CT%3E"],[656,"impl-Display-for-WaitError"],[657,"impl-Debug-for-WaitError"],[764,"impl-Try-for-Poll%3CResult%3CT,+E%3E%3E"],[765,"impl-Try-for-Poll%3COption%3CResult%3CT,+E%3E%3E%3E"],[784,"impl-PartialEq-for-TaskId"],[785,"impl-PartialEq%3C%26TaskId%3E-for-TaskId"],[786,"impl-PartialEq%3C%26JoinHandle%3CT%3E%3E-for-TaskId"],[787,"impl-PartialEq%3CTaskId%3E-for-%26TaskId"],[788,"impl-PartialEq%3CJoinHandle%3CT%3E%3E-for-TaskId"],[789,"impl-PartialEq%3C%26TaskId%3E-for-JoinHandle%3CT%3E"],[790,"impl-PartialEq%3CTaskId%3E-for-JoinHandle%3CT%3E"],[791,"impl-PartialEq-for-JoinHandle%3CT%3E"],[792,"impl-PartialEq%3CTaskRef%3E-for-JoinHandle%3CT%3E"],[793,"impl-PartialEq%3C%26TaskRef%3E-for-JoinHandle%3CT%3E"],[795,"impl-PartialEq%3CJoinHandle%3CT%3E%3E-for-TaskRef"],[796,"impl-PartialEq-for-TaskRef"],[797,"impl-PartialEq%3C%26JoinHandle%3CT%3E%3E-for-TaskRef"],[801,"impl-Display-for-TaskId"],[802,"impl-UpperHex-for-TaskId"],[803,"impl-LowerHex-for-TaskId"],[804,"impl-Debug-for-TaskId"],[806,"impl-Debug-for-JoinError%3CT%3E"],[807,"impl-Display-for-JoinError%3CT%3E"],[808,"impl-Pointer-for-TaskRef"],[809,"impl-Debug-for-TaskRef"],[826,"impl-Try-for-Poll%3CResult%3CT,+E%3E%3E"],[827,"impl-Try-for-Poll%3COption%3CResult%3CT,+E%3E%3E%3E"],[831,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-Poll%3COption%3CResult%3CT,+F%3E%3E%3E"],[832,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-Poll%3CResult%3CT,+F%3E%3E"],[862,"impl-Poll%3COption%3CResult%3CT,+E%3E%3E%3E"],[863,"impl-Poll%3CResult%3CT,+E%3E%3E"],[864,"impl-Poll%3COption%3CResult%3CT,+E%3E%3E%3E"],[865,"impl-Poll%3CResult%3CT,+E%3E%3E"],[874,"impl-Builder%3C\'_,+%26LocalStaticScheduler%3E"],[875,"impl-Builder%3C\'_,+LocalScheduler%3E"],[876,"impl-Builder%3C\'_,+%26LocalStaticScheduler%3E"],[877,"impl-Builder%3C\'_,+LocalScheduler%3E"],[985,"impl-Display-for-TimerError"],[986,"impl-Debug-for-TimerError"],[1041,"impl-Sum%3C%26Duration%3E-for-Duration"],[1042,"impl-Sum-for-Duration"],[1088,"impl-Debug-for-Elapsed"],[1089,"impl-Display-for-Elapsed"]]}],\
["maitake_sync",{"doc":"maitake-sync","t":"FPFFPFFFFFFFFFFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNCCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCNFFFFNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNFFPPTFFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEFFNNNNNNNNNNNNNNNNNNNCNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPFPPPPFGFFIGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Closed","Err","Mutex","MutexGuard","Ok","OwnedMutexGuard","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","Semaphore","WaitCell","WaitMap","WaitQueue","WaitResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","mutex","read_owned","rwlock","semaphore","spin","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read_owned","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","wait_cell","wait_map","wait_queue","write_owned","Lock","Mutex","MutexGuard","OwnedMutexGuard","borrow","borrow_mut","fmt","from","into","into_future","lock","lock_owned","new","poll","try_from","try_into","try_lock","try_lock_owned","type_id","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","RwLock","RwLockReadGuard","RwLockWriteGuard","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","fmt","fmt","from","from","into","into","new","read","try_from","try_from","try_into","try_into","try_read","try_write","type_id","type_id","write","Acquire","AcquireOwned","Closed","InsufficientPermits","MAX_PERMITS","OwnedPermit","Permit","Semaphore","TryAcquireError","acquire","acquire_owned","add_permits","available_permits","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","forget","forget","from","from","from","from","from","into","into","into","into","into","into_future","into_future","new","permits","permits","poll","poll","to_string","try_acquire","try_acquire_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","InitOnce","Lazy","Mutex","MutexGuard","as_mut","as_ref","borrow","borrow","borrow_mut","borrow_mut","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","into","into","lock","new","once","to_string","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","InitOnce","Lazy","TryInitError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","fmt","fmt","fmt","fmt","from","from","from","get","get","get_if_present","get_mut","get_or_else","get_unchecked","init","init","into","into","into","into_inner","new","to_string","try_from","try_from","try_from","try_get","try_init","try_into","try_into","try_into","type_id","type_id","type_id","uninitialized","Backoff","CachePadded","DEFAULT_MAX_EXPONENT","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","from","from","hash","into","into","into_inner","new","new","spin","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_max_exponent","Busy","Closed","PollWaitError","Subscribe","Wait","WaitCell","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_future","into_future","new","poll","poll","poll_wait","subscribe","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait","wake","AlreadyConsumed","Closed","Closed","Duplicate","EnqueueWait","Err","NeverAdded","NoMatch","Ok","Wait","WaitError","WaitMap","WaitOwned","WaitResult","WakeOutcome","Woke","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","drop","drop","enqueue","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_future","into_future","into_future","new","poll","poll","poll","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wait","wait_owned","wake","Wait","WaitOwned","WaitQueue","borrow","borrow","borrow_mut","borrow_mut","close","drop","drop","fmt","fmt","from","from","into","into","into_future","into_future","new","poll","poll","same_queue","same_queue","subscribe","subscribe","try_from","try_from","try_into","try_into","type_id","type_id","wait","wait_owned","waits_on","waits_on","wake","wake_all"],"q":[[0,"maitake_sync"],[130,"maitake_sync::mutex"],[149,"maitake_sync::rwlock"],[178,"maitake_sync::semaphore"],[250,"maitake_sync::spin"],[282,"maitake_sync::spin::once"],[326,"maitake_sync::util"],[362,"maitake_sync::wait_cell"],[406,"maitake_sync::wait_map"],[482,"maitake_sync::wait_queue"],[519,"core::marker"],[520,"core::fmt"],[521,"core::fmt"],[522,"alloc::sync"],[523,"alloc::string"],[524,"core::result"],[525,"core::option"],[526,"core::any"],[527,"core::pin"],[528,"core::task::wake"],[529,"core::task::poll"],[530,"core::convert"],[531,"core::convert"],[532,"core::ops::function"],[533,"core::default"],[534,"core::hash"],[535,"core::hash"]],"d":["An error indicating that a <code>WaitCell</code>, <code>WaitQueue</code> or <code>Semaphore</code>…","Contains the error value","An asynchronous mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","Contains the success value","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An asynchronous readers-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","An asynchronous counting semaphore.","An atomically registered <code>Waker</code>.","A map of <code>Waker</code>s associated with keys, allowing tasks to be …","A queue of waiting tasks which can be woken in first-in, …","The result of waiting on a <code>WaitQueue</code> or <code>Semaphore</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","An asynchronous mutual exclusion lock.","Locks this <code>RwLock</code> with shared read access, returning an …","An asynchronous readers-writer lock.","An asynchronous counting semaphore.","Synchronous spinning-based synchronization primitives.","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this <code>RwLock</code> for shared read access, …","Attempts to acquire this <code>RwLock</code> for exclusive write …","","","","","","","","","","","","Reusable utilities for synchronization primitives.","An atomically registered <code>Waker</code>, for waking a single task.","A map of <code>Waker</code>s associated with keys, so that a task can …","A queue of waiting tasks that can be woken in first-in, …","Locks this <code>RwLock</code> with exclusive write access,returning an …","A future returned by the <code>Mutex::lock</code> method.","An asynchronous mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","An RAII implementation of a “scoped lock” of a <code>Mutex</code>. …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Locks this mutex.","Locks this mutex, returning an owned RAII guard.","Returns a new <code>Mutex</code> protecting the provided <code>data</code>.","","","","Attempts to lock the mutex without waiting, returning <code>None</code> …","Attempts this mutex without waiting, returning an owned …","","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An asynchronous readers-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a new <code>RwLock</code> protecting the provided <code>data</code>, in an …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","Attempts to acquire this <code>RwLock</code> for shared read access, …","Attempts to acquire this <code>RwLock</code> for exclusive write …","","","Locks this <code>RwLock</code> with exclusive write access, causing the …","The future returned by the <code>Semaphore::acquire</code> method.","Future returned from <code>Semaphore::acquire_owned()</code>.","The semaphore has been closed, so additional permits …","The semaphore does not currently have enough permits to …","The maximum number of permits a <code>Semaphore</code> may contain.","An owned RAII guard representing one or more permits …","A RAII guard representing one or more permits acquired …","An asynchronous counting semaphore.","Errors returned by <code>Semaphore::try_acquire</code>.","Acquire <code>permits</code> permits from the <code>Semaphore</code>, waiting …","Acquire <code>permits</code> permits from the <code>Semaphore</code>, waiting …","Add <code>permits</code> new permits to the semaphore.","Returns the number of permits currently available in this …","","","","","","","","","","","Closes the semaphore.","","","","","","","","","","","","Forget this permit, dropping it <em>without</em> returning the …","Forget this permit, dropping it <em>without</em> returning the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a new <code>Semaphore</code> with <code>permits</code> permits available.","Returns the count of semaphore permits owned by this <code>Permit</code>…","Returns the count of semaphore permits owned by this …","","","","Try to acquire <code>permits</code> permits from the <code>Semaphore</code>, without …","Try to acquire <code>permits</code> permits from the <code>Semaphore</code>, without …","","","","","","","","","","","","","","","","","","A spinlock-based mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a mutex. …","","","","","","","","","","","","","Forcibly unlock the mutex.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Acquires a mutex, spinning until it is locked.","Returns a new <code>Mutex</code> protecting the provided <code>data</code>.","Cells storing a value which must be initialized prior to …","","","","","","Attempts to acquire this lock without spinning","","","A cell which may be initialized a single time after it is …","A cell which will be lazily initialized by the provided …","Errors returned by <code>InitOnce::try_init</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Borrow the contents of this <code>InitOnce</code> cell, or panic if it …","Borrow the value, or initialize it if it has not yet been …","Returns the value of the lazy cell, if it has already been …","Borrow the value mutably, or initialize it if it has not …","Borrow the contents of this <code>InitOnce</code> cell, or initialize …","Borrow the contents of this <code>InitOnce</code> cell, <strong>without</strong> checking","Initialize the cell to <code>value</code>, panicking if it has already …","Ensure that the cell has been initialized.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value that the caller attempted to initialize …","Returns a new <code>Lazy</code> cell, initialized with the provided …","","","","","Borrow the contents of this <code>InitOnce</code> cell, if it has been …","Initialize the cell to <code>value</code>, returning an error if it has …","","","","","","","Returns a new <code>InitOnce</code> in the uninitialized state.","An exponential backoff for spin loops.","Aligns the wrapped value to the size of a cache line.","The default maximum exponent (2^8).","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the inner value and returns it.","Returns a new exponential backoff with the maximum …","Pads <code>value</code> to the length of a cache line.","Backs off in a spin loop.","","","","","","","","","Returns a new exponential backoff with the provided max …","The <code>Waker</code> was not registered because another task was …","The <code>Waker</code> was not registered because the <code>WaitCell</code> has been …","An error indicating that a <code>WaitCell</code> was closed or busy …","Future returned from <code>WaitCell::subscribe()</code>.","Future returned from <code>WaitCell::wait()</code>.","An atomically registered <code>Waker</code>.","","","","","","","","","Close the <code>WaitCell</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a new <code>WaitCell</code>, with no <code>Waker</code> stored in it.","","","Poll to wait on this <code>WaitCell</code>, consuming a stored wakeup or","Eagerly subscribe to notifications from this <code>WaitCell</code>.","","","","","","","","","","","Wait to be woken up by this cell.","Wake the <code>Waker</code> stored in this cell.","The received data has already been extracted","The <code>WaitMap</code> has already been closed.","The queue was already closed when the wake was attempted, …","The <code>WaitMap</code> already had an item matching the given key","A future that ensures a <code>Wait</code> has been added to a <code>WaitMap</code>.","Contains the error value","The <code>Wait</code> was never added to the <code>WaitMap</code>","No task matching the given key was found in the queue.","Contains the success value","Future returned from <code>WaitMap::wait()</code>.","Errors returned by <code>WaitMap::wait</code>, indicating a failed wake.","A map of <code>Waker</code>s associated with keys, allowing tasks to be …","Future returned from <code>WaitMap::wait_owned()</code>.","The result of a call to <code>WaitMap::wait()</code>.","The result of an attempted <code>WaitMap::wake()</code> operation.","The task was successfully woken, and the data was provided.","","","","","","","","","","","","","Close the queue, indicating that it may no longer be used.","","","Returns a future that completes when the <code>Wait</code> item has been","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a new <code>WaitMap</code>.","","","","","","","","","","","","","","","","","","","","","Wait to be woken up by this queue.","Wait to be woken up by this queue, returning a future that…","Wake a certain task in the queue.","Future returned from <code>WaitQueue::wait()</code>.","Future returned from <code>WaitQueue::wait_owned()</code>.","A queue of waiting tasks which can be woken in first-in, …","","","","","Close the queue, indicating that it may no longer be used.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a new <code>WaitQueue</code>.","","","Returns <code>true</code> if <code>self</code> and <code>other</code> are waiting on a …","Returns <code>true</code> if <code>self</code> and <code>other</code> are waiting on a …","Eagerly subscribe this future to wakeups from …","Eagerly subscribe this future to wakeups from …","","","","","","","Wait to be woken up by this queue.","Wait to be woken up by this queue, returning a future that…","Returns <code>true</code> if this <code>Wait</code> future is waiting for a …","Returns <code>true</code> if this <code>WaitOwned</code> future is waiting for a …","Wake the next task in the queue.","Wake <em>all</em> tasks currently in the queue."],"i":[0,64,0,0,64,0,0,0,0,0,0,0,0,0,0,0,10,3,14,5,6,8,15,7,17,18,1,10,3,14,5,6,8,15,7,17,18,1,1,1,3,5,6,7,3,6,7,8,1,10,3,14,5,6,8,15,7,17,18,1,1,10,3,14,5,6,8,15,7,17,18,1,10,3,14,5,6,8,15,7,17,18,1,0,14,0,0,0,1,1,10,3,14,5,6,8,15,7,17,18,1,10,3,14,5,6,8,15,7,17,18,1,14,14,10,3,14,5,6,8,15,7,17,18,1,0,0,0,0,14,0,0,0,0,26,26,26,26,26,26,10,10,10,26,26,26,10,10,26,0,0,0,0,0,20,24,20,24,20,24,24,20,24,20,24,20,24,14,14,20,24,20,24,14,14,20,24,14,0,0,35,35,17,0,0,0,0,17,17,17,17,33,31,35,32,34,33,31,35,32,34,17,33,31,32,34,35,33,31,35,35,32,34,33,34,33,31,35,32,34,33,31,35,32,34,31,32,17,33,34,31,32,35,17,17,33,31,35,32,34,33,31,35,32,34,33,31,35,32,34,0,0,0,0,36,36,36,40,36,40,36,36,36,36,36,40,40,36,40,36,40,40,40,0,36,36,40,36,40,40,36,40,0,0,0,44,41,45,44,41,45,41,41,44,41,45,45,44,41,45,44,41,41,41,44,44,44,41,44,41,45,45,41,45,44,41,45,44,44,44,41,45,44,41,45,44,0,0,47,47,48,47,48,47,48,47,48,47,48,48,48,48,47,48,47,48,48,47,48,48,47,48,47,47,48,47,48,47,48,47,48,47,54,54,0,0,0,0,54,55,56,54,55,56,54,54,8,54,54,55,56,54,55,56,54,55,56,55,56,8,55,56,8,8,54,54,55,56,54,55,56,54,55,56,8,8,57,57,61,57,0,65,57,61,65,0,0,0,0,0,0,61,57,58,61,60,59,57,58,61,60,59,57,57,15,58,59,58,57,57,57,58,61,60,59,57,58,61,60,59,57,58,61,60,59,58,60,59,15,58,60,59,57,57,57,58,61,60,59,57,58,61,60,59,57,58,61,60,59,15,15,15,0,0,0,62,63,62,63,18,62,63,62,63,62,63,62,63,62,63,18,62,63,62,63,62,63,62,63,62,63,62,63,18,18,62,63,18,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[[3,[-1]]],-2,4,[]],[[[5,[-1]]],-2,4,[]],[[[6,[-1]]],-2,4,[]],[[[7,[-1]]],-2,4,[]],[[[3,[-1]]],-2,4,[]],[[[6,[-1]]],-2,4,[]],[[[7,[-1]]],-2,4,[]],[8,2],[[1,1],9],[[[10,[-1]],11],12,[4,13]],[[[3,[-1]],11],12,[4,13]],[[[14,[-1]],11],12,[4,13]],[[[5,[-1]],11],12,[4,13]],[[[6,[-1]],11],12,[4,13]],[[8,11],12],[[[15,[-1,-2]],11],12,16,[]],[[[7,[-1]],11],12,[4,13]],[[17,11],12],[[18,11],12],[[1,11],12],[[1,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[19,[[14,[-1]]]]],[[20,[-1]]],4],0,0,0,[-1,-2,[],[]],[-1,21,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[19,[[14,[-1]]]]],[[23,[[20,[-1]]]]],4],[[[19,[[14,[-1]]]]],[[23,[[24,[-1]]]]],4],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,[[[19,[[14,[-1]]]]],[[24,[-1]]],4],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]],11],12,[13,4]],[-1,-1,[]],[-1,-2,[],[]],[-1,[],[]],[[[10,[-1]]],[[26,[-1]]],4],[[[19,[[10,[-1]]]]],[[7,[-1]]],4],[-1,[[10,[-1]]],[]],[[[27,[[26,[-1]]]],28],[[29,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[10,[-1]]],[[23,[[3,[-1]]]]],4],[[[19,[[10,[-1]]]]],[[22,[[7,[-1]],[19,[[10,[-1]]]]]]],4],[-1,25,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],-2,4,[]],[[[24,[-1]]],-2,4,[]],[[[24,[-1]]],-2,4,[]],[[[20,[-1]],11],12,[4,13]],[[[24,[-1]],11],12,[4,13]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-1]]],[]],[[[14,[-1]]],[[5,[-1]]],4],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[14,[-1]]],[[23,[[5,[-1]]]]],4],[[[14,[-1]]],[[23,[[6,[-1]]]]],4],[-1,25,[]],[-1,25,[]],[[[14,[-1]]],[[6,[-1]]],4],0,0,0,0,0,0,0,0,0,[[17,30],31],[[[19,[17]],30],32],[[17,30],2],[17,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,2],[33,2],[31,2],[32,2],[34,2],[[35,35],9],[[33,11],12],[[31,11],12],[[35,11],12],[[35,11],12],[[32,11],12],[[34,11],12],[33,2],[34,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[30,17],[33,30],[34,30],[[[27,[31]],28],[[29,[-1]]],[]],[[[27,[32]],28],[[29,[-1]]],[]],[-1,21,[]],[[17,30],[[22,[33,35]]]],[[[19,[17]],30],[[22,[34,35]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,[[[36,[-2]]],-1,4,[[37,[-1]]]],[[[36,[-2]]],-1,4,[[38,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],-2,[],[]],[[[36,[-1]]],-2,[],[]],[[[36,[-1]]],2,[]],[[[36,[-1]],11],12,13],[[[36,[-1]],11],12,39],[[[40,[-1]],11],12,13],[[[40,[-1]]],2,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1]]],[[36,[-1]]],[]],[-1,[[40,[-1]]],[]],0,[-1,21,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[40,[-1]]],[[23,[[36,[-1]]]]],[]],[-1,25,[]],[-1,25,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1,-2]]],-3,[],[[43,[],[[42,[-1]]]]],[]],[[[41,[-1,-2]]],-3,[],[[43,[],[[42,[-1]]]]],[]],[[[44,[-1]],11],12,13],[[[41,[-1,-2]],11],12,13,[]],[[[45,[-1]],11],12,[]],[[[45,[-1]],11],12,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[44,[-1]]],-1,[]],[[[41,[-1,-2]]],-1,[],[[43,[],[[42,[-1]]]]]],[[[41,[-1,-2]]],[[23,[-1]]],[],[]],[[[41,[-1,-2]]],-1,[],[[43,[],[[42,[-1]]]]]],[[[44,[-1]],-2],-1,[],[[46,[],[[42,[-1]]]]]],[[[44,[-1]]],-1,[]],[[[44,[-1]],-1],-1,[]],[[[41,[-1,-2]]],2,[],[[43,[],[[42,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1]]],-1,[]],[-1,[[41,[-2,-1]]],[],[]],[-1,21,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[44,[-1]]],[[23,[-1]]],[]],[[[44,[-1]],-1],[[22,[2,[45,[-1]]]]],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[],[[44,[-1]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[[[48,[-1]]],[[48,[-1]]],49],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],47],[[],[[48,[-1]]],50],[[[48,[-1]]],-1,[]],[[[48,[-1]]],-1,[]],[[[48,[-1]],[48,[-1]]],9,16],[[47,11],12],[[[48,[-1]],11],12,13],[-1,-1,[]],[-1,-1,[]],[[[48,[-1]],-2],2,51,52],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],-1,[]],[[],47],[-1,[[48,[-1]]],[]],[47,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[53,47],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[-1,-2],2,[],[]],[8,9],[[54,54],9],[[54,11],12],[[55,11],12],[[56,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[],8],[[[27,[55]],28],[[29,[-1]]],[]],[[[27,[56]],28],[[29,[-1]]],[]],[[8,28],[[29,[[22,[2,54]]]]]],[8,56],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[8,55],[8,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[[-1,-2],2,[],[]],[[[15,[-1,-2]]],2,16,[]],[[[58,[-1,-2]]],2,16,[]],[[[59,[-1,-2]]],2,16,[]],[[[27,[[58,[-1,-2]]]]],[[60,[-1,-2]]],16,[]],[[57,57],9],[[57,11],12],[[57,11],12],[[[58,[-1,-2]],11],12,[13,16],13],[[[61,[-1]],11],12,13],[[[60,[-1,-2]],11],12,[13,16],13],[[[59,[-1,-2]],11],12,[13,16],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[],[[15,[-1,-2]]],16,[]],[[[27,[[58,[-1,-2]]]],28],[[29,[-3]]],16,[],[]],[[[27,[[60,[-1,-2]]]],28],[[29,[-3]]],16,[],[]],[[[27,[[59,[-1,-2]]]],28],[[29,[-3]]],16,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[[15,[-1,-2]],-1],[[58,[-1,-2]]],16,[]],[[[19,[[15,[-1,-2]]]],-1],[[59,[-1,-2]]],16,[]],[[[15,[-1,-2]],-1,-2],[[61,[-2]]],16,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,2],[62,2],[63,2],[[62,11],12],[[63,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[],18],[[[27,[62]],28],[[29,[-1]]],[]],[[[27,[63]],28],[[29,[-1]]],[]],[[62,62],9],[[63,63],9],[[[27,[62]]],[[29,[[64,[2]]]]]],[[[27,[63]]],[[29,[[64,[2]]]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[18,62],[[[19,[18]]],63],[[62,18],9],[[63,18],9],[18,2],[18,2]],"c":[],"p":[[5,"Closed",0],[1,"tuple"],[5,"MutexGuard",0],[10,"Sized",519],[5,"RwLockReadGuard",0],[5,"RwLockWriteGuard",0],[5,"OwnedMutexGuard",0],[5,"WaitCell",0],[1,"bool"],[5,"Mutex",0],[5,"Formatter",520],[8,"Result",520],[10,"Debug",520],[5,"RwLock",0],[5,"WaitMap",0],[10,"PartialEq",521],[5,"Semaphore",0],[5,"WaitQueue",0],[5,"Arc",522],[5,"OwnedRwLockReadGuard",149],[5,"String",523],[6,"Result",524],[6,"Option",525],[5,"OwnedRwLockWriteGuard",149],[5,"TypeId",526],[5,"Lock",130],[5,"Pin",527],[5,"Context",528],[6,"Poll",529],[1,"usize"],[5,"Acquire",178],[5,"AcquireOwned",178],[5,"Permit",178],[5,"OwnedPermit",178],[6,"TryAcquireError",178],[5,"MutexGuard",250],[10,"AsMut",530],[10,"AsRef",530],[10,"Display",520],[5,"Mutex",250],[5,"Lazy",282],[17,"Output"],[10,"Fn",531],[5,"InitOnce",282],[5,"TryInitError",282],[10,"FnOnce",531],[5,"Backoff",326],[5,"CachePadded",326],[10,"Clone",532],[10,"Default",533],[10,"Hash",534],[10,"Hasher",534],[1,"u8"],[6,"PollWaitError",362],[5,"Wait",362],[5,"Subscribe",362],[6,"WaitError",406],[5,"Wait",406],[5,"WaitOwned",406],[5,"EnqueueWait",406],[6,"WakeOutcome",406],[5,"Wait",482],[5,"WaitOwned",482],[8,"WaitResult",0],[8,"WaitResult",406]],"b":[[59,"impl-Display-for-Closed"],[60,"impl-Debug-for-Closed"],[209,"impl-Debug-for-TryAcquireError"],[210,"impl-Display-for-TryAcquireError"],[263,"impl-Debug-for-MutexGuard%3C\'a,+T%3E"],[264,"impl-Display-for-MutexGuard%3C\'a,+T%3E"],[295,"impl-Display-for-TryInitError%3CT%3E"],[296,"impl-Debug-for-TryInitError%3CT%3E"],[439,"impl-Debug-for-WaitError"],[440,"impl-Display-for-WaitError"]]}],\
["mycelium_bitfield",{"doc":"mycelium-bitfield","tn":["BITS","Error","FromBits","bitfield","enum_from_bits","into_bits","pack","try_from_bits","Pack128","Pack16","Pack32","Pack64","Pack8","PackUsize","Packing128","Packing16","Packing32","Packing64","Packing8","PackingUsize","Pair128","Pair16","Pair32","Pair64","Pair8","PairUsize","assert_all_valid","assert_all_valid","assert_all_valid","assert_all_valid","assert_all_valid","assert_all_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","assert_valid","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","contained_in_all","contained_in_all","contained_in_all","contained_in_all","contained_in_all","contained_in_all","contained_in_any","contained_in_any","contained_in_any","contained_in_any","contained_in_any","contained_in_any","contains_all","contains_all","contains_all","contains_all","contains_all","contains_all","contains_any","contains_any","contains_any","contains_any","contains_any","contains_any","dst","dst","dst","dst","dst","dst","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","first","first","first","first","first","first","first_bit","first_bit","first_bit","first_bit","first_bit","first_bit","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_const_range","from_const_range","from_const_range","from_const_range","from_const_range","from_const_range","from_mask","from_mask","from_mask","from_mask","from_mask","from_mask","from_range","from_range","from_range","from_range","from_range","from_range","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","least_significant","least_significant","least_significant","least_significant","least_significant","least_significant","least_significant_index","least_significant_index","least_significant_index","least_significant_index","least_significant_index","least_significant_index","max_value","max_value","max_value","max_value","max_value","max_value","most_significant_index","most_significant_index","most_significant_index","most_significant_index","most_significant_index","most_significant_index","new","new","new","new","new","new","next","next","next","next","next","next","pack","pack","pack","pack","pack","pack","pack","pack","pack","pack","pack","pack","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_dst","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_from_src","pack_in","pack_in","pack_in","pack_in","pack_in","pack_in","pack_into","pack_into","pack_into","pack_into","pack_into","pack_into","pack_into_truncating","pack_into_truncating","pack_into_truncating","pack_into_truncating","pack_into_truncating","pack_into_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pack_truncating","pair_after","pair_after","pair_after","pair_after","pair_after","pair_after","pair_at","pair_at","pair_at","pair_at","pair_at","pair_at","pair_with","pair_with","pair_with","pair_with","pair_with","pair_with","raw_mask","raw_mask","raw_mask","raw_mask","raw_mask","raw_mask","remaining","remaining","remaining","remaining","remaining","remaining","set_all","set_all","set_all","set_all","set_all","set_all","set_all","set_all","set_all","set_all","set_all","set_all","set_all_in","set_all_in","set_all_in","set_all_in","set_all_in","set_all_in","src","src","src","src","src","src","starting_at","starting_at","starting_at","starting_at","starting_at","starting_at","then","then","then","then","then","then","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_unpack","try_unpack","try_unpack","try_unpack","try_unpack","try_unpack","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","unpack","unpack","unpack","unpack","unpack","unpack_bits","unpack_bits","unpack_bits","unpack_bits","unpack_bits","unpack_bits","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all","unset_all_in","unset_all_in","unset_all_in","unset_all_in","unset_all_in","unset_all_in"],"q":[[0,"mycelium_bitfield"],[8,"mycelium_bitfield::pack"],[590,"core::fmt"],[591,"core::result"],[592,"core::fmt"],[593,"core::ops::range"]],"d":["The number of bits required to represent a value of this …","The error type returned by <code>Self::try_from_bits</code> when an …","Trait implemented by values which can be converted to and …","Generates a typed bitfield struct.","Generates automatic <code>FromBits</code> and <code>core::convert::TryFrom</code> …","Convert <code>self</code> into a raw bit representation.","Packing spec types.","Attempt to convert <code>bits</code> into a value of this type.","A spec for packing values into selected bit ranges of <code>u128</code> …","A spec for packing values into selected bit ranges of <code>u16</code> …","A spec for packing values into selected bit ranges of <code>u32</code> …","A spec for packing values into selected bit ranges of <code>u64</code> …","A spec for packing values into selected bit ranges of <code>u8</code> …","A spec for packing values into selected bit ranges of <code>usize</code>…","Wraps a <code>u128</code> to add methods for packing bit ranges …","Wraps a <code>u16</code> to add methods for packing bit ranges …","Wraps a <code>u32</code> to add methods for packing bit ranges …","Wraps a <code>u64</code> to add methods for packing bit ranges …","Wraps a <code>u8</code> to add methods for packing bit ranges specified …","Wraps a <code>usize</code> to add methods for packing bit ranges …","A pair of Pack128s, allowing a bit range to be unpacked …","A pair of Pack16s, allowing a bit range to be unpacked …","A pair of Pack32s, allowing a bit range to be unpacked …","A pair of Pack64s, allowing a bit range to be unpacked …","A pair of Pack8s, allowing a bit range to be unpacked from …","A pair of PackUsizes, allowing a bit range to be unpacked …","Assert all of a set of packing specs are valid for packing …","Assert all of a set of packing specs are valid for packing …","Assert all of a set of packing specs are valid for packing …","Assert all of a set of packing specs are valid for packing …","Assert all of a set of packing specs are valid for packing …","Assert all of a set of packing specs are valid for packing …","Asserts that this packing spec is valid.","Asserts that this packing pair is valid.","Asserts that this packing spec is valid.","Asserts that this packing pair is valid.","Asserts that this packing spec is valid.","Asserts that this packing pair is valid.","Asserts that this packing spec is valid.","Asserts that this packing pair is valid.","Asserts that this packing spec is valid.","Asserts that this packing pair is valid.","Asserts that this packing spec is valid.","Asserts that this packing pair is valid.","Returns the number of bits needed to pack this value.","Returns the number of bits needed to pack this value.","Returns the number of bits needed to pack this value.","Returns the number of bits needed to pack this value.","Returns the number of bits needed to pack this value.","Returns the number of bits needed to pack this value.","Finish packing bits into <code>self</code>, returning the wrapped value.","Finish packing bits into <code>self</code>, returning the wrapped value.","Finish packing bits into <code>self</code>, returning the wrapped value.","Finish packing bits into <code>self</code>, returning the wrapped value.","Finish packing bits into <code>self</code>, returning the wrapped value.","Finish packing bits into <code>self</code>, returning the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <strong>all</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>all</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>all</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>all</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>all</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>all</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by this packing spec …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns <code>true</code> if <strong>any</strong> bits specified by <code>packer</code> are set in …","Returns the “destination” member of the packing pair.","Returns the “destination” member of the packing pair.","Returns the “destination” member of the packing pair.","Returns the “destination” member of the packing pair.","Returns the “destination” member of the packing pair.","Returns the “destination” member of the packing pair.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a packing spec for packing a <code>T</code>-typed value in the …","Returns a packing spec for packing a <code>T</code>-typed value in the …","Returns a packing spec for packing a <code>T</code>-typed value in the …","Returns a packing spec for packing a <code>T</code>-typed value in the …","Returns a packing spec for packing a <code>T</code>-typed value in the …","Returns a packing spec for packing a <code>T</code>-typed value in the …","Returns a value with the first bit in this packing spec …","Returns a value with the first bit in this packing spec …","Returns a value with the first bit in this packing spec …","Returns a value with the first bit in this packing spec …","Returns a value with the first bit in this packing spec …","Returns a value with the first bit in this packing spec …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","This is a <code>const fn</code>-compatible equivalent of …","This is a <code>const fn</code>-compatible equivalent of …","This is a <code>const fn</code>-compatible equivalent of …","This is a <code>const fn</code>-compatible equivalent of …","This is a <code>const fn</code>-compatible equivalent of …","This is a <code>const fn</code>-compatible equivalent of …","Returns a packer that will pack a value into the provided …","Returns a packer that will pack a value into the provided …","Returns a packer that will pack a value into the provided …","Returns a packer that will pack a value into the provided …","Returns a packer that will pack a value into the provided …","Returns a packer that will pack a value into the provided …","Construct a bit packing spec from a range of bits.","Construct a bit packing spec from a range of bits.","Construct a bit packing spec from a range of bits.","Construct a bit packing spec from a range of bits.","Construct a bit packing spec from a range of bits.","Construct a bit packing spec from a range of bits.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a packer for packing a value into the first <code>bits</code> …","Returns a packer for packing a value into the first <code>bits</code> …","Returns a packer for packing a value into the first <code>bits</code> …","Returns a packer for packing a value into the first <code>bits</code> …","Returns a packer for packing a value into the first <code>bits</code> …","Returns a packer for packing a value into the first <code>bits</code> …","Returns the index of the least-significant bit of this …","Returns the index of the least-significant bit of this …","Returns the index of the least-significant bit of this …","Returns the index of the least-significant bit of this …","Returns the index of the least-significant bit of this …","Returns the index of the least-significant bit of this …","Returns the maximum value of this packing spec (i.e. a …","Returns the maximum value of this packing spec (i.e. a …","Returns the maximum value of this packing spec (i.e. a …","Returns the maximum value of this packing spec (i.e. a …","Returns the maximum value of this packing spec (i.e. a …","Returns the maximum value of this packing spec (i.e. a …","Returns the index of the most-significant bit of this …","Returns the index of the most-significant bit of this …","Returns the index of the most-significant bit of this …","Returns the index of the most-significant bit of this …","Returns the index of the most-significant bit of this …","Returns the index of the most-significant bit of this …","Wrap a <code>usize</code> to add methods for packing bit ranges using …","Wrap a <code>u128</code> to add methods for packing bit ranges using …","Wrap a <code>u64</code> to add methods for packing bit ranges using …","Wrap a <code>u32</code> to add methods for packing bit ranges using …","Wrap a <code>u16</code> to add methods for packing bit ranges using …","Wrap a <code>u8</code> to add methods for packing bit ranges using <code>Pack8</code>…","Returns a packer for packing a value into the next …","Returns a packer for packing a value into the next …","Returns a packer for packing a value into the next …","Returns a packer for packing a value into the next …","Returns a packer for packing a value into the next …","Returns a packer for packing a value into the next …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from the destination location in <code>dst</code> into the …","Pack bits from the destination location in <code>dst</code> into the …","Pack bits from the destination location in <code>dst</code> into the …","Pack bits from the destination location in <code>dst</code> into the …","Pack bits from the destination location in <code>dst</code> into the …","Pack bits from the destination location in <code>dst</code> into the …","Pack bits from <code>dst</code> into <code>self</code>, using the packing pair …","Pack bits from <code>dst</code> into <code>self</code>, using the packing pair …","Pack bits from <code>dst</code> into <code>self</code>, using the packing pair …","Pack bits from <code>dst</code> into <code>self</code>, using the packing pair …","Pack bits from <code>dst</code> into <code>self</code>, using the packing pair …","Pack bits from <code>dst</code> into <code>self</code>, using the packing pair …","Pack bits from the source location in <code>src</code> into the …","Pack bits from the source location in <code>src</code> into the …","Pack bits from the source location in <code>src</code> into the …","Pack bits from the source location in <code>src</code> into the …","Pack bits from the source location in <code>src</code> into the …","Pack bits from the source location in <code>src</code> into the …","Pack bits from <code>src</code> into <code>self</code>, using the packing pair …","Pack bits from <code>src</code> into <code>self</code>, using the packing pair …","Pack bits from <code>src</code> into <code>self</code>, using the packing pair …","Pack bits from <code>src</code> into <code>self</code>, using the packing pair …","Pack bits from <code>src</code> into <code>self</code>, using the packing pair …","Pack bits from <code>src</code> into <code>self</code>, using the packing pair …","Wrap a <code>usize</code> to add methods for packing bit ranges using …","Wrap a <code>u128</code> to add methods for packing bit ranges using …","Wrap a <code>u64</code> to add methods for packing bit ranges using …","Wrap a <code>u32</code> to add methods for packing bit ranges using …","Wrap a <code>u16</code> to add methods for packing bit ranges using …","Wrap a <code>u8</code> to add methods for packing bit ranges using <code>Pack8</code>…","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack the <code>self.bits()</code> least-significant bits from <code>value</code> …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Pack bits from <code>value</code> into <code>self</code>, using the range specified …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a pair type for packing bits from the range …","Returns a raw, shifted mask for unpacking this packing …","Returns a raw, shifted mask for unpacking this packing …","Returns a raw, shifted mask for unpacking this packing …","Returns a raw, shifted mask for unpacking this packing …","Returns a raw, shifted mask for unpacking this packing …","Returns a raw, shifted mask for unpacking this packing …","Returns a packer for packing a value into all the remaining","Returns a packer for packing a value into all the remaining","Returns a packer for packing a value into all the remaining","Returns a packer for packing a value into all the remaining","Returns a packer for packing a value into all the remaining","Returns a packer for packing a value into all the remaining","Set <em>all</em> bits packed by this packer to 1.","Set <em>all</em> bits packed by this packer to 1.","Set <em>all</em> bits packed by this packer to 1.","Set <em>all</em> bits packed by this packer to 1.","Set <em>all</em> bits packed by this packer to 1.","Set <em>all</em> bits packed by this packer to 1.","Set <em>all</em> bits in the range specified by <code>packer</code> to 1 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 1 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 1 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 1 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 1 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 1 in <code>self</code>.","Set <em>all</em> bits packed by this packer to 1 in <code>base</code>.","Set <em>all</em> bits packed by this packer to 1 in <code>base</code>.","Set <em>all</em> bits packed by this packer to 1 in <code>base</code>.","Set <em>all</em> bits packed by this packer to 1 in <code>base</code>.","Set <em>all</em> bits packed by this packer to 1 in <code>base</code>.","Set <em>all</em> bits packed by this packer to 1 in <code>base</code>.","Returns the “source” member of the packing pair.","Returns the “source” member of the packing pair.","Returns the “source” member of the packing pair.","Returns the “source” member of the packing pair.","Returns the “source” member of the packing pair.","Returns the “source” member of the packing pair.","Returns a packer for packing a value into the next <code>n</code> …","Returns a packer for packing a value into the next <code>n</code> …","Returns a packer for packing a value into the next <code>n</code> …","Returns a packer for packing a value into the next <code>n</code> …","Returns a packer for packing a value into the next <code>n</code> …","Returns a packer for packing a value into the next <code>n</code> …","Returns a new packer for packing a <code>T2</code>-typed value in the …","Returns a new packer for packing a <code>T2</code>-typed value in the …","Returns a new packer for packing a <code>T2</code>-typed value in the …","Returns a new packer for packing a <code>T2</code>-typed value in the …","Returns a new packer for packing a <code>T2</code>-typed value in the …","Returns a new packer for packing a <code>T2</code>-typed value in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to unpack a <code>T</code>-typed value from <code>src</code>.","Attempts to unpack a <code>T</code>-typed value from <code>src</code>.","Attempts to unpack a <code>T</code>-typed value from <code>src</code>.","Attempts to unpack a <code>T</code>-typed value from <code>src</code>.","Attempts to unpack a <code>T</code>-typed value from <code>src</code>.","Attempts to unpack a <code>T</code>-typed value from <code>src</code>.","","","","","","","","","","","","","","","","","","","Unpacks a <code>T</code>-typed value from <code>src</code>.","Unpacks a <code>T</code>-typed value from <code>src</code>.","Unpacks a <code>T</code>-typed value from <code>src</code>.","Unpacks a <code>T</code>-typed value from <code>src</code>.","Unpacks a <code>T</code>-typed value from <code>src</code>.","Unpacks a <code>T</code>-typed value from <code>src</code>.","Unpack this packer’s bits from <code>source</code>.","Unpack this packer’s bits from <code>source</code>.","Unpack this packer’s bits from <code>source</code>.","Unpack this packer’s bits from <code>source</code>.","Unpack this packer’s bits from <code>source</code>.","Unpack this packer’s bits from <code>source</code>.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits in the range specified by <code>packer</code> to 0 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 0 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 0 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 0 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 0 in <code>self</code>.","Set <em>all</em> bits in the range specified by <code>packer</code> to 0 in <code>self</code>.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0.","Set <em>all</em> bits packed by this packer to 0."],"i":[2,2,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,9,10,11,12,13,6,14,9,15,10,16,11,17,12,18,13,19,6,9,10,11,12,13,21,23,25,27,28,30,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,21,23,25,27,28,30,21,23,25,27,28,30,14,15,16,17,18,19,6,6,6,14,14,14,9,9,9,15,15,15,10,10,10,16,16,16,11,11,11,17,17,17,12,12,12,18,18,18,13,13,13,19,19,19,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,6,6,6,6,14,14,14,14,9,9,9,9,15,15,15,15,10,10,10,10,16,16,16,16,11,11,11,11,17,17,17,17,12,12,12,12,18,18,18,18,13,13,13,13,19,19,19,19,21,21,21,21,23,23,23,23,25,25,25,25,27,27,27,27,28,28,28,28,30,30,30,30,6,6,14,9,9,15,10,10,16,11,11,17,12,12,18,13,13,19,21,21,23,23,25,25,27,27,28,28,30,30,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,21,23,25,27,28,30,14,15,16,17,18,19,21,23,25,27,28,30,14,15,16,17,18,19,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,21,23,25,27,28,30,6,9,10,11,12,13,14,15,16,17,18,19,6,9,10,11,12,13,6,9,10,11,12,13,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,9,10,11,12,13,6,14,9,15,10,16,11,17,12,18,13,19,21,23,25,27,28,30,6,9,10,11,12,13,6,9,10,11,12,13,6,9,10,11,12,13,21,23,25,27,28,30,6,9,10,11,12,13],"f":[0,0,0,0,0,[[[2,[],[[1,[-1]]]]],-2,3,[]],0,[-1,[[4,[[2,[],[[1,[-2]]]],-2]]],[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[[7,[5,[6,[-1,-2]]]]]]],7,[],[]],[[[8,[[7,[5,[9,[-1,-2]]]]]]],7,[],[]],[[[8,[[7,[5,[10,[-1,-2]]]]]]],7,[],[]],[[[8,[[7,[5,[11,[-1,-2]]]]]]],7,[],[]],[[[8,[[7,[5,[12,[-1,-2]]]]]]],7,[],[]],[[[8,[[7,[5,[13,[-1,-2]]]]]]],7,[],[]],[[[6,[-1,-2]]],7,[],[]],[14,7],[[[9,[-1,-2]]],7,[],[]],[15,7],[[[10,[-1,-2]]],7,[],[]],[16,7],[[[11,[-1,-2]]],7,[],[]],[17,7],[[[12,[-1,-2]]],7,[],[]],[18,7],[[[13,[-1,-2]]],7,[],[]],[19,7],[[[6,[-1,-2]]],20,[],[]],[[[9,[-1,-2]]],20,[],[]],[[[10,[-1,-2]]],20,[],[]],[[[11,[-1,-2]]],20,[],[]],[[[12,[-1,-2]]],20,[],[]],[[[13,[-1,-2]]],20,[],[]],[21,22],[23,24],[25,26],[27,20],[28,29],[30,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-2]]],[[6,[-1,-2]]],[],[]],[[[14,[-1]]],[[14,[-1]]],[]],[[[9,[-1,-2]]],[[9,[-1,-2]]],[],[]],[[[15,[-1]]],[[15,[-1]]],[]],[[[10,[-1,-2]]],[[10,[-1,-2]]],[],[]],[[[16,[-1]]],[[16,[-1]]],[]],[[[11,[-1,-2]]],[[11,[-1,-2]]],[],[]],[[[17,[-1]]],[[17,[-1]]],[]],[[[12,[-1,-2]]],[[12,[-1,-2]]],[],[]],[[[18,[-1]]],[[18,[-1]]],[]],[[[13,[-1,-2]]],[[13,[-1,-2]]],[],[]],[[[19,[-1]]],[[19,[-1]]],[]],[21,21],[23,23],[25,25],[27,27],[28,28],[30,30],[[[6,[-1,-2]],22],32,[],[]],[[[9,[-1,-2]],24],32,[],[]],[[[10,[-1,-2]],26],32,[],[]],[[[11,[-1,-2]],20],32,[],[]],[[[12,[-1,-2]],29],32,[],[]],[[[13,[-1,-2]],31],32,[],[]],[[[6,[-1,-2]],22],32,[],[]],[[[9,[-1,-2]],24],32,[],[]],[[[10,[-1,-2]],26],32,[],[]],[[[11,[-1,-2]],20],32,[],[]],[[[12,[-1,-2]],29],32,[],[]],[[[13,[-1,-2]],31],32,[],[]],[[21,[6,[-1,-2]]],32,[],[]],[[23,[9,[-1,-2]]],32,[],[]],[[25,[10,[-1,-2]]],32,[],[]],[[27,[11,[-1,-2]]],32,[],[]],[[28,[12,[-1,-2]]],32,[],[]],[[30,[13,[-1,-2]]],32,[],[]],[[21,[6,[-1,-2]]],32,[],[]],[[23,[9,[-1,-2]]],32,[],[]],[[25,[10,[-1,-2]]],32,[],[]],[[27,[11,[-1,-2]]],32,[],[]],[[28,[12,[-1,-2]]],32,[],[]],[[30,[13,[-1,-2]]],32,[],[]],[14,6],[15,9],[16,10],[17,11],[18,12],[19,13],[[[6,[-1,-2]],[6,[-3,-2]]],32,[],[],[]],[[[6,[-1,-2]],[6,[-3,-2]]],32,[],[],[]],[[[6,[-1,-2]],[6,[-3,-2]]],32,[],[],[]],[[[14,[-1]],[14,[-2]]],32,[],[]],[[[14,[-1]],[14,[-2]]],32,[],[]],[[[14,[-1]],[14,[-2]]],32,[],[]],[[[9,[-1,-2]],[9,[-3,-2]]],32,[],[],[]],[[[9,[-1,-2]],[9,[-3,-2]]],32,[],[],[]],[[[9,[-1,-2]],[9,[-3,-2]]],32,[],[],[]],[[[15,[-1]],[15,[-2]]],32,[],[]],[[[15,[-1]],[15,[-2]]],32,[],[]],[[[15,[-1]],[15,[-2]]],32,[],[]],[[[10,[-1,-2]],[10,[-3,-2]]],32,[],[],[]],[[[10,[-1,-2]],[10,[-3,-2]]],32,[],[],[]],[[[10,[-1,-2]],[10,[-3,-2]]],32,[],[],[]],[[[16,[-1]],[16,[-2]]],32,[],[]],[[[16,[-1]],[16,[-2]]],32,[],[]],[[[16,[-1]],[16,[-2]]],32,[],[]],[[[11,[-1,-2]],[11,[-3,-2]]],32,[],[],[]],[[[11,[-1,-2]],[11,[-3,-2]]],32,[],[],[]],[[[11,[-1,-2]],[11,[-3,-2]]],32,[],[],[]],[[[17,[-1]],[17,[-2]]],32,[],[]],[[[17,[-1]],[17,[-2]]],32,[],[]],[[[17,[-1]],[17,[-2]]],32,[],[]],[[[12,[-1,-2]],[12,[-3,-2]]],32,[],[],[]],[[[12,[-1,-2]],[12,[-3,-2]]],32,[],[],[]],[[[12,[-1,-2]],[12,[-3,-2]]],32,[],[],[]],[[[18,[-1]],[18,[-2]]],32,[],[]],[[[18,[-1]],[18,[-2]]],32,[],[]],[[[18,[-1]],[18,[-2]]],32,[],[]],[[[13,[-1,-2]],[13,[-3,-2]]],32,[],[],[]],[[[13,[-1,-2]],[13,[-3,-2]]],32,[],[],[]],[[[13,[-1,-2]],[13,[-3,-2]]],32,[],[],[]],[[[19,[-1]],[19,[-2]]],32,[],[]],[[[19,[-1]],[19,[-2]]],32,[],[]],[[[19,[-1]],[19,[-2]]],32,[],[]],[[21,21],32],[[23,23],32],[[25,25],32],[[27,27],32],[[28,28],32],[[30,30],32],[[],[[6,[-1,-2]]],[[2,[22]]],[]],[[],[[9,[-1,-2]]],[[2,[24]]],[]],[[],[[10,[-1,-2]]],[[2,[26]]],[]],[[],[[11,[-1,-2]]],[[2,[20]]],[]],[[],[[12,[-1,-2]]],[[2,[29]]],[]],[[],[[13,[-1,-2]]],[[2,[31]]],[]],[[[6,[-1,-2]]],22,[],[]],[[[9,[-1,-2]]],24,[],[]],[[[10,[-1,-2]]],26,[],[]],[[[11,[-1,-2]]],20,[],[]],[[[12,[-1,-2]]],29,[],[]],[[[13,[-1,-2]]],31,[],[]],[[[6,[-1,-2]],33],34,[],[]],[[[6,[-1,-2]],33],34,[],[]],[[[6,[-1,-2]],33],34,[],[]],[[[6,[-1,-2]],33],34,[],[]],[[[14,[-1]],33],34,[]],[[[14,[-1]],33],34,[]],[[[14,[-1]],33],34,[]],[[[14,[-1]],33],34,[]],[[[9,[-1,-2]],33],34,[],[]],[[[9,[-1,-2]],33],34,[],[]],[[[9,[-1,-2]],33],34,[],[]],[[[9,[-1,-2]],33],34,[],[]],[[[15,[-1]],33],34,[]],[[[15,[-1]],33],34,[]],[[[15,[-1]],33],34,[]],[[[15,[-1]],33],34,[]],[[[10,[-1,-2]],33],34,[],[]],[[[10,[-1,-2]],33],34,[],[]],[[[10,[-1,-2]],33],34,[],[]],[[[10,[-1,-2]],33],34,[],[]],[[[16,[-1]],33],34,[]],[[[16,[-1]],33],34,[]],[[[16,[-1]],33],34,[]],[[[16,[-1]],33],34,[]],[[[11,[-1,-2]],33],34,[],[]],[[[11,[-1,-2]],33],34,[],[]],[[[11,[-1,-2]],33],34,[],[]],[[[11,[-1,-2]],33],34,[],[]],[[[17,[-1]],33],34,[]],[[[17,[-1]],33],34,[]],[[[17,[-1]],33],34,[]],[[[17,[-1]],33],34,[]],[[[12,[-1,-2]],33],34,[],[]],[[[12,[-1,-2]],33],34,[],[]],[[[12,[-1,-2]],33],34,[],[]],[[[12,[-1,-2]],33],34,[],[]],[[[18,[-1]],33],34,[]],[[[18,[-1]],33],34,[]],[[[18,[-1]],33],34,[]],[[[18,[-1]],33],34,[]],[[[13,[-1,-2]],33],34,[],[]],[[[13,[-1,-2]],33],34,[],[]],[[[13,[-1,-2]],33],34,[],[]],[[[13,[-1,-2]],33],34,[],[]],[[[19,[-1]],33],34,[]],[[[19,[-1]],33],34,[]],[[[19,[-1]],33],34,[]],[[[19,[-1]],33],34,[]],[[21,33],34],[[21,33],34],[[21,33],34],[[21,33],34],[[23,33],34],[[23,33],34],[[23,33],34],[[23,33],34],[[25,33],34],[[25,33],34],[[25,33],34],[[25,33],34],[[27,33],34],[[27,33],34],[[27,33],34],[[27,33],34],[[28,33],34],[[28,33],34],[[28,33],34],[[28,33],34],[[30,33],34],[[30,33],34],[[30,33],34],[[30,33],34],[-1,-1,[]],[-1,6,[[35,[20]]]],[-1,-1,[]],[-1,-1,[]],[-1,9,[[35,[20]]]],[-1,-1,[]],[-1,-1,[]],[-1,10,[[35,[20]]]],[-1,-1,[]],[-1,-1,[]],[-1,11,[[35,[20]]]],[-1,-1,[]],[-1,12,[[35,[20]]]],[-1,-1,[]],[-1,-1,[]],[-1,13,[[35,[20]]]],[-1,-1,[]],[-1,-1,[]],[22,21],[-1,-1,[]],[-1,-1,[]],[24,23],[26,25],[-1,-1,[]],[-1,-1,[]],[20,27],[-1,-1,[]],[29,28],[31,30],[-1,-1,[]],[[[36,[20]]],[[6,[22]]]],[[[36,[20]]],[[9,[24]]]],[[[36,[20]]],[[10,[26]]]],[[[36,[20]]],[[11,[20]]]],[[[36,[20]]],[[12,[29]]]],[[[36,[20]]],[[13,[31]]]],[22,[[6,[22]]]],[24,[[9,[24]]]],[26,[[10,[26]]]],[20,[[11,[20]]]],[29,[[12,[29]]]],[31,[[13,[31]]]],[-1,[[6,[22]]],[[35,[20]]]],[-1,[[9,[24]]],[[35,[20]]]],[-1,[[10,[26]]],[[35,[20]]]],[-1,[[11,[20]]],[[35,[20]]]],[-1,[[12,[29]]],[[35,[20]]]],[-1,[[13,[31]]],[[35,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[6,[22]]]],[20,[[9,[24]]]],[20,[[10,[26]]]],[20,[[11,[20]]]],[20,[[12,[29]]]],[20,[[13,[31]]]],[[[6,[-1,-2]]],20,[],[]],[[[9,[-1,-2]]],20,[],[]],[[[10,[-1,-2]]],20,[],[]],[[[11,[-1,-2]]],20,[],[]],[[[12,[-1,-2]]],20,[],[]],[[[13,[-1,-2]]],20,[],[]],[[[6,[-1,-2]]],22,[],[]],[[[9,[-1,-2]]],24,[],[]],[[[10,[-1,-2]]],26,[],[]],[[[11,[-1,-2]]],20,[],[]],[[[12,[-1,-2]]],29,[],[]],[[[13,[-1,-2]]],31,[],[]],[[[6,[-1,-2]]],20,[],[]],[[[9,[-1,-2]]],20,[],[]],[[[10,[-1,-2]]],20,[],[]],[[[11,[-1,-2]]],20,[],[]],[[[12,[-1,-2]]],20,[],[]],[[[13,[-1,-2]]],20,[],[]],[22,21],[24,23],[26,25],[20,27],[29,28],[31,30],[[[6,[-1,-2]],20],[[6,[22,-2]]],[],[]],[[[9,[-1,-2]],20],[[9,[24,-2]]],[],[]],[[[10,[-1,-2]],20],[[10,[26,-2]]],[],[]],[[[11,[-1,-2]],20],[[11,[20,-2]]],[],[]],[[[12,[-1,-2]],20],[[12,[29,-2]]],[],[]],[[[13,[-1,-2]],20],[[13,[31,-2]]],[],[]],[[[6,[-1,-2]],-1,22],22,[[2,[22]]],[]],[[[9,[-1,-2]],-1,24],24,[[2,[24]]],[]],[[[10,[-1,-2]],-1,26],26,[[2,[26]]],[]],[[[11,[-1,-2]],-1,20],20,[[2,[20]]],[]],[[[12,[-1,-2]],-1,29],29,[[2,[29]]],[]],[[[13,[-1,-2]],-1,31],31,[[2,[31]]],[]],[[21,-1,[6,[-1,-2]]],21,[[2,[22]]],[]],[[23,-1,[9,[-1,-2]]],23,[[2,[24]]],[]],[[25,-1,[10,[-1,-2]]],25,[[2,[26]]],[]],[[27,-1,[11,[-1,-2]]],27,[[2,[20]]],[]],[[28,-1,[12,[-1,-2]]],28,[[2,[29]]],[]],[[30,-1,[13,[-1,-2]]],30,[[2,[31]]],[]],[[14,22,22],22],[[15,24,24],24],[[16,26,26],26],[[17,20,20],20],[[18,29,29],29],[[19,31,31],31],[[21,22,14],21],[[23,24,15],23],[[25,26,16],25],[[27,20,17],27],[[28,29,18],28],[[30,31,19],30],[[14,22,22],22],[[15,24,24],24],[[16,26,26],26],[[17,20,20],20],[[18,29,29],29],[[19,31,31],31],[[21,22,14],21],[[23,24,15],23],[[25,26,16],25],[[27,20,17],27],[[28,29,18],28],[[30,31,19],30],[22,21],[24,23],[26,25],[20,27],[29,28],[31,30],[[[6,[-1,-2]],-1,22],22,[[2,[22]]],[]],[[[9,[-1,-2]],-1,24],24,[[2,[24]]],[]],[[[10,[-1,-2]],-1,26],26,[[2,[26]]],[]],[[[11,[-1,-2]],-1,20],20,[[2,[20]]],[]],[[[12,[-1,-2]],-1,29],29,[[2,[29]]],[]],[[[13,[-1,-2]],-1,31],31,[[2,[31]]],[]],[[[6,[-1,-2]],22,22],22,[],[]],[[[9,[-1,-2]],24,24],24,[],[]],[[[10,[-1,-2]],26,26],26,[],[]],[[[11,[-1,-2]],20,20],20,[],[]],[[[12,[-1,-2]],29,29],29,[],[]],[[[13,[-1,-2]],31,31],31,[],[]],[[[6,[-1,-2]],22,22],22,[],[]],[[[9,[-1,-2]],24,24],24,[],[]],[[[10,[-1,-2]],26,26],26,[],[]],[[[11,[-1,-2]],20,20],20,[],[]],[[[12,[-1,-2]],29,29],29,[],[]],[[[13,[-1,-2]],31,31],31,[],[]],[[21,22,6],21],[[23,24,9],23],[[25,26,10],25],[[27,20,11],27],[[28,29,12],28],[[30,31,13],30],[[[6,[-1,-2]],[6,[-1,-2]]],[[14,[-1]]],[[2,[22]]],[]],[[[9,[-1,-2]],[9,[-1,-2]]],[[15,[-1]]],[[2,[24]]],[]],[[[10,[-1,-2]],[10,[-1,-2]]],[[16,[-1]]],[[2,[26]]],[]],[[[11,[-1,-2]],[11,[-1,-2]]],[[17,[-1]]],[[2,[20]]],[]],[[[12,[-1,-2]],[12,[-1,-2]]],[[18,[-1]]],[[2,[29]]],[]],[[[13,[-1,-2]],[13,[-1,-2]]],[[19,[-1]]],[[2,[31]]],[]],[[[6,[-1,-2]],20],[[14,[-1]]],[[2,[22]]],[]],[[[9,[-1,-2]],20],[[15,[-1]]],[[2,[24]]],[]],[[[10,[-1,-2]],20],[[16,[-1]]],[[2,[26]]],[]],[[[11,[-1,-2]],20],[[17,[-1]]],[[2,[20]]],[]],[[[12,[-1,-2]],20],[[18,[-1]]],[[2,[29]]],[]],[[[13,[-1,-2]],20],[[19,[-1]]],[[2,[31]]],[]],[[[6,[-1,-2]],[6,[-1,-3]]],[[14,[-1]]],[[2,[22]]],[],[]],[[[9,[-1,-2]],[9,[-1,-3]]],[[15,[-1]]],[[2,[24]]],[],[]],[[[10,[-1,-2]],[10,[-1,-3]]],[[16,[-1]]],[[2,[26]]],[],[]],[[[11,[-1,-2]],[11,[-1,-3]]],[[17,[-1]]],[[2,[20]]],[],[]],[[[12,[-1,-2]],[12,[-1,-3]]],[[18,[-1]]],[[2,[29]]],[],[]],[[[13,[-1,-2]],[13,[-1,-3]]],[[19,[-1]]],[[2,[31]]],[],[]],[[[6,[-1,-2]]],22,[],[]],[[[9,[-1,-2]]],24,[],[]],[[[10,[-1,-2]]],26,[],[]],[[[11,[-1,-2]]],20,[],[]],[[[12,[-1,-2]]],29,[],[]],[[[13,[-1,-2]]],31,[],[]],[[[6,[-1,-2]]],[[6,[22,-2]]],[],[]],[[[9,[-1,-2]]],[[9,[24,-2]]],[],[]],[[[10,[-1,-2]]],[[10,[26,-2]]],[],[]],[[[11,[-1,-2]]],[[11,[20,-2]]],[],[]],[[[12,[-1,-2]]],[[12,[29,-2]]],[],[]],[[[13,[-1,-2]]],[[13,[31,-2]]],[],[]],[[[6,[-1,-2]],22],22,[],[]],[[[9,[-1,-2]],24],24,[],[]],[[[10,[-1,-2]],26],26,[],[]],[[[11,[-1,-2]],20],20,[],[]],[[[12,[-1,-2]],29],29,[],[]],[[[13,[-1,-2]],31],31,[],[]],[[21,[6,[-1,-2]]],21,[],[]],[[23,[9,[-1,-2]]],23,[],[]],[[25,[10,[-1,-2]]],25,[],[]],[[27,[11,[-1,-2]]],27,[],[]],[[28,[12,[-1,-2]]],28,[],[]],[[30,[13,[-1,-2]]],30,[],[]],[[[6,[-1,-2]],22],22,[],[]],[[[9,[-1,-2]],24],24,[],[]],[[[10,[-1,-2]],26],26,[],[]],[[[11,[-1,-2]],20],20,[],[]],[[[12,[-1,-2]],29],29,[],[]],[[[13,[-1,-2]],31],31,[],[]],[14,6],[15,9],[16,10],[17,11],[18,12],[19,13],[[20,20],[[6,[-1,-2]]],[[2,[22]]],[]],[[20,20],[[9,[-1,-2]]],[[2,[24]]],[]],[[20,20],[[10,[-1,-2]]],[[2,[26]]],[]],[[20,20],[[11,[-1,-2]]],[[2,[20]]],[]],[[20,20],[[12,[-1,-2]]],[[2,[29]]],[]],[[20,20],[[13,[-1,-2]]],[[2,[31]]],[]],[[[6,[-1,-2]]],[[6,[-3,-2]]],[],[],[[2,[22]]]],[[[9,[-1,-2]]],[[9,[-3,-2]]],[],[],[[2,[24]]]],[[[10,[-1,-2]]],[[10,[-3,-2]]],[],[],[[2,[26]]]],[[[11,[-1,-2]]],[[11,[-3,-2]]],[],[],[[2,[20]]]],[[[12,[-1,-2]]],[[12,[-3,-2]]],[],[],[[2,[29]]]],[[[13,[-1,-2]]],[[13,[-3,-2]]],[],[],[[2,[31]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[6,[-1,-2]],22],[[4,[-1]]],[[2,[22]]],[]],[[[9,[-1,-2]],24],[[4,[-1]]],[[2,[24]]],[]],[[[10,[-1,-2]],26],[[4,[-1]]],[[2,[26]]],[]],[[[11,[-1,-2]],20],[[4,[-1]]],[[2,[20]]],[]],[[[12,[-1,-2]],29],[[4,[-1]]],[[2,[29]]],[]],[[[13,[-1,-2]],31],[[4,[-1]]],[[2,[31]]],[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[-1,37,[]],[[[6,[-1,-2]],22],-1,[[2,[22]],[2,[22]]],[]],[[[9,[-1,-2]],24],-1,[[2,[24]],[2,[24]]],[]],[[[10,[-1,-2]],26],-1,[[2,[26]],[2,[26]]],[]],[[[11,[-1,-2]],20],-1,[[2,[20]],[2,[20]]],[]],[[[12,[-1,-2]],29],-1,[[2,[29]],[2,[29]]],[]],[[[13,[-1,-2]],31],-1,[[2,[31]],[2,[31]]],[]],[[[6,[-1,-2]],22],22,[],[]],[[[9,[-1,-2]],24],24,[],[]],[[[10,[-1,-2]],26],26,[],[]],[[[11,[-1,-2]],20],20,[],[]],[[[12,[-1,-2]],29],29,[],[]],[[[13,[-1,-2]],31],31,[],[]],[[[6,[-1,-2]],22],22,[],[]],[[[9,[-1,-2]],24],24,[],[]],[[[10,[-1,-2]],26],26,[],[]],[[[11,[-1,-2]],20],20,[],[]],[[[12,[-1,-2]],29],29,[],[]],[[[13,[-1,-2]],31],31,[],[]],[[21,[6,[-1,-2]]],21,[],[]],[[23,[9,[-1,-2]]],23,[],[]],[[25,[10,[-1,-2]]],25,[],[]],[[27,[11,[-1,-2]]],27,[],[]],[[28,[12,[-1,-2]]],28,[],[]],[[30,[13,[-1,-2]]],30,[],[]],[[[6,[-1,-2]],22],22,[],[]],[[[9,[-1,-2]],24],24,[],[]],[[[10,[-1,-2]],26],26,[],[]],[[[11,[-1,-2]],20],20,[],[]],[[[12,[-1,-2]],29],29,[],[]],[[[13,[-1,-2]],31],31,[],[]]],"c":[],"p":[[17,"Error"],[10,"FromBits",0],[10,"Display",590],[6,"Result",591],[1,"str"],[5,"PackUsize",8],[1,"tuple"],[1,"slice"],[5,"Pack128",8],[5,"Pack64",8],[5,"Pack32",8],[5,"Pack16",8],[5,"Pack8",8],[5,"PairUsize",8],[5,"Pair128",8],[5,"Pair64",8],[5,"Pair32",8],[5,"Pair16",8],[5,"Pair8",8],[1,"u32"],[5,"PackingUsize",8],[1,"usize"],[5,"Packing128",8],[1,"u128"],[5,"Packing64",8],[1,"u64"],[5,"Packing32",8],[5,"Packing16",8],[1,"u16"],[5,"Packing8",8],[1,"u8"],[1,"bool"],[5,"Formatter",590],[8,"Result",590],[10,"RangeBounds",592],[5,"Range",592],[5,"TypeId",593]],"b":[[140,"impl-PartialEq%3CPackUsize%3CB,+F%3E%3E-for-PackUsize%3CA,+F%3E"],[141,"impl-PartialEq%3CPackUsize%3CB,+F%3E%3E-for-%26PackUsize%3CA,+F%3E"],[142,"impl-PartialEq%3C%26PackUsize%3CB,+F%3E%3E-for-PackUsize%3CA,+F%3E"],[143,"impl-PartialEq%3CPairUsize%3CB%3E%3E-for-%26PairUsize%3CA%3E"],[144,"impl-PartialEq%3C%26PairUsize%3CB%3E%3E-for-PairUsize%3CA%3E"],[145,"impl-PartialEq%3CPairUsize%3CB%3E%3E-for-PairUsize%3CA%3E"],[146,"impl-PartialEq%3CPack128%3CB,+F%3E%3E-for-%26Pack128%3CA,+F%3E"],[147,"impl-PartialEq%3CPack128%3CB,+F%3E%3E-for-Pack128%3CA,+F%3E"],[148,"impl-PartialEq%3C%26Pack128%3CB,+F%3E%3E-for-Pack128%3CA,+F%3E"],[149,"impl-PartialEq%3CPair128%3CB%3E%3E-for-%26Pair128%3CA%3E"],[150,"impl-PartialEq%3C%26Pair128%3CB%3E%3E-for-Pair128%3CA%3E"],[151,"impl-PartialEq%3CPair128%3CB%3E%3E-for-Pair128%3CA%3E"],[152,"impl-PartialEq%3CPack64%3CB,+F%3E%3E-for-%26Pack64%3CA,+F%3E"],[153,"impl-PartialEq%3C%26Pack64%3CB,+F%3E%3E-for-Pack64%3CA,+F%3E"],[154,"impl-PartialEq%3CPack64%3CB,+F%3E%3E-for-Pack64%3CA,+F%3E"],[155,"impl-PartialEq%3C%26Pair64%3CB%3E%3E-for-Pair64%3CA%3E"],[156,"impl-PartialEq%3CPair64%3CB%3E%3E-for-Pair64%3CA%3E"],[157,"impl-PartialEq%3CPair64%3CB%3E%3E-for-%26Pair64%3CA%3E"],[158,"impl-PartialEq%3CPack32%3CB,+F%3E%3E-for-%26Pack32%3CA,+F%3E"],[159,"impl-PartialEq%3C%26Pack32%3CB,+F%3E%3E-for-Pack32%3CA,+F%3E"],[160,"impl-PartialEq%3CPack32%3CB,+F%3E%3E-for-Pack32%3CA,+F%3E"],[161,"impl-PartialEq%3C%26Pair32%3CB%3E%3E-for-Pair32%3CA%3E"],[162,"impl-PartialEq%3CPair32%3CB%3E%3E-for-Pair32%3CA%3E"],[163,"impl-PartialEq%3CPair32%3CB%3E%3E-for-%26Pair32%3CA%3E"],[164,"impl-PartialEq%3C%26Pack16%3CB,+F%3E%3E-for-Pack16%3CA,+F%3E"],[165,"impl-PartialEq%3CPack16%3CB,+F%3E%3E-for-%26Pack16%3CA,+F%3E"],[166,"impl-PartialEq%3CPack16%3CB,+F%3E%3E-for-Pack16%3CA,+F%3E"],[167,"impl-PartialEq%3C%26Pair16%3CB%3E%3E-for-Pair16%3CA%3E"],[168,"impl-PartialEq%3CPair16%3CB%3E%3E-for-%26Pair16%3CA%3E"],[169,"impl-PartialEq%3CPair16%3CB%3E%3E-for-Pair16%3CA%3E"],[170,"impl-PartialEq%3C%26Pack8%3CB,+F%3E%3E-for-Pack8%3CA,+F%3E"],[171,"impl-PartialEq%3CPack8%3CB,+F%3E%3E-for-%26Pack8%3CA,+F%3E"],[172,"impl-PartialEq%3CPack8%3CB,+F%3E%3E-for-Pack8%3CA,+F%3E"],[173,"impl-PartialEq%3C%26Pair8%3CB%3E%3E-for-Pair8%3CA%3E"],[174,"impl-PartialEq%3CPair8%3CB%3E%3E-for-Pair8%3CA%3E"],[175,"impl-PartialEq%3CPair8%3CB%3E%3E-for-%26Pair8%3CA%3E"],[194,"impl-UpperHex-for-PackUsize%3CT,+F%3E"],[195,"impl-LowerHex-for-PackUsize%3CT,+F%3E"],[196,"impl-Binary-for-PackUsize%3CT,+F%3E"],[197,"impl-Debug-for-PackUsize%3CT,+F%3E"],[198,"impl-Binary-for-PairUsize%3CT%3E"],[199,"impl-Debug-for-PairUsize%3CT%3E"],[200,"impl-UpperHex-for-PairUsize%3CT%3E"],[201,"impl-LowerHex-for-PairUsize%3CT%3E"],[202,"impl-Binary-for-Pack128%3CT,+F%3E"],[203,"impl-LowerHex-for-Pack128%3CT,+F%3E"],[204,"impl-Debug-for-Pack128%3CT,+F%3E"],[205,"impl-UpperHex-for-Pack128%3CT,+F%3E"],[206,"impl-Debug-for-Pair128%3CT%3E"],[207,"impl-LowerHex-for-Pair128%3CT%3E"],[208,"impl-UpperHex-for-Pair128%3CT%3E"],[209,"impl-Binary-for-Pair128%3CT%3E"],[210,"impl-UpperHex-for-Pack64%3CT,+F%3E"],[211,"impl-Debug-for-Pack64%3CT,+F%3E"],[212,"impl-LowerHex-for-Pack64%3CT,+F%3E"],[213,"impl-Binary-for-Pack64%3CT,+F%3E"],[214,"impl-Binary-for-Pair64%3CT%3E"],[215,"impl-Debug-for-Pair64%3CT%3E"],[216,"impl-UpperHex-for-Pair64%3CT%3E"],[217,"impl-LowerHex-for-Pair64%3CT%3E"],[218,"impl-Binary-for-Pack32%3CT,+F%3E"],[219,"impl-Debug-for-Pack32%3CT,+F%3E"],[220,"impl-LowerHex-for-Pack32%3CT,+F%3E"],[221,"impl-UpperHex-for-Pack32%3CT,+F%3E"],[222,"impl-Binary-for-Pair32%3CT%3E"],[223,"impl-LowerHex-for-Pair32%3CT%3E"],[224,"impl-Debug-for-Pair32%3CT%3E"],[225,"impl-UpperHex-for-Pair32%3CT%3E"],[226,"impl-UpperHex-for-Pack16%3CT,+F%3E"],[227,"impl-LowerHex-for-Pack16%3CT,+F%3E"],[228,"impl-Binary-for-Pack16%3CT,+F%3E"],[229,"impl-Debug-for-Pack16%3CT,+F%3E"],[230,"impl-UpperHex-for-Pair16%3CT%3E"],[231,"impl-Binary-for-Pair16%3CT%3E"],[232,"impl-LowerHex-for-Pair16%3CT%3E"],[233,"impl-Debug-for-Pair16%3CT%3E"],[234,"impl-UpperHex-for-Pack8%3CT,+F%3E"],[235,"impl-Binary-for-Pack8%3CT,+F%3E"],[236,"impl-Debug-for-Pack8%3CT,+F%3E"],[237,"impl-LowerHex-for-Pack8%3CT,+F%3E"],[238,"impl-LowerHex-for-Pair8%3CT%3E"],[239,"impl-Binary-for-Pair8%3CT%3E"],[240,"impl-Debug-for-Pair8%3CT%3E"],[241,"impl-UpperHex-for-Pair8%3CT%3E"],[242,"impl-UpperHex-for-PackingUsize"],[243,"impl-Debug-for-PackingUsize"],[244,"impl-Binary-for-PackingUsize"],[245,"impl-LowerHex-for-PackingUsize"],[246,"impl-LowerHex-for-Packing128"],[247,"impl-UpperHex-for-Packing128"],[248,"impl-Binary-for-Packing128"],[249,"impl-Debug-for-Packing128"],[250,"impl-LowerHex-for-Packing64"],[251,"impl-Binary-for-Packing64"],[252,"impl-Debug-for-Packing64"],[253,"impl-UpperHex-for-Packing64"],[254,"impl-Debug-for-Packing32"],[255,"impl-Binary-for-Packing32"],[256,"impl-UpperHex-for-Packing32"],[257,"impl-LowerHex-for-Packing32"],[258,"impl-LowerHex-for-Packing16"],[259,"impl-UpperHex-for-Packing16"],[260,"impl-Binary-for-Packing16"],[261,"impl-Debug-for-Packing16"],[262,"impl-Debug-for-Packing8"],[263,"impl-UpperHex-for-Packing8"],[264,"impl-LowerHex-for-Packing8"],[265,"impl-Binary-for-Packing8"]]}],\
["mycelium_util",{"doc":"mycelium-util","t":"ECCECCQCQCQQKFNNNNNNNNNNNNNNNNNNNNNNNNNNGFKPKYFFFFFFKPFFFFFPKKKPKIPKKFKKNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNHNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNMNNNPPPPKFFPPPPFFPPFGFPPPPPPPPKFIKGFPFPPPKPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNHNHNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNHMNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNEEEEKMMMMQQHHHTFKFFTFUTTTNHHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHHNNNNNNNNNHHNNNNNNNNNNNNNOHHHNNNQNHOHHHNNNNNNNHHNNNNNHHNNNNNNNNNNNNNNNNNNNHOHNNNNHNFFFCNNCNNNNNNNNNCNNNCCNNNNSSSPPFFFFFFFFFFFFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFTFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["bits","error","fmt","intrusive","io","math","max","mem","min","sync","unreachable_unchecked","unreachable_unchecked","Error","ErrorIter","borrow","borrow_mut","clone","clone_into","downcast_mut","downcast_mut","downcast_mut","downcast_ref","downcast_ref","downcast_ref","fmt","from","into","into_iter","is","is","is","iter_chain","iter_sources","next","source","to_owned","try_from","try_into","type_id","type_id","Alignment","Arguments","Binary","Center","Debug","Debug","DebugList","DebugMap","DebugSet","DebugStruct","DebugTuple","DebugValue","Display","Err","Error","FmtOption","FormatWith","Formatter","FormatterFn","Left","LowerExp","LowerHex","Octal","Ok","Pointer","Result","Right","UpperExp","UpperHex","WithIndent","Write","WriteExt","align","alt","alternate","as_str","bin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","comma_delimited","debug","debug_list","debug_map","debug_set","debug_struct","debug_tuple","default","description","display","entries","entries","entries","entry","entry","entry","entry_with","entry_with","eq","eq","field","field","field_with","field_with","fill","finish","finish","finish","finish","finish","finish_non_exhaustive","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hex","into","into","into","into","into","into","into","into","into","into","into","into","into","into","key","key_with","new","opt","or_else","pad","pad_integral","partial_cmp","precision","ptr","record","record","record_debug","record_debug","sign_aware_zero_pad","sign_minus","sign_plus","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value_with","width","with_indent","write","write_char","write_char","write_fmt","write_fmt","write_fmt","write_str","write_str","write_str","write_str","AddrInUse","AddrNotAvailable","AlreadyExists","BrokenPipe","BufRead","Bytes","Chain","ConnectionAborted","ConnectionRefused","ConnectionReset","Current","Cursor","Empty","End","Err","Error","ErrorKind","Initializer","Interrupted","InvalidData","InvalidInput","NotConnected","NotFound","Ok","Other","PermissionDenied","Read","Repeat","Result","Seek","SeekFrom","Sink","Start","Take","TimedOut","UnexpectedEof","WouldBlock","Write","WriteZero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_ref","by_ref","bytes","chain","clone","clone","clone","clone_into","clone_into","clone_into","cmp","consume","consume","consume","consume","copy","default","empty","eq","eq","fill_buf","fill_buf","fill_buf","fill_buf","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","hash","initialize","initializer","initializer","initializer","initializer","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","kind","limit","new","new","next","nop","partial_cmp","position","prelude","read","read","read","read","read","read","read_exact","read_exact","repeat","seek","seek","set_limit","set_position","should_initialize","sink","source","stream_len","stream_len","stream_position","stream_position","take","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","zeroing","BufRead","Read","Seek","Write","Logarithm","checked_log","log","log2","log2_ceil","max","min","usize_const_checked_log","usize_const_log2","usize_const_log2_ceil","ALIGNMENT","Assume","BikeshedIntrinsicFrom","CheckedMaybeUninit","Discriminant","LIFETIMES","ManuallyDrop","MaybeUninit","NOTHING","SAFETY","VALIDITY","add","align_of","align_of_val","align_of_val_raw","alignment","and","array_assume_init","as_bytes","as_bytes_mut","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","assume_init","assume_init","assume_init_drop","assume_init_drop","assume_init_mut","assume_init_mut","assume_init_read","assume_init_read","assume_init_ref","assume_init_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","but_not","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","copy","default","deref","deref_mut","discriminant","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","forget","forget_unsized","from","from","from","from","from","hash","hash","into","into","into","into","into","into_inner","lifetimes","min_align_of","min_align_of_val","needs_drop","new","new","new","offset_of","partial_cmp","replace","safety","size_of","size_of_val","size_of_val_raw","slice_as_bytes","slice_as_bytes_mut","slice_as_mut_ptr","slice_as_ptr","slice_assume_init_mut","slice_assume_init_ref","sub","swap","take","take","to_owned","to_owned","to_owned","to_owned","transmute","transmute_copy","transpose","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uninit","uninit","uninit_array","uninitialized","validity","variant_count","write","write","write_slice","write_slice_cloned","zeroed","zeroed","CachePadded","InitOnce","Lazy","atomic","borrow","borrow_mut","cell","clone","clone_into","default","deref","deref_mut","eq","fmt","from","hash","hint","into","into_inner","new","once","spin","to_owned","try_from","try_into","type_id","ATOMIC_BOOL_INIT","ATOMIC_ISIZE_INIT","ATOMIC_USIZE_INIT","AcqRel","Acquire","AtomicBool","AtomicI16","AtomicI32","AtomicI64","AtomicI8","AtomicIsize","AtomicPtr","AtomicU16","AtomicU32","AtomicU64","AtomicU8","AtomicUsize","Ordering","Relaxed","Release","SeqCst","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_and_swap","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compiler_fence","default","default","default","default","default","default","default","default","default","default","default","default","eq","fence","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_byte_add","fetch_byte_sub","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_not","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_ptr_add","fetch_ptr_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_mut_slice","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","get_mut_slice","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","load","load","load","load","load","load","load","load","load","load","load","load","new","new","new","new","new","new","new","new","new","new","new","new","spin_loop_hint","store","store","store","store","store","store","store","store","store","store","store","store","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Cell","ConstPtr","MutPtr","UnsafeCell","as_array_of_cells","as_ptr","as_slice_of_cells","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_mut","ge","get","get","get_mut","get_mut","gt","into","into","into","into","into_inner","le","lt","new","new","partial_cmp","replace","set","swap","take","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","with","with","with","with_mut","spin_loop","InitOnce","Lazy","TryInitError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","fmt","fmt","fmt","fmt","from","from","from","get","get","get_if_present","get_mut","get_or_else","get_unchecked","init","init","into","into","into","into_inner","new","to_string","try_from","try_from","try_from","try_get","try_init","try_into","try_into","try_into","type_id","type_id","type_id","uninitialized","Backoff","DEFAULT_MAX_EXPONENT","Mutex","MutexGuard","as_mut","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","fmt","fmt","fmt","force_unlock","from","from","from","into","into","into","lock","new","new","spin","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","with_max_exponent"],"q":[[0,"mycelium_util"],[12,"mycelium_util::error"],[40,"mycelium_util::fmt"],[285,"mycelium_util::io"],[497,"mycelium_util::io::prelude"],[501,"mycelium_util::math"],[511,"mycelium_util::mem"],[653,"mycelium_util::sync"],[679,"mycelium_util::sync::atomic"],[1109,"mycelium_util::sync::cell"],[1180,"mycelium_util::sync::hint"],[1181,"mycelium_util::sync::once"],[1225,"mycelium_util::sync::spin"],[1271,"core::option"],[1272,"core::result"],[1273,"core::any"],[1274,"core::clone"],[1275,"core::cmp"],[1276,"core::iter::traits::collect"],[1277,"tracing_core::field"],[1278,"core::ops::function"],[1279,"core::ops::function"],[1280,"tracing_core::field"],[1281,"core::convert"],[1282,"core::marker"],[1283,"core::default"],[1284,"core::marker"]],"d":["","An <code>Error</code> trait based on <code>std::error::Error</code>.","Text formatting utilities.","","A modified version of the Rust standard library’s <code>std::io</code>…","Math utilities.","Variadic version of <code>core::cmp::max</code>.","Basic functions for dealing with memory.","Variadic version of <code>core::cmp::min</code>.","Synchronization primitives, and utilities for implementing …","Indicates unreachable code that we are confident is <em>truly</em> …","Indicates unreachable code that we are confident is <em>truly</em> …","<code>Error</code> is a trait representing the basic expectations for …","An iterator over <code>Error</code>","","","","","Returns some mutable reference to the boxed value if it is …","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Returns some reference to the boxed value if it is of type …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Forwards to the method defined on the type <code>dyn Error</code>.","Forwards to the method defined on the type <code>dyn Error</code>.","Returns <code>true</code> if the boxed type is the same as <code>T</code>","Returns an iterator starting with the current error and …","Returns an iterator starting with the <code>source</code> of this error …","","The lower-level source of this error, if any.","","","","Gets the <code>TypeId</code> of <code>self</code>.","","Possible alignments returned by <code>Formatter::align</code>","This structure represents a safely precompiled version of …","<code>b</code> formatting.","Indication that contents should be center-aligned.","<code>?</code> formatting.","Derive macro generating an impl of the trait <code>Debug</code>.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A struct to help with <code>fmt::Debug</code> implementations.","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","Format trait for an empty format, <code>{}</code>.","Contains the error value","The error type which is returned from formatting a message …","A utility to assist with formatting <code>Option</code> values.","A wrapper type that formats the wrapped value using a …","Configuration for formatting.","Implements <code>fmt::Debug</code> and <code>fmt::Display</code> using a function.","Indication that contents should be left-aligned.","<code>e</code> formatting.","<code>x</code> formatting.","<code>o</code> formatting.","Contains the success value","<code>p</code> formatting.","The type returned by formatter methods.","Indication that contents should be right-aligned.","<code>E</code> formatting.","<code>X</code> formatting.","Wraps a type implementing <code>core::fmt::Write</code> so that every …","A trait for writing or formatting into Unicode-accepting …","Extension trait adding additional methods to types …","Flag indicating what form of alignment was requested.","Format the provided value using its <code>core::fmt::Debug</code> …","Determines if the <code>#</code> flag was specified.","Get the formatted string, if it has no arguments to be …","Format the provided value using its <code>core::fmt::Binary</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats a list of <code>F</code>-typed values to the provided <code>writer</code>, …","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Creates a <code>DebugList</code> builder designed to assist with …","Creates a <code>DebugMap</code> builder designed to assist with …","Creates a <code>DebugSet</code> builder designed to assist with …","Creates a <code>DebugStruct</code> builder designed to assist with …","Creates a <code>DebugTuple</code> builder designed to assist with …","","","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","Adds the contents of an iterator of entries to the set …","Adds the contents of an iterator of entries to the list …","Adds the contents of an iterator of entries to the map …","Adds a new entry to the set output.","Adds a new entry to the list output.","Adds a new entry to the map output.","Adds a new entry to the set output.","Adds a new entry to the list output.","","","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Adds a new field to the generated struct output.","Adds a new field to the generated tuple struct output.","Character used as ‘fill’ whenever there is alignment.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Finishes output and returns any error encountered.","Marks the struct as non-exhaustive, indicating to the …","Flags for formatting","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","Formats the value using the given formatter.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Format the provided value using its <code>core::fmt::LowerHex</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Adds the key part of a new entry to the map output.","Adds the key part of a new entry to the map output.","Returns a new <code>FmtOption</code> that formats the provided <code>Option</code> …","Borrows an <code>Option</code> as a <code>FmtOption</code> that formats the inner …","Set the text to emit when the value is <code>None</code>.","This function takes a string slice and emits it to the …","Performs the correct padding for an integer which has …","","Optionally specified precision for numeric types. …","Format the provided value using its <code>core::fmt::Pointer</code> …","","","","","Determines if the <code>0</code> flag was specified.","Determines if the <code>-</code> flag was specified.","Determines if the <code>+</code> flag was specified.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the value part of a new entry to the map output.","Adds the value part of a new entry to the map output.","Optionally specified integer width that the output should …","Wraps <code>self</code> in a <code>WithIndent</code> writer that indents every new …","The <code>write</code> function takes an output stream, and an <code>Arguments</code>…","Writes a <code>char</code> into this writer, returning whether the …","","Glue for usage of the <code>write!</code> macro with implementors of …","Writes some formatted information into this instance.","","Writes a string slice into this writer, returning whether …","","Writes some data to the underlying buffer contained within …","","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","An entity already exists, often a file.","The operation failed because a pipe was closed.","A <code>BufRead</code> is a type of <code>Read</code>er which has an internal …","An iterator over <code>u8</code> values of a reader.","Adaptor to chain together two readers.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Sets the offset to the current position plus the specified …","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …","A reader which is always at EOF.","Sets the offset to the size of this object plus the …","Contains the error value","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","A list specifying general categories of I/O error.","A type used to conditionally initialize buffers passed to …","This operation was interrupted.","Data not valid for the operation were encountered.","A parameter was incorrect.","The network operation failed because it was not connected …","An entity was not found, often a file.","Contains the success value","Any I/O error not part of this list.","The operation lacked the necessary privileges to complete.","The <code>Read</code> trait allows for reading bytes from a source.","A reader which yields one byte over and over and over and …","A specialized <code>Result</code> type for I/O operations.","The <code>Seek</code> trait provides a cursor which can be moved within …","Enumeration of possible methods to seek within an I/O …","A writer which will move data into the void.","Sets the offset to the provided number of bytes.","Reader adaptor which limits the bytes read from an …","The I/O operation’s timeout expired, causing it to be …","An error returned when an operation could not be completed …","The operation needs to block to complete, but the blocking …","A trait for objects which are byte-oriented sinks.","An error returned when an operation could not be completed …","","","","","","","","","","","","","","","","","","","","","","","Creates a “by reference” adaptor for this instance of …","Creates a “by reference” adaptor for this instance of …","Transforms this <code>Read</code> instance to an <code>Iterator</code> over its …","Creates an adaptor which will chain this stream with …","","","","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","Copies the entire contents of a reader into a writer.","","Constructs a new handle to an empty reader.","","","Returns the contents of the internal buffer, filling it …","","","","Flush this output stream, ensuring that all intermediately …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets mutable references to the underlying readers in this …","Gets a mutable reference to the underlying value in this …","Gets a mutable reference to the underlying reader.","Gets references to the underlying readers in this <code>Chain</code>.","Gets a reference to the underlying value in this cursor.","Gets a reference to the underlying reader.","","Initializes a buffer if necessary.","","","Determines if this <code>Read</code>er can work with buffers of …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Chain</code>, returning the wrapped readers.","Consumes this cursor, returning the underlying value.","Consumes the <code>Take</code>, returning the wrapped reader.","","Returns the <code>ErrorKind</code> of this error.","Returns the number of bytes that can be read before this …","Creates a new cursor wrapping the provided underlying …","Returns a new I/O error with the provided <code>ErrorKind</code> and …","","Returns a new <code>Initializer</code> which will not zero out buffers.","","Returns the current position of this cursor.","The Mycelium I/O Prelude","Pull some bytes from this source into the specified …","","","","","","Read the exact number of bytes required to fill <code>buf</code>.","","Creates an instance of a reader that infinitely repeats …","Seek to an offset, in bytes, in a stream.","","Sets the number of bytes that can be read before this …","Sets the position of this cursor.","Indicates if a buffer should be initialized.","Creates an instance of a writer which will successfully …","","Returns the length of this stream (in bytes).","","Returns the current seek position from the start of the …","","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write a buffer into this writer, returning how many bytes …","","","Attempts to write an entire buffer into this writer.","Writes a formatted string into this writer, returning any …","Returns a new <code>Initializer</code> which will zero out buffers.","","","","","Extension trait adding logarithm methods to integers.","Returns the integer logarithm base <code>base</code> of <code>self</code>, or <code>None</code> …","Returns the integer logarithm base <code>base</code> of <code>self</code>.","Returns <code>log2(self)</code>.","Returns <code>ceiling(log2(self))</code>.","Variadic version of <code>core::cmp::max</code>.","Variadic version of <code>core::cmp::min</code>.","Returns the <code>base</code> logarithm of <code>n</code>.","Returns <code>log2(n)</code>.","Returns <code>ceiling(log2(n))</code>.","Assume only that alignment conditions are met.","What transmutation safety conditions shall the compiler …","Are values of a type transmutable into values of another …","A checked version of <code>core::mem::MaybeUninit</code>.","Opaque type representing the discriminant of an enum.","Assume only that lifetime conditions are met.","A wrapper to inhibit compiler from automatically calling <code>T</code>…","A wrapper type to construct uninitialized instances of <code>T</code>.","Do not assume that <em>you</em> have ensured any safety properties …","Assume only that safety conditions are met.","Assume only that dynamically-satisfiable validity …","","Returns the ABI-required minimum alignment of a type in …","Returns the ABI-required minimum alignment of the type of …","Returns the ABI-required minimum alignment of the type of …","When <code>true</code>, the compiler assumes that <em>you</em> are ensuring …","Assume both <code>self</code> and <code>other_assumptions</code>.","Extracts the values from an array of <code>MaybeUninit</code> …","Returns the contents of this <code>MaybeUninit</code> as a slice of …","Returns the contents of this <code>MaybeUninit</code> as a mutable …","Gets a mutable pointer to the contained value. Reading …","Gets a mutable pointer to the contained value. Reading …","Gets a pointer to the contained value. Reading from this …","Gets a pointer to the contained value. Reading from this …","Extracts the value from the <code>CheckedMaybeUninit&lt;T&gt;</code> …","Extracts the value from the <code>MaybeUninit&lt;T&gt;</code> container. This …","Drops the contained value in place.","Drops the contained value in place.","Gets a mutable (unique) reference to the contained value.","Gets a mutable (unique) reference to the contained value.","Reads the value from the <code>CheckedMaybeUninit&lt;T&gt;</code> container. …","Reads the value from the <code>MaybeUninit&lt;T&gt;</code> container. The …","Gets a shared reference to the contained value.","Gets a shared reference to the contained value.","","","","","","","","","","","Assume <code>self</code>, excepting <code>other_assumptions</code>.","","","","","","","","","","Bitwise-copies a value.","","","","Returns a value uniquely identifying the enum variant in <code>v</code>.","Disposes of a value.","Manually drops the contained value. This is exactly …","","","","","","","","","Takes ownership and “forgets” about the value <strong>without </strong>…","Like <code>forget</code>, but also accepts unsized values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extracts the value from the <code>ManuallyDrop</code> container.","When <code>true</code>, the compiler assume that <em>you</em> are ensuring that …","Returns the ABI-required minimum alignment of a type in …","Returns the ABI-required minimum alignment of the type of …","Returns <code>true</code> if dropping values of type <code>T</code> matters.","Creates a new <code>CheckedMaybeUninit&lt;T&gt;</code> initialized with the …","Wrap a value to be manually dropped.","Creates a new <code>MaybeUninit&lt;T&gt;</code> initialized with the given …","Expands to the offset in bytes of a field from the …","","Moves <code>src</code> into the referenced <code>dest</code>, returning the previous …","When <code>true</code>, the compiler assumes that <em>you</em> have ensured that …","Returns the size of a type in bytes.","Returns the size of the pointed-to value in bytes.","Returns the size of the pointed-to value in bytes.","Returns the contents of this slice of <code>MaybeUninit</code> as a …","Returns the contents of this mutable slice of <code>MaybeUninit</code> …","Gets a mutable pointer to the first element of the array.","Gets a pointer to the first element of the array.","Assuming all the elements are initialized, get a mutable …","Assuming all the elements are initialized, get a slice to …","","Swaps the values at two mutable locations, without …","Replaces <code>dest</code> with the default value of <code>T</code>, returning the …","Takes the value from the <code>ManuallyDrop&lt;T&gt;</code> container out.","","","","","Reinterprets the bits of a value of one type as another …","Interprets <code>src</code> as having type <code>&amp;Dst</code>, and then reads <code>src</code> …","Transposes a <code>MaybeUninit&lt;[T; N]&gt;</code> into a <code>[MaybeUninit&lt;T&gt;; N]</code>…","","","","","","","","","","","","","","","","Creates a new <code>CheckedMaybeUninit&lt;T&gt;</code> in an uninitialized …","Creates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state.","Create a new array of <code>MaybeUninit&lt;T&gt;</code> items, in an …","Bypasses Rust’s normal memory-initialization checks by …","When <code>true</code>, the compiler assumes that <em>you</em> are ensuring that …","Returns the number of variants in the enum type <code>T</code>.","Sets the value of the <code>CheckedMaybeUninit&lt;T&gt;</code>.","Sets the value of the <code>MaybeUninit&lt;T&gt;</code>.","Copies the elements from <code>src</code> to <code>this</code>, returning a mutable …","Clones the elements from <code>src</code> to <code>this</code>, returning a mutable …","Returns the value of type <code>T</code> represented by the all-zero …","Creates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state, …","Aligns the wrapped value to the size of a cache line.","A cell which may be initialized a single time after it is …","A cell which will be lazily initialized by the provided …","Atomic types","","","A variant of <code>core::cell::UnsafeCell</code> specialized for use in …","","","","","","","","Returns the argument unchanged.","","A wrapper for the <code>core::hint</code> module that emits either <code>loom</code> …","Calls <code>U::from(self)</code>.","Unwraps the inner value and returns it.","Pads <code>value</code> to the length of a cache line.","Cells storing a value which must be initialized prior to …","Spinlocks and related synchronization primitives.","","","","","An <code>AtomicBool</code> initialized to <code>false</code>.","An <code>AtomicIsize</code> initialized to <code>0</code>.","An <code>AtomicUsize</code> initialized to <code>0</code>.","Has the effects of both <code>Acquire</code> and <code>Release</code> together: For …","When coupled with a load, if the loaded value was written …","A boolean type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","A raw pointer type which can be safely shared between …","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","Atomic memory orderings","No ordering constraints, only atomic operations.","When coupled with a store, all previous operations become …","Like <code>Acquire</code>/<code>Release</code>/<code>AcqRel</code> (for load, store, and …","Returns a mutable pointer to the underlying <code>bool</code>.","Returns a mutable pointer to the underlying pointer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores a value into the <code>bool</code> if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the <code>bool</code> if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the <code>bool</code> if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","A compiler memory fence.","Creates an <code>AtomicBool</code> initialized to <code>false</code>.","Creates a null <code>AtomicPtr&lt;T&gt;</code>.","","","","","","","","","","","","An atomic fence.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Logical “and” with a boolean value.","Performs a bitwise “and” operation on the address of …","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Offsets the pointer’s address by adding <code>val</code> <em>bytes</em>, …","Offsets the pointer’s address by subtracting <code>val</code> <em>bytes</em>, …","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Logical “nand” with a boolean value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Logical “not” with a boolean value.","Logical “or” with a boolean value.","Performs a bitwise “or” operation on the address of …","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Offsets the pointer’s address by adding <code>val</code> (in units of …","Offsets the pointer’s address by subtracting <code>val</code> (in …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Logical “xor” with a boolean value.","Performs a bitwise “xor” operation on the address of …","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","","","","","","","","","","","","","","","Converts a <code>bool</code> into an <code>AtomicBool</code>.","Returns the argument unchanged.","Converts a <code>*mut T</code> into an <code>AtomicPtr&lt;T&gt;</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i8</code> into an <code>AtomicI8</code>.","Converts an <code>u8</code> into an <code>AtomicU8</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i16</code> into an <code>AtomicI16</code>.","Converts an <code>u16</code> into an <code>AtomicU16</code>.","Returns the argument unchanged.","Converts an <code>i32</code> into an <code>AtomicI32</code>.","Returns the argument unchanged.","Converts an <code>u32</code> into an <code>AtomicU32</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i64</code> into an <code>AtomicI64</code>.","Converts an <code>u64</code> into an <code>AtomicU64</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>isize</code> into an <code>AtomicIsize</code>.","Returns the argument unchanged.","Converts an <code>usize</code> into an <code>AtomicUsize</code>.","Get atomic access to a <code>&amp;mut bool</code>.","Get atomic access to a pointer.","Get atomic access to a <code>&amp;mut i8</code>.","Get atomic access to a <code>&amp;mut u8</code>.","Get atomic access to a <code>&amp;mut i16</code>.","Get atomic access to a <code>&amp;mut u16</code>.","Get atomic access to a <code>&amp;mut i32</code>.","Get atomic access to a <code>&amp;mut u32</code>.","Get atomic access to a <code>&amp;mut i64</code>.","Get atomic access to a <code>&amp;mut u64</code>.","Get atomic access to a <code>&amp;mut isize</code>.","Get atomic access to a <code>&amp;mut usize</code>.","Get atomic access to a <code>&amp;mut [bool]</code> slice.","Get atomic access to a slice of pointers.","Get atomic access to a <code>&amp;mut [i8]</code> slice.","Get atomic access to a <code>&amp;mut [u8]</code> slice.","Get atomic access to a <code>&amp;mut [i16]</code> slice.","Get atomic access to a <code>&amp;mut [u16]</code> slice.","Get atomic access to a <code>&amp;mut [i32]</code> slice.","Get atomic access to a <code>&amp;mut [u32]</code> slice.","Get atomic access to a <code>&amp;mut [i64]</code> slice.","Get atomic access to a <code>&amp;mut [u64]</code> slice.","Get atomic access to a <code>&amp;mut [isize]</code> slice.","Get atomic access to a <code>&amp;mut [usize]</code> slice.","Creates a new <code>AtomicBool</code> from a pointer.","Creates a new <code>AtomicPtr</code> from a pointer.","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Returns a mutable reference to the underlying <code>bool</code>.","Returns a mutable reference to the underlying pointer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Get non-atomic access to a <code>&amp;mut [AtomicBool]</code> slice.","Get non-atomic access to a <code>&amp;mut [AtomicPtr]</code> slice.","Get non-atomic access to a <code>&amp;mut [AtomicI8]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicU8]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicI16]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicU16]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicI32]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicU32]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicI64]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicU64]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicIsize]</code> slice","Get non-atomic access to a <code>&amp;mut [AtomicUsize]</code> slice","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Loads a value from the bool.","Loads a value from the pointer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Creates a new <code>AtomicBool</code>.","Creates a new <code>AtomicPtr</code>.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Signals the processor that it is inside a busy-wait …","Stores a value into the bool.","Stores a value into the pointer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the bool, returning the previous value.","Stores a value into the pointer, returning the previous …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A mutable memory location.","An immutable raw pointer to an <code>UnsafeCell</code> that may be …","A mutable raw pointer to an <code>UnsafeCell</code> that may be checked …","A variant of <code>core::cell::UnsafeCell</code> that may be checked …","Returns a <code>&amp;[Cell&lt;T&gt;; N]</code> from a <code>&amp;Cell&lt;[T; N]&gt;</code>","Returns a raw pointer to the underlying data in this cell.","Returns a <code>&amp;[Cell&lt;T&gt;]</code> from a <code>&amp;Cell&lt;[T]&gt;</code>","","","","","","","","","","","","Creates a <code>Cell&lt;T&gt;</code>, with the <code>Default</code> value for T.","Dereference the raw pointer.","Dereference the raw pointer.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Cell&lt;T&gt;</code> containing the given value.","Returns the argument unchanged.","","Returns a <code>&amp;Cell&lt;T&gt;</code> from a <code>&amp;mut T</code>","","Get an immutable pointer to the wrapped value.","Returns a copy of the contained value.","Get a mutable pointer to the wrapped value.","Returns a mutable reference to the underlying data.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the value, consuming the cell.","","","Construct a new instance of <code>UnsafeCell</code> which will wrap the …","Creates a new <code>Cell</code> containing the given value.","","Replaces the contained value with <code>val</code>, and returns the old …","Sets the contained value.","Swaps the values of two <code>Cell</code>s. Difference with …","Takes the value of the cell, leaving <code>Default::default()</code> in …","","","","","","","","","","","","","","Updates the contained value using a function and returns …","Get an immutable pointer to the wrapped value.","Perform an operation with the actual value of the raw …","Perform an operation with the actual value of the raw …","Get a mutable pointer to the wrapped value.","Emits a machine instruction to signal the processor that …","A cell which may be initialized a single time after it is …","A cell which will be lazily initialized by the provided …","Errors returned by <code>InitOnce::try_init</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Borrow the contents of this <code>InitOnce</code> cell, or panic if it …","Borrow the value, or initialize it if it has not yet been …","Returns the value of the lazy cell, if it has already been …","Borrow the value mutably, or initialize it if it has not …","Borrow the contents of this <code>InitOnce</code> cell, or initialize …","Borrow the contents of this <code>InitOnce</code> cell, <strong>without</strong> checking","Initialize the cell to <code>value</code>, panicking if it has already …","Ensure that the cell has been initialized.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value that the caller attempted to initialize …","Returns a new <code>Lazy</code> cell, initialized with the provided …","","","","","Borrow the contents of this <code>InitOnce</code> cell, if it has been …","Initialize the cell to <code>value</code>, returning an error if it has …","","","","","","","Returns a new <code>InitOnce</code> in the uninitialized state.","An exponential backoff for spin loops.","The default maximum exponent (2^8).","A spinlock-based mutual exclusion lock for protecting …","An RAII implementation of a “scoped lock” of a mutex. …","","","","","","","","","","","","","","","","","","","Forcibly unlock the mutex.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Acquires a mutex, spinning until it is locked.","Returns a new exponential backoff with the maximum …","Returns a new <code>Mutex</code> protecting the provided <code>data</code>.","Backs off in a spin loop.","","","","","","","","","Attempts to acquire this lock without spinning","","","","Returns a new exponential backoff with the provided max …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,3,3,3,3,3,3,1,1,1,1,3,3,3,3,3,1,3,1,1,1,3,1,0,0,0,10,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,10,0,0,0,6,0,0,10,0,0,0,0,0,5,0,5,14,0,11,42,17,12,28,29,27,25,26,43,5,10,19,14,11,42,17,12,28,29,27,25,26,43,5,10,19,14,17,12,10,19,14,17,12,10,19,14,19,0,0,5,5,5,5,5,19,19,0,27,25,26,27,25,26,27,25,10,19,28,29,28,29,5,28,29,27,25,26,28,5,13,22,35,16,36,37,38,39,40,11,42,17,17,17,17,17,17,12,43,43,10,19,19,14,14,11,42,17,12,28,29,27,25,26,43,5,10,19,14,19,0,11,42,17,12,28,29,27,25,26,43,5,10,19,14,26,26,17,0,17,5,5,19,5,0,12,14,28,26,5,5,5,17,12,10,19,14,17,43,19,14,11,42,17,12,28,29,27,25,26,43,5,10,19,14,11,42,17,12,28,29,27,25,26,43,5,10,19,14,11,42,17,12,28,29,27,25,26,43,5,10,19,14,26,26,5,49,0,21,5,21,5,5,21,42,5,5,55,55,55,55,0,0,0,55,55,55,56,0,0,56,63,0,0,0,55,55,55,55,55,63,55,55,0,0,0,0,0,0,56,0,55,55,55,0,55,66,68,67,53,54,69,55,70,56,61,52,66,68,67,53,54,69,55,70,56,61,52,50,51,50,50,54,55,56,54,55,56,55,57,53,54,61,0,54,0,55,56,57,53,54,61,51,67,54,66,68,67,53,54,69,69,55,70,56,61,52,66,68,67,53,54,69,69,55,70,56,61,52,53,54,61,53,54,61,55,70,66,68,50,54,66,68,67,53,54,69,55,70,56,61,52,53,54,61,52,69,61,54,69,52,70,55,54,0,50,66,68,53,54,61,50,54,0,71,54,61,54,70,0,69,71,54,71,54,50,54,55,56,69,66,68,67,53,54,69,55,70,56,61,52,66,68,67,53,54,69,55,70,56,61,52,66,68,67,53,54,69,55,70,56,61,52,51,67,54,51,51,70,0,0,0,0,0,72,72,72,72,0,0,0,0,0,73,0,0,0,0,73,0,0,73,73,73,73,0,0,0,73,73,74,74,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,77,78,74,73,76,77,78,74,73,73,77,78,74,73,77,78,74,73,78,0,78,78,78,0,0,78,77,78,73,76,77,78,74,73,0,0,76,77,78,74,73,77,78,76,77,78,74,73,78,73,0,0,0,76,78,74,0,78,0,73,0,0,0,74,74,74,74,74,74,73,0,0,78,77,78,74,73,0,0,74,76,77,78,74,73,76,77,78,74,73,76,77,78,74,73,76,74,74,0,73,0,76,74,74,74,0,74,0,0,0,0,84,84,0,84,84,84,84,84,84,84,84,84,0,84,84,84,0,0,84,84,84,84,0,0,0,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,103,103,103,85,86,87,89,90,92,94,96,97,99,100,102,85,86,103,87,89,90,92,94,96,97,99,100,102,85,86,103,87,89,90,92,94,96,97,99,100,102,103,103,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,0,85,86,87,89,90,92,94,96,97,99,100,102,103,0,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,86,86,87,89,90,92,94,96,97,99,100,102,87,89,90,92,94,96,97,99,100,102,85,87,89,90,92,94,96,97,99,100,102,85,85,86,87,89,90,92,94,96,97,99,100,102,86,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,86,103,87,89,90,92,94,96,97,99,100,102,85,85,86,86,103,87,87,89,89,90,90,92,92,94,94,96,96,97,97,99,99,100,100,102,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,103,85,86,103,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,0,85,86,87,89,90,92,94,96,97,99,100,102,85,86,87,89,90,92,94,96,97,99,100,102,103,85,86,103,87,89,90,92,94,96,97,99,100,102,85,86,103,87,89,90,92,94,96,97,99,100,102,85,86,103,87,89,90,92,94,96,97,99,100,102,0,0,0,0,105,105,105,108,106,107,105,108,106,107,105,105,105,105,105,106,107,105,108,106,107,105,108,106,107,105,105,105,105,105,108,105,108,105,105,108,106,107,105,105,105,105,108,105,105,105,105,105,105,105,108,106,107,105,108,106,107,105,108,106,107,105,105,108,106,107,108,0,0,0,0,111,110,112,111,110,112,110,110,111,110,112,112,111,110,112,111,110,110,110,111,111,111,110,111,110,112,112,110,112,111,110,112,111,111,111,110,112,111,110,112,111,0,115,0,0,113,113,113,115,116,113,115,116,115,115,115,113,113,113,113,113,115,116,116,113,115,116,113,115,116,116,115,116,115,115,113,113,115,116,113,115,116,116,113,115,116,115],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[3,[[4,[-1]]],3],[3,[[4,[-1]]],3],[3,[[4,[-1]]],3],[3,[[4,[-1]]],3],[3,[[4,[-1]]],3],[3,[[4,[-1]]],3],[[1,5],6],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,7],[3,7],[3,7],[3,1],[3,1],[1,[[4,[-1]]],[]],[3,[[4,[3]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,[[4,[10]]]],[-1,[[12,[[11,[-1]]]]],13],[5,7],[14,[[4,[15]]]],[-1,[[12,[[11,[-1]]]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1]]],[[17,[-1]]],18],[[[12,[-1]]],[[12,[-1]]],[18,13]],[10,10],[19,19],[14,14],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[19,19],20],[[-1,-3],6,21,22,[[24,[],[[23,[-2]]]]]],[-1,[[12,[-1]]],13],[5,25],[5,26],[5,27],[[5,15],28],[[5,15],29],[[],19],[19,15],[-1,[[30,[-1]]],22],[[27,-2],27,13,[[24,[],[[23,[-1]]]]]],[[25,-2],25,13,[[24,[],[[23,[-1]]]]]],[[26,-3],26,13,13,[[24,[],[[23,[[2,[-1,-2]]]]]]]],[[27,13],27],[[25,13],25],[[26,13,13],26],[[27,-1],27,[[32,[5],[[31,[[8,[2,19]]]]]]]],[[25,-1],25,[[32,[5],[[31,[[8,[2,19]]]]]]]],[[10,10],7],[[19,19],7],[[28,15,13],28],[[29,13],29],[[28,15,-1],28,[[32,[5],[[31,[[8,[2,19]]]]]]]],[[29,-1],29,[[32,[5],[[31,[[8,[2,19]]]]]]]],[5,33],[28,[[8,[2,19]]]],[29,[[8,[2,19]]]],[27,[[8,[2,19]]]],[25,[[8,[2,19]]]],[26,[[8,[2,19]]]],[28,[[8,[2,19]]]],[5,34],[[13,5],[[8,[2,19]]]],[[22,5],[[8,[2,19]]]],[[35,5],[[8,[2,19]]]],[[16,5],[[8,[2,19]]]],[[36,5],[[8,[2,19]]]],[[37,5],[[8,[2,19]]]],[[38,5],[[8,[2,19]]]],[[39,5],[[8,[2,19]]]],[[40,5],[[8,[2,19]]]],[[[11,[-1,-2]],5],6,[],[[41,[-1,5],[[31,[6]]]]]],[[[42,[-1]],5],6,13],[[[17,[-1]],5],6,37],[[[17,[-1]],5],6,22],[[[17,[-1]],5],6,38],[[[17,[-1]],5],6,13],[[[17,[-1]],5],6,36],[[[17,[-1]],5],6,16],[[[12,[-1]],5],[[8,[2,19]]],13],[[[43,[-1]],5],[[8,[2,19]]],[[41,[5],[[31,[[8,[2,19]]]]]]]],[[[43,[-1]],5],[[8,[2,19]]],[[41,[5],[[31,[[8,[2,19]]]]]]]],[[10,5],[[8,[2,19]]]],[[19,5],[[8,[2,19]]]],[[19,5],[[8,[2,19]]]],[[14,5],[[8,[2,19]]]],[[14,5],[[8,[2,19]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[19,-1],2,44],[-1,[[12,[[11,[-1]]]]],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,13],26],[[26,-1],26,[[32,[5],[[31,[[8,[2,19]]]]]]]],[[[4,[-1]]],[[17,[-1]]],[]],[[[4,[-1]]],[[17,[-1]]],[]],[[[17,[-1]],15],[[17,[-1]]],[]],[[5,15],[[8,[2,19]]]],[[5,7,15,15],[[8,[2,19]]]],[[19,19],[[4,[20]]]],[5,[[4,[45]]]],[-1,[[12,[[11,[-1]]]]],38],[[[12,[-1]],46,47],2,[13,13]],[[14,46,47],2],[[28,46,13],2],[[26,46,13],2],[5,7],[5,7],[5,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,48,[]],[-1,48,[]],[-1,48,[]],[-1,48,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[26,13],26],[[26,-1],26,[[32,[5],[[31,[[8,[2,19]]]]]]]],[5,[[4,[45]]]],[[49,45],[[42,[49]]]],[[21,14],[[8,[2,19]]]],[[21,33],[[8,[2,19]]]],[[5,33],[[8,[2,19]]]],[[21,14],[[8,[2,19]]]],[[5,14],[[8,[2,19]]]],[[5,14],[[8,[2,19]]]],[[21,15],[[8,[2,19]]]],[[[42,[-1]],15],6,21],[[5,15],[[8,[2,19]]]],[[5,15],[[8,[2,19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,50],[51,51],[50,[[52,[50]]]],[[50,-1],[[53,[50,-1]]],50],[[[54,[-1]]],[[54,[-1]]],18],[55,55],[56,56],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[55,55],20],[[57,45],2],[[[53,[-1,-2]],45],2,57,57],[[[54,[-1]],45],2,[[60,[[59,[58]]]]]],[[[61,[-1]],45],2,57],[[-1,-2],[[63,[62]]],[50,64],[51,64]],[[],[[54,[-1]]],65],[[],66],[[55,55],7],[[56,56],7],[57,[[63,[[59,[58]]]]]],[[[53,[-1,-2]]],[[63,[[59,[58]]]]],57,57],[[[54,[-1]]],[[63,[[59,[58]]]]],[[60,[[59,[58]]]]]],[[[61,[-1]]],[[63,[[59,[58]]]]],57],[51,[[63,[2]]]],[67,[[63,[2]]]],[[[54,[[59,[58]]]]],[[63,[2]]]],[[66,5],6],[[68,5],6],[[67,5],6],[[[53,[-1,-2]],5],6,13,13],[[[54,[-1]],5],6,13],[[[69,[-1]],5],6,[13,3]],[[[69,[-1]],5],6,3],[[55,5],6],[[70,5],6],[[56,5],6],[[[61,[-1]],5],6,13],[[[52,[-1]],5],6,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,69],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[53,[-1,-2]]],[[2,[-1,-2]]],[],[]],[[[54,[-1]]],-1,[]],[[[61,[-1]]],-1,[]],[[[53,[-1,-2]]],[[2,[-1,-2]]],[],[]],[[[54,[-1]]],-1,[]],[[[61,[-1]]],-1,[]],[[55,-1],2,44],[[70,[59,[58]]],2],[66,70],[68,70],[50,70],[[[54,[-1]]],70,[[60,[[59,[58]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1,-2]]],[[2,[-1,-2]]],[],[]],[[[54,[-1]]],-1,[]],[[[61,[-1]]],-1,[]],[-1,-2,[],[]],[[[69,[-1]]],55,3],[[[61,[-1]]],62,[]],[-1,[[54,[-1]]],[]],[[55,-1],[[69,[-1]]],3],[[[52,[-1]]],[[4,[[63,[58]]]]],50],[[],70],[[55,55],[[4,[20]]]],[[[54,[-1]]],62,[]],0,[[50,[59,[58]]],[[63,[45]]]],[[66,[59,[58]]],[[63,[45]]]],[[68,[59,[58]]],[[63,[45]]]],[[[53,[-1,-2]],[59,[58]]],[[63,[45]]],50,50],[[[54,[-1]],[59,[58]]],[[63,[45]]],[[60,[[59,[58]]]]]],[[[61,[-1]],[59,[58]]],[[63,[45]]],50],[[50,[59,[58]]],[[63,[2]]]],[[[54,[-1]],[59,[58]]],[[63,[2]]],[[60,[[59,[58]]]]]],[58,68],[[71,56],[[63,[62]]]],[[[54,[-1]],56],[[63,[62]]],[[60,[[59,[58]]]]]],[[[61,[-1]],62],2,[]],[[[54,[-1]],62],2,[]],[70,7],[[],67],[[[69,[-1]]],[[4,[3]]],3],[71,[[63,[62]]]],[[[54,[-1]]],[[63,[62]]],[[60,[[59,[58]]]]]],[71,[[63,[62]]]],[[[54,[-1]]],[[63,[62]]],[[60,[[59,[58]]]]]],[[50,62],[[61,[50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,48,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[51,[59,[58]]],[[63,[45]]]],[[67,[59,[58]]],[[63,[45]]]],[[[54,[[59,[58]]]],[59,[58]]],[[63,[45]]]],[[51,[59,[58]]],[[63,[2]]]],[[51,14],[[63,[2]]]],[[],70],0,0,0,0,0,[[72,72],[[4,[72]]]],[[72,72],72],[72,72],[72,72],0,0,[[45,45],[[4,[45]]]],[45,45],[45,45],0,0,0,0,0,0,0,0,0,0,0,[[73,73],73],[[],45],[-1,45,64],[[],45],0,[[73,73],73],[[[75,[[74,[-1]]]]],[[75,[-1]]],[]],[[[74,[-1]]],[[59,[[74,[58]]]]],[]],[[[74,[-1]]],[[59,[[74,[58]]]]],[]],[[[76,[-1]]],[],[]],[[[74,[-1]]],[],[]],[[[76,[-1]]],[],[]],[[[74,[-1]]],[],[]],[[[76,[-1]]],-1,[]],[[[74,[-1]]],-1,[]],[[[76,[-1]]],2,[]],[[[74,[-1]]],2,[]],[[[76,[-1]]],-1,[]],[[[74,[-1]]],-1,[]],[[[76,[-1]]],-1,[]],[[[74,[-1]]],-1,[]],[[[76,[-1]]],-1,[]],[[[74,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[73,73],73],[[[77,[-1]]],[[77,[-1]]],[]],[[[78,[-1]]],[[78,[-1]]],[18,64]],[[[74,[-1]]],[[74,[-1]]],79],[73,73],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[78,[-1]],[78,[-1]]],20,[80,64]],[-1,-1,79],[[],[[78,[-1]]],[65,64]],[[[78,[-1]]],-1,64],[[[78,[-1]]],-1,64],[-1,[[77,[-1]]],[]],[-1,2,[]],[[[78,[-1]]],2,64],[[[77,[-1]],[77,[-1]]],7,[]],[[[78,[-1]],[78,[-1]]],7,[81,64]],[[73,73],7],[[[76,[-1]],5],6,13],[[[77,[-1]],5],[[8,[2,19]]],[]],[[[78,[-1]],5],[[8,[2,19]]],[13,64]],[[[74,[-1]],5],[[8,[2,19]]],[]],[[73,5],[[8,[2,19]]]],[-1,2,[]],[-1,2,64],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[77,[-1]],-2],2,[],44],[[[78,[-1]],-2],2,[82,64],44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1]]],-1,[]],0,[[],45],[-1,45,64],[[],7],[-1,[[76,[-1]]],[]],[-1,[[78,[-1]]],[]],[-1,[[74,[-1]]],[]],0,[[[78,[-1]],[78,[-1]]],[[4,[20]]],[83,64]],[[-1,-1],-1,[]],0,[[],45],[-1,45,64],[[],45],[[[59,[[74,[-1]]]]],[[59,[[74,[58]]]]],[]],[[[59,[[74,[-1]]]]],[[59,[[74,[58]]]]],[]],[[[59,[[74,[-1]]]]],[],[]],[[[59,[[74,[-1]]]]],[],[]],[[[59,[[74,[-1]]]]],[[59,[-1]]],[]],[[[59,[[74,[-1]]]]],[[59,[-1]]],[]],[[73,73],73],[[-1,-1],2,[]],[-1,-1,65],[[[78,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[[75,[-1]]]]],[[75,[[74,[-1]]]]],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],[[76,[-1]]],[]],[[],[[74,[-1]]],[]],[[],[[75,[[74,[-1]]]]],[]],[[],-1,[]],0,[[],45],[[[76,[-1]],-1],-1,[]],[[[74,[-1]],-1],-1,[]],[[[59,[[74,[-1]]]],[59,[-1]]],[[59,[-1]]],79],[[[59,[[74,[-1]]]],[59,[-1]]],[[59,[-1]]],18],[[],-1,[]],[[],[[74,[-1]]],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[84,[-1]]],[[84,[-1]]],18],[[-1,-2],2,[],[]],[[],[[84,[-1]]],65],[[[84,[-1]]],-1,[]],[[[84,[-1]]],-1,[]],[[[84,[-1]],[84,[-1]]],7,81],[[[84,[-1]],5],[[8,[2,19]]],13],[-1,-1,[]],[[[84,[-1]],-2],2,82,44],0,[-1,-2,[],[]],[[[84,[-1]]],-1,[]],[-1,[[84,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,7],[[[86,[-1]]],[],[]],[87,88],[89,58],[90,91],[92,93],[94,95],[96,34],[97,98],[99,62],[100,101],[102,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[103,103],[[-1,-2],2,[],[]],[[85,7,7,103],7],[[[86,[-1]],103],[],[]],[[87,88,88,103],88],[[89,58,58,103],58],[[90,91,91,103],91],[[92,93,93,103],93],[[94,95,95,103],95],[[96,34,34,103],34],[[97,98,98,103],98],[[99,62,62,103],62],[[100,101,101,103],101],[[102,45,45,103],45],[[85,7,7,103,103],[[8,[7,7]]]],[[[86,[-1]],103,103],8,[]],[[87,88,88,103,103],[[8,[88,88]]]],[[89,58,58,103,103],[[8,[58,58]]]],[[90,91,91,103,103],[[8,[91,91]]]],[[92,93,93,103,103],[[8,[93,93]]]],[[94,95,95,103,103],[[8,[95,95]]]],[[96,34,34,103,103],[[8,[34,34]]]],[[97,98,98,103,103],[[8,[98,98]]]],[[99,62,62,103,103],[[8,[62,62]]]],[[100,101,101,103,103],[[8,[101,101]]]],[[102,45,45,103,103],[[8,[45,45]]]],[[85,7,7,103,103],[[8,[7,7]]]],[[[86,[-1]],103,103],8,[]],[[87,88,88,103,103],[[8,[88,88]]]],[[89,58,58,103,103],[[8,[58,58]]]],[[90,91,91,103,103],[[8,[91,91]]]],[[92,93,93,103,103],[[8,[93,93]]]],[[94,95,95,103,103],[[8,[95,95]]]],[[96,34,34,103,103],[[8,[34,34]]]],[[97,98,98,103,103],[[8,[98,98]]]],[[99,62,62,103,103],[[8,[62,62]]]],[[100,101,101,103,103],[[8,[101,101]]]],[[102,45,45,103,103],[[8,[45,45]]]],[103,2],[[],85],[[],[[86,[-1]]],[]],[[],87],[[],89],[[],90],[[],92],[[],94],[[],96],[[],97],[[],99],[[],100],[[],102],[[103,103],7],[103,2],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[85,7,103],7],[[[86,[-1]],45,103],[],[]],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[[86,[-1]],45,103],[],[]],[[[86,[-1]],45,103],[],[]],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[85,7,103],7],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[85,103],7],[[85,7,103],7],[[[86,[-1]],45,103],[],[]],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[[86,[-1]],45,103],[],[]],[[[86,[-1]],45,103],[],[]],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[85,103,103,-1],[[8,[7,7]]],[[104,[7],[[31,[[4,[7]]]]]]]],[[[86,[-1]],103,103,-2],8,[],[[104,[],[[31,[4]]]]]],[[87,103,103,-1],[[8,[88,88]]],[[104,[88],[[31,[[4,[88]]]]]]]],[[89,103,103,-1],[[8,[58,58]]],[[104,[58],[[31,[[4,[58]]]]]]]],[[90,103,103,-1],[[8,[91,91]]],[[104,[91],[[31,[[4,[91]]]]]]]],[[92,103,103,-1],[[8,[93,93]]],[[104,[93],[[31,[[4,[93]]]]]]]],[[94,103,103,-1],[[8,[95,95]]],[[104,[95],[[31,[[4,[95]]]]]]]],[[96,103,103,-1],[[8,[34,34]]],[[104,[34],[[31,[[4,[34]]]]]]]],[[97,103,103,-1],[[8,[98,98]]],[[104,[98],[[31,[[4,[98]]]]]]]],[[99,103,103,-1],[[8,[62,62]]],[[104,[62],[[31,[[4,[62]]]]]]]],[[100,103,103,-1],[[8,[101,101]]],[[104,[101],[[31,[[4,[101]]]]]]]],[[102,103,103,-1],[[8,[45,45]]],[[104,[45],[[31,[[4,[45]]]]]]]],[[85,7,103],7],[[[86,[-1]],45,103],[],[]],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[[85,5],[[8,[2,19]]]],[[[86,[-1]],5],[[8,[2,19]]],[]],[[[86,[-1]],5],[[8,[2,19]]],[]],[[103,5],[[8,[2,19]]]],[[87,5],[[8,[2,19]]]],[[89,5],[[8,[2,19]]]],[[90,5],[[8,[2,19]]]],[[92,5],[[8,[2,19]]]],[[94,5],[[8,[2,19]]]],[[96,5],[[8,[2,19]]]],[[97,5],[[8,[2,19]]]],[[99,5],[[8,[2,19]]]],[[100,5],[[8,[2,19]]]],[[102,5],[[8,[2,19]]]],[7,85],[-1,-1,[]],[[],[[86,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[88,87],[58,89],[-1,-1,[]],[-1,-1,[]],[91,90],[93,92],[-1,-1,[]],[95,94],[-1,-1,[]],[34,96],[-1,-1,[]],[-1,-1,[]],[98,97],[62,99],[-1,-1,[]],[-1,-1,[]],[101,100],[-1,-1,[]],[45,102],[7,85],[[],[[86,[-1]]],[]],[88,87],[58,89],[91,90],[93,92],[95,94],[34,96],[98,97],[62,99],[101,100],[45,102],[[[59,[7]]],[[59,[85]]]],[59,[[59,[[86,[-1]]]]],[]],[[[59,[88]]],[[59,[87]]]],[[[59,[58]]],[[59,[89]]]],[[[59,[91]]],[[59,[90]]]],[[[59,[93]]],[[59,[92]]]],[[[59,[95]]],[[59,[94]]]],[[[59,[34]]],[[59,[96]]]],[[[59,[98]]],[[59,[97]]]],[[[59,[62]]],[[59,[99]]]],[[[59,[101]]],[[59,[100]]]],[[[59,[45]]],[[59,[102]]]],[7,85],[[],[[86,[-1]]],[]],[88,87],[58,89],[91,90],[93,92],[95,94],[34,96],[98,97],[62,99],[101,100],[45,102],[85,7],[[[86,[-1]]],[],[]],[87,88],[89,58],[90,91],[92,93],[94,95],[96,34],[97,98],[99,62],[100,101],[102,45],[[[59,[85]]],[[59,[7]]]],[[[59,[[86,[-1]]]]],59,[]],[[[59,[87]]],[[59,[88]]]],[[[59,[89]]],[[59,[58]]]],[[[59,[90]]],[[59,[91]]]],[[[59,[92]]],[[59,[93]]]],[[[59,[94]]],[[59,[95]]]],[[[59,[96]]],[[59,[34]]]],[[[59,[97]]],[[59,[98]]]],[[[59,[99]]],[[59,[62]]]],[[[59,[100]]],[[59,[101]]]],[[[59,[102]]],[[59,[45]]]],[[103,-1],2,44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,7],[[[86,[-1]]],[],[]],[87,88],[89,58],[90,91],[92,93],[94,95],[96,34],[97,98],[99,62],[100,101],[102,45],[[85,103],7],[[[86,[-1]],103],[],[]],[[87,103],88],[[89,103],58],[[90,103],91],[[92,103],93],[[94,103],95],[[96,103],34],[[97,103],98],[[99,103],62],[[100,103],101],[[102,103],45],[7,85],[[],[[86,[-1]]],[]],[88,87],[58,89],[91,90],[93,92],[95,94],[34,96],[98,97],[62,99],[101,100],[45,102],[[],2],[[85,7,103],2],[[[86,[-1]],103],2,[]],[[87,88,103],2],[[89,58,103],2],[[90,91,103],2],[[92,93,103],2],[[94,95,103],2],[[96,34,103],2],[[97,98,103],2],[[99,62,103],2],[[100,101,103],2],[[102,45,103],2],[[85,7,103],7],[[[86,[-1]],103],[],[]],[[87,88,103],88],[[89,58,103],58],[[90,91,103],91],[[92,93,103],93],[[94,95,103],95],[[96,34,103],34],[[97,98,103],98],[[99,62,103],62],[[100,101,103],101],[[102,45,103],45],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,[[[105,[[75,[-1]]]]],[[75,[[105,[-1]]]]],[]],[[[105,[-1]]],[],64],[[[105,[[59,[-1]]]]],[[59,[[105,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[105,[-1]]],[[105,[-1]]],79],[[-1,-2],2,[],[]],[[[105,[-1]],[105,[-1]]],20,[80,79]],[[],[[105,[-1]]],65],[[[106,[-1]]],-1,64],[[[107,[-1]]],-1,64],[[[105,[-1]],[105,[-1]]],7,[81,79]],[[[108,[-1]],5],6,13],[[[106,[-1]],5],6,[13,64]],[[[107,[-1]],5],6,[13,64]],[[[105,[-1]],5],[[8,[2,19]]],[79,13]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[105,[-1]]],[]],[-1,-1,[]],[109,-1,[]],[-1,[[105,[-1]]],64],[[[105,[-1]],[105,[-1]]],7,[83,79]],[[[108,[-1]]],[[106,[-1]]],[]],[[[105,[-1]]],-1,79],[[[108,[-1]]],[[107,[-1]]],[]],[[[105,[-1]]],-1,64],[[[105,[-1]],[105,[-1]]],7,[83,79]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[105,[-1]]],-1,[]],[[[105,[-1]],[105,[-1]]],7,[83,79]],[[[105,[-1]],[105,[-1]]],7,[83,79]],[-1,[[108,[-1]]],[]],[-1,[[105,[-1]]],[]],[[[105,[-1]],[105,[-1]]],[[4,[20]]],[83,79]],[[[105,[-1]],-1],-1,[]],[[[105,[-1]],-1],2,[]],[[[105,[-1]],[105,[-1]]],2,[]],[[[105,[-1]]],-1,65],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[105,[-1]],-2],-1,79,[[32,[-1],[[31,[-1]]]]]],[[[108,[-1]],-3],-2,[],[],[[32,[],[[31,[-2]]]]]],[[[106,[-1]],-3],-2,64,[],[[32,[],[[31,[-2]]]]]],[[[107,[-1]],-3],-2,64,[],[[32,[],[[31,[-2]]]]]],[[[108,[-1]],-3],-2,[],[],[[32,[],[[31,[-2]]]]]],[[],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[110,[-1,-2]]],[],[],[[41,[],[[31,[-1]]]]]],[[[110,[-1,-2]]],[],[],[[41,[],[[31,[-1]]]]]],[[[111,[-1]],5],[[8,[2,19]]],13],[[[110,[-1,-2]],5],[[8,[2,19]]],13,[]],[[[112,[-1]],5],[[8,[2,19]]],[]],[[[112,[-1]],5],[[8,[2,19]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[111,[-1]]],-1,[]],[[[110,[-1,-2]]],-1,[],[[41,[],[[31,[-1]]]]]],[[[110,[-1,-2]]],[[4,[-1]]],[],[]],[[[110,[-1,-2]]],-1,[],[[41,[],[[31,[-1]]]]]],[[[111,[-1]],-2],-1,[],[[32,[],[[31,[-1]]]]]],[[[111,[-1]]],-1,[]],[[[111,[-1]],-1],-1,[]],[[[110,[-1,-2]]],2,[],[[41,[],[[31,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]]],-1,[]],[-1,[[110,[-2,-1]]],[],[]],[-1,48,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[111,[-1]]],[[4,[-1]]],[]],[[[111,[-1]],-1],[[8,[2,[112,[-1]]]]],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],[[111,[-1]]],[]],0,0,0,0,[[[113,[-2]]],-1,64,[[114,[-1]]]],[[[113,[-2]]],-1,64,[[60,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,115],[[-1,-2],2,[],[]],[[],115],[[[113,[-1]]],[],[]],[[[113,[-1]]],[],[]],[[[113,[-1]]],2,[]],[[[113,[-1]],5],[[8,[2,19]]],13],[[[113,[-1]],5],[[8,[2,19]]],22],[[115,5],[[8,[2,19]]]],[[[116,[-1]],5],[[8,[2,19]]],13],[[[116,[-1]]],2,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[116,[-1]]],[[113,[-1]]],[]],[[],115],[-1,[[116,[-1]]],[]],[115,2],[-1,-2,[],[]],[-1,48,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[116,[-1]]],[[4,[[113,[-1]]]]],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[58,115]],"c":[147,596,597,644,679,680,681,740,741,742,743,744,745,746,747,748,749,750,751,1044],"p":[[5,"ErrorIter",12],[1,"tuple"],[10,"Error",12],[6,"Option",1271],[5,"Formatter",40],[8,"Result",40],[1,"bool"],[6,"Result",1272],[5,"TypeId",1273],[6,"Alignment",40],[5,"FormatWith",40],[5,"DebugValue",40],[10,"Debug",40],[5,"Arguments",40],[1,"str"],[10,"Binary",40],[5,"FmtOption",40],[10,"Clone",1274],[5,"Error",40],[6,"Ordering",1275],[10,"Write",40],[10,"Display",40],[17,"Item"],[10,"IntoIterator",1276],[5,"DebugList",40],[5,"DebugMap",40],[5,"DebugSet",40],[5,"DebugStruct",40],[5,"DebugTuple",40],[5,"DisplayValue",1277],[17,"Output"],[10,"FnOnce",1278],[1,"char"],[1,"u32"],[10,"Octal",40],[10,"LowerHex",40],[10,"UpperHex",40],[10,"Pointer",40],[10,"LowerExp",40],[10,"UpperExp",40],[10,"Fn",1278],[5,"WithIndent",40],[5,"FormatterFn",40],[10,"Hasher",1279],[1,"usize"],[5,"Field",1277],[10,"Visit",1277],[5,"String",1280],[10,"WriteExt",40],[10,"Read",285],[10,"Write",285],[5,"Bytes",285],[5,"Chain",285],[5,"Cursor",285],[6,"ErrorKind",285],[6,"SeekFrom",285],[10,"BufRead",285],[1,"u8"],[1,"slice"],[10,"AsRef",1281],[5,"Take",285],[1,"u64"],[8,"Result",285],[10,"Sized",1282],[10,"Default",1283],[5,"Empty",285],[5,"Sink",285],[5,"Repeat",285],[5,"Error",285],[5,"Initializer",285],[10,"Seek",285],[10,"Logarithm",501],[5,"Assume",511],[20,"MaybeUninit",511],[1,"array"],[5,"CheckedMaybeUninit",511],[5,"Discriminant",511],[5,"ManuallyDrop",511],[10,"Copy",1282],[10,"Ord",1275],[10,"PartialEq",1275],[10,"Hash",1279],[10,"PartialOrd",1275],[5,"CachePadded",653],[5,"AtomicBool",679],[5,"AtomicPtr",679],[5,"AtomicI8",679],[1,"i8"],[5,"AtomicU8",679],[5,"AtomicI16",679],[1,"i16"],[5,"AtomicU16",679],[1,"u16"],[5,"AtomicI32",679],[1,"i32"],[5,"AtomicU32",679],[5,"AtomicI64",679],[1,"i64"],[5,"AtomicU64",679],[5,"AtomicIsize",679],[1,"isize"],[5,"AtomicUsize",679],[6,"Ordering",679],[10,"FnMut",1278],[5,"Cell",1109],[5,"ConstPtr",1109],[5,"MutPtr",1109],[5,"UnsafeCell",1109],[1,"never"],[5,"Lazy",1181],[5,"InitOnce",1181],[5,"TryInitError",1181],[5,"MutexGuard",1225],[10,"AsMut",1281],[5,"Backoff",1225],[5,"Mutex",1225]],"b":[[18,"impl-dyn+Error"],[19,"impl-dyn+Error+%2B+Send"],[20,"impl-dyn+Error+%2B+Send+%2B+Sync"],[21,"impl-dyn+Error+%2B+Send+%2B+Sync"],[22,"impl-dyn+Error+%2B+Send"],[23,"impl-dyn+Error"],[28,"impl-dyn+Error+%2B+Send+%2B+Sync"],[29,"impl-dyn+Error+%2B+Send"],[30,"impl-dyn+Error"],[159,"impl-UpperHex-for-FmtOption%3C\'_,+T%3E"],[160,"impl-Display-for-FmtOption%3C\'_,+T%3E"],[161,"impl-Pointer-for-FmtOption%3C\'_,+T%3E"],[162,"impl-Debug-for-FmtOption%3C\'_,+T%3E"],[163,"impl-LowerHex-for-FmtOption%3C\'_,+T%3E"],[164,"impl-Binary-for-FmtOption%3C\'_,+T%3E"],[166,"impl-Display-for-FormatterFn%3CF%3E"],[167,"impl-Debug-for-FormatterFn%3CF%3E"],[169,"impl-Display-for-Error"],[170,"impl-Debug-for-Error"],[171,"impl-Debug-for-Arguments%3C\'_%3E"],[172,"impl-Display-for-Arguments%3C\'_%3E"],[279,"impl-Formatter%3C\'a%3E"],[280,"impl-Write-for-Formatter%3C\'_%3E"],[283,"impl-Formatter%3C\'a%3E"],[284,"impl-Write-for-Formatter%3C\'_%3E"],[378,"impl-Debug-for-Error%3CE%3E"],[379,"impl-Display-for-Error%3CE%3E"],[896,"impl-Pointer-for-AtomicPtr%3CT%3E"],[897,"impl-Debug-for-AtomicPtr%3CT%3E"],[1194,"impl-Display-for-TryInitError%3CT%3E"],[1195,"impl-Debug-for-TryInitError%3CT%3E"],[1243,"impl-Debug-for-MutexGuard%3C\'a,+T%3E"],[1244,"impl-Display-for-MutexGuard%3C\'a,+T%3E"]],"a":{"compare_and_swap":[752,764],"{:?}":[44],"{}":[52]}}],\
["num_traits",{"doc":"Numeric traits for generic mathematics","t":"EEEEEEEEEEEPEEGEEREPEEKKKKEKKEFEEKEEEEEEEEEEEEEEEEENNNNCCEEHHHCNNNNNMCCNNOECCECENNNNNNEKKKMMMMKKKKMHMNNNNNMNNNNNMNNNNNNNMNNNNNMNNMMMMMMMMMMKKMMNMNMMMNNNMMNNMMNNNNNNNNMNMMMMMNNNNMMNKKNMHMNNHMKMMMMNMMNMMMMMMMNMMMCCCCCCCCRRKKKMMNMMNKKKKKKKKMMMMMMMMKKMMMMKRMKKRMMKKKMMMKKKKMMMMMKKKKKKMMMMMMRKHHMKKHMHMMMHM","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","sign","signum","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","is_subnormal","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[87,"num_traits::bounds"],[94,"num_traits::cast"],[129,"num_traits::float"],[180,"num_traits::identities"],[190,"num_traits::int"],[210,"num_traits::ops"],[218,"num_traits::ops::bytes"],[229,"num_traits::ops::checked"],[245,"num_traits::ops::euclid"],[251,"num_traits::ops::inv"],[254,"num_traits::ops::mul_add"],[259,"num_traits::ops::overflowing"],[265,"num_traits::ops::saturating"],[274,"num_traits::ops::wrapping"],[286,"num_traits::pow"],[291,"num_traits::sign"],[301,"core::cmp"],[302,"core::fmt"],[303,"core::fmt"],[304,"core::any"],[305,"core::marker"],[306,"core::option"],[307,"core::num"],[308,"core::marker"],[309,"core::ops::arith"]],"d":["","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,9,0,0,2,5,5,0,0,0,0,0,0,2,5,2,5,2,5,0,0,0,0,12,13,12,14,0,0,0,0,15,0,18,21,21,21,21,21,21,21,21,21,21,21,21,21,21,19,19,19,19,19,19,19,19,19,19,19,19,19,19,34,34,34,34,34,34,34,34,34,34,0,0,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,39,40,0,39,39,40,0,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,46,43,0,0,0,43,43,43,46,46,46,0,0,0,0,0,0,0,0,47,48,49,50,51,52,53,54,0,0,55,55,56,56,0,58,58,0,0,59,59,60,0,0,0,61,62,63,0,0,0,0,64,65,66,64,67,0,0,0,0,0,0,68,69,70,71,72,73,76,0,0,0,76,0,0,0,77,0,77,77,77,0,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-1,-1],-1,1],[[-1,-1],-1,1],[[-1,-1],-1,1],0,[[2,3],4],[[5,3],4],[[5,3],4],[-1,-1,[]],[-1,-1,[]],[[6,7],[[10,[[9,[],[[8,[-1]]]],-1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,[[],12],[[],13],[[],12],[[],14],0,0,0,0,[15,-1,16],[-1,[[17,[-2]]],18,18],[-1,[[17,[18]]],19],[20,[[17,[21]]]],[22,[[17,[21]]]],[23,[[17,[21]]]],[24,[[17,[21]]]],[25,[[17,[21]]]],[26,[[17,[21]]]],[27,[[17,[21]]]],[28,[[17,[21]]]],[29,[[17,[21]]]],[30,[[17,[21]]]],[7,[[17,[21]]]],[31,[[17,[21]]]],[32,[[17,[21]]]],[33,[[17,[21]]]],[19,[[17,[20]]]],[19,[[17,[22]]]],[19,[[17,[23]]]],[19,[[17,[24]]]],[19,[[17,[25]]]],[19,[[17,[26]]]],[19,[[17,[27]]]],[19,[[17,[28]]]],[19,[[17,[29]]]],[19,[[17,[30]]]],[19,[[17,[7]]]],[19,[[17,[31]]]],[19,[[17,[32]]]],[19,[[17,[33]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[35,35],[35,35],[35,36],[[],35],[35,35],[35,35],[[],35],[35,[[37,[31,24,27]]]],[35,38],[35,38],[35,38],[35,38],[35,38],[35,38],[35,38],[[35,35],35],[[],35],[[35,35],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[35,25],35],[35,35],[35,35],[35,35],[35,35],[35,35],[35,35],0,0,[39,38],[40,38],[[],-1,39],[[],39],[39,37],[40,37],[[],-1,40],[[],40],0,[41,7],[41,7],[41,41],[41,41],[41,7],[41,7],[[41,7],41],[41,41],[[41,7],41],[[41,7],41],[[41,7],41],[[41,7],41],[41,41],[41,41],[41,41],[41,7],[41,7],[[41,7],41],[[41,7],41],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[43,[],[[42,[-1]]]]],[44,45]],[-1,[[43,[],[[42,[-1]]]]],[44,45]],[-1,[[43,[],[[42,[-1]]]]],[44,45]],[[[46,[],[[42,[-1]]]]],-1,44],[[[46,[],[[42,[-1]]]]],-1,44],[[[46,[],[[42,[-1]]]]],-1,44],0,0,0,0,0,0,0,0,[[47,47],[[17,[47]]]],[[48,48],[[17,[48]]]],[[49,49],[[17,[49]]]],[50,[[17,[50]]]],[[51,51],[[17,[51]]]],[[52,7],[[17,[52]]]],[[53,7],[[17,[53]]]],[[54,54],[[17,[54]]]],0,0,[[55,55],[[17,[55]]]],[[55,55],[[17,[55]]]],[[56,56],56],[[56,56],56],0,0,[[[58,[],[[57,[-1]]]]],-1,[]],0,0,0,[[[59,[],[[57,[-1]]]],-2,-3],-1,[],[],[]],[[60,-1,-2],37,[],[]],0,0,0,[[61,61],[[37,[61,38]]]],[[62,62],[[37,[62,38]]]],[[63,63],[[37,[63,38]]]],0,0,0,0,[[64,64],64],[[65,65],65],[[66,66],66],[[64,64],64],[[67,67],67],0,0,0,0,0,0,[[68,68],68],[[69,69],69],[70,70],[[71,7],71],[[72,7],72],[[73,73],73],0,0,[[-1,33],[[17,[-1]]],[74,39,49]],[[-1,33],-1,[74,39,[75,[],[[57,[]]]]]],[[[76,[],[[57,[-1]]]],-2],-1,[],[]],0,0,[-1,-1,77],[77,77],[[-1,-1],-1,77],[[77,77],77],[77,38],[77,38],[-1,-1,77],[77,77]],"c":[],"p":[[10,"PartialOrd",301],[6,"FloatErrorKind",0],[5,"Formatter",302],[8,"Result",302],[5,"ParseFloatError",0],[1,"str"],[1,"u32"],[17,"FromStrRadixErr"],[10,"Num",0],[6,"Result",303],[5,"TypeId",304],[10,"Bounded",87],[10,"UpperBounded",87],[10,"LowerBounded",87],[10,"AsPrimitive",94],[10,"Copy",305],[6,"Option",306],[10,"NumCast",94],[10,"ToPrimitive",94],[1,"f32"],[10,"FromPrimitive",94],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[1,"isize"],[1,"u128"],[1,"u16"],[1,"u64"],[1,"u8"],[1,"usize"],[10,"FloatConst",129],[10,"FloatCore",129],[6,"FpCategory",307],[1,"tuple"],[1,"bool"],[10,"One",180],[10,"Zero",180],[10,"PrimInt",190],[17,"Bytes"],[10,"FromBytes",218],[10,"NumBytes",218],[10,"Sized",305],[10,"ToBytes",218],[10,"CheckedAdd",229],[10,"CheckedDiv",229],[10,"CheckedMul",229],[10,"CheckedNeg",229],[10,"CheckedRem",229],[10,"CheckedShl",229],[10,"CheckedShr",229],[10,"CheckedSub",229],[10,"CheckedEuclid",245],[10,"Euclid",245],[17,"Output"],[10,"Inv",251],[10,"MulAdd",254],[10,"MulAddAssign",254],[10,"OverflowingAdd",259],[10,"OverflowingMul",259],[10,"OverflowingSub",259],[10,"Saturating",265],[10,"SaturatingAdd",265],[10,"SaturatingMul",265],[10,"SaturatingSub",265],[10,"WrappingAdd",274],[10,"WrappingMul",274],[10,"WrappingNeg",274],[10,"WrappingShl",274],[10,"WrappingShr",274],[10,"WrappingSub",274],[10,"Clone",308],[10,"Mul",309],[10,"Pow",286],[10,"Signed",291]],"b":[[64,"impl-Debug-for-ParseFloatError"],[65,"impl-Display-for-ParseFloatError"]]}],\
["pci_types",{"doc":"","t":"TGGIPFKIIGPFTPGTTTIIIPPSTTPPPPTFFPFTTPFIIIPTINNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNOOOOOOOPPPFPPPPPPPPPPPPPPFPGGFPPPPPGPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNOOPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPNNNNNNNNNNNNNNNNNNNNNN","n":["BUS_MASTER_ENABLE","Bar","BarWriteError","BaseClass","CardBusBridge","CommandRegister","ConfigRegionAccess","DeviceId","DeviceRevision","DevselTiming","Endpoint","EndpointHeader","FAST_BACK_TO_BACK_ENABLE","Fast","HeaderType","IDSEL_STEP_WAIT_CYCLE_CONTROL","INTERRUPT_DISABLE","IO_ENABLE","Interface","InterruptLine","InterruptPin","InvalidValue","Io","MAX_BARS","MEMORY_ENABLE","MEMORY_WRITE_AND_INVALIDATE","Medium","Memory32","Memory64","NoSuchBar","PARITY_ERROR_RESPONSE","PciAddress","PciHeader","PciPciBridge","PciPciBridgeHeader","SERR_ENABLE","SPECIAL_CYCLE_ENABLE","Slow","StatusRegister","SubClass","SubsystemId","SubsystemVendorId","Unknown","VGA_PALETTE_SNOOP","VendorId","all","bar","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","capability","capability_pointer","capable_66mhz","clone","clone","clone","clone","clone","clone","cmp","command","command","command","complement","contains","default","device","device_type","devsel_timing","difference","empty","eq","eq","eq","eq","eq","extend","fast_back_to_back_capable","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_header","from_header","from_iter","from_name","function","function_exists","has_capability_list","has_multiple_functions","header","header","header_type","id","insert","interrupt","interrupt_status","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","master_data_parity_error","new","new","new","not","parity_error_detected","partial_cmp","primary_bus_number","read","received_master_abort","received_target_abort","remove","revision_and_class","secondary_bus_number","segment","set","signalled_system_error","signalled_target_abort","status","status","status","sub","sub_assign","subordinate_bus_number","subsystem","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","update_command","update_command","update_command","write","write_bar","address","address","port","prefetchable","prefetchable","size","size","AGP3","AcceleratedGraphicsPort","BridgeSubsystemVendorId","CapabilityIterator","CompactPCICentralResourceControl","CompactPCIHotswap","DebugPort","Edge","HyperTransport","Int1","Int16","Int2","Int32","Int4","Int8","LevelAssert","LevelDeassert","Msi","MsiCapability","MsiX","MultipleMessageSupport","PciCapability","PciCapabilityAddress","PciExpress","PciHotPlugControl","PciX","PowerManagement","SlotIdentification","TriggerMode","Unknown","Vendor","VitalProductData","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_message_mask","get_multiple_message_capable","get_multiple_message_enable","get_pending","has_per_vector_masking","into","into","into","into","into","into","into_iter","is_64bit","is_enabled","next","offset","partial_cmp","set_enabled","set_message_info","set_message_mask","set_multiple_message_enable","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","address","id","AccessBusController","AtaController","AtmController","AudioDevice","AudioSatelliteCommunicationsController","BluetoothController","BroadbandController","CanBusController","CardBusBridge","CoProcessor","CommunicationsSynchronizationController","ConsumerIrController","DataSatelliteCommunicationsController","Device","DeviceType","Digitizer","DmaController","DpioModule","Ehci","EisaBridge","EntertainmentCryptionController","Ethernet24GHzController","Ethernet5GHzController","EthernetController","FddiController","FibreChannelController","FirewireController","FlashController","FloppyController","GameportController","GenericDockingStation","GenericPciHotPlugController","GpibController","HostBridge","IdeController","InfiniBandController","InfinibandPciHostBridge","IntelligentIoController","InterruptController","IpiBusController","IpmiController","IrdaController","IsaBridge","IsdnController","KeyboardController","LegacyNotVgaCompatible","LegacyVgaCompatible","ManagementCard","McaBridge","Modem","MouseController","MultiportSerialController","NetworkCryptionController","NuBusBridge","NvmeController","Ohci","OtherBridgeDevice","OtherCommunicationsDevice","OtherCryptionController","OtherDisplayController","OtherDockingStation","OtherInputController","OtherInterface","OtherMassStorageController","OtherMemoryController","OtherMultimediaDevice","OtherNetworkController","OtherSignalProcessingController","OtherSystemPeripheral","OtherWirelessController","ParallelPort","PciPciBridge","PcmciaBridge","PerformanceCounter","PicmgController","Processor386","Processor486","ProcessorAlpha","ProcessorMips","ProcessorPentium","ProcessorPowerPc","RacewayBridge","RaidController","RamController","RfController","RtcController","SasController","SataController","ScannerController","ScsiBusController","SdHostController","SemiTransparentPciPciBridge","SercosController","SerialController","SmBusController","SmartCard","SsaBusController","SystemTimer","TelephonyDevice","ThreeDController","TokenRingController","TvSatelliteCommunicationsController","UfsController","Uhci","Unknown","UsbController","UsbType","VgaCompatibleController","VideoDevice","VoiceSatelliteCommunicationsController","WorldFipController","XgaController","Xhci","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","eq","fmt","fmt","from","from","from","into","into","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"pci_types"],[226,"pci_types::Bar"],[233,"pci_types::capability"],[335,"pci_types::capability::PciCapability"],[337,"pci_types::device_type"],[472,"core::option"],[473,"core::cmp"],[474,"core::result"],[475,"core::iter::traits::collect"],[476,"core::fmt"],[477,"core::fmt"],[478,"bitflags::iter"],[479,"core::ops::function"]],"d":["","","","","","","","","","Slowest time that a device will assert DEVSEL# for any bus …","","Endpoints have a Type-0 header, so the remainder of the …","","","","","","","","","","","","","","","","","","","","The address of a PCIe function.","Every PCI configuration region starts with a header made …","","PCI-PCI Bridges have a Type-1 header, so the remainder of …","","","","","","","","","","","Get a flags value with all known bits set.","Get the contents of a BAR in a given slot. Empty bars will …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","If returns <code>true</code> the device is capable of running at 66 …","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","The slowest time that a device will assert DEVSEL# for any …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","If returns <code>true</code> the device can accept fast back-to-back …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","If returns <code>true</code> the device implements the pointer for a …","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","Represents the state of the device’s INTx# signal. If …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","This returns <code>true</code> only when the following conditions are …","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Will be <code>true</code> whenever the device detects a parity error, …","","","","Will return <code>true</code>, by a master device, whenever its …","Will return <code>true</code>, by a master device, whenever its …","The intersection of a source flags value with the …","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Will be <code>true</code> whenever the device asserts SERR#.","Will return <code>true</code> whenever a target device terminates a …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","Write to a BAR, setting the address for a device to use. …","","","","","","","","AGP Target PCI-PCI bridge capability, Cap ID = <code>0x0E</code>","Accelerated graphics port capability, Cap ID = <code>0x02</code>","Bridge subsystem vendor/device ID capability, Cap ID = <code>0x0D</code>","","CompactPCI Central Resource Control capability, Cap ID = …","CompactPCI HotSwap capability, Cap ID = <code>0x06</code>","Debug port capability, Cap ID = <code>0x0A</code>","","HyperTransport capability, Cap ID = <code>0x08</code>","Device can send 1 interrupt. No interrupt vector …","Device can send 16 interrupts","Device can send 2 interrupts","Device can send 32 interrupts","Device can send 4 interrupts","Device can send 8 interrupts","","","Message signalling interrupts capability, Cap ID = <code>0x05</code>","","MSI-X capability, Cap ID = <code>0x11</code>","Specifies how many MSI interrupts one device can have. …","PCI capabilities","","PCI Express capability, Cap ID = <code>0x10</code>","PCI Standard Hot-Plug Controller capability, Cap ID = <code>0x0C</code>","PCI-X capability, Cap ID = <code>0x07</code>","Power management capability, Cap ID = <code>0x01</code>","Slot identification capability, Cap ID = <code>0x04</code>","When device should trigger the interrupt","Unknown capability","Vendor-specific capability, Cap ID = <code>0x09</code>","Vital product data capability, Cap ID = <code>0x3</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get interrupt mask","How many interrupts this device has?","Return how many interrupts the device is using","Get pending interrupts","Does device supports masking individual vectors?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is device using 64-bit addressing?","Is MSI capability enabled?","","","","Enable or disable MSI capability","Set where the interrupts will be sent to","Set interrupt mask","Set how many interrupts the device will use. If requested …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines the Base Class and the Sub-class of a device to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The different register-level programming interfaces …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[1,0,0,0,14,0,0,0,0,0,14,0,1,13,0,1,1,1,0,0,0,15,4,0,1,1,13,4,4,15,1,0,0,14,0,1,1,13,0,0,0,0,14,1,0,1,2,1,1,1,1,1,1,1,1,17,2,18,13,11,1,9,14,4,15,17,2,18,13,11,1,9,14,4,15,9,2,0,2,11,13,11,9,14,4,15,9,17,2,18,1,1,9,9,0,11,1,1,13,11,9,14,15,1,11,13,11,1,1,1,1,9,9,14,4,15,17,2,18,13,11,1,9,14,4,15,1,1,1,1,2,18,1,1,9,6,11,17,2,18,17,17,1,2,11,1,1,17,2,18,13,11,1,9,14,4,15,1,1,1,1,1,11,17,11,9,1,11,9,18,6,11,11,1,17,18,9,1,11,11,17,2,18,1,1,18,2,1,1,17,2,18,13,13,11,1,9,14,4,15,17,2,18,13,11,1,9,14,4,15,17,2,18,13,11,1,9,14,4,15,1,17,2,18,6,2,49,50,51,49,50,49,50,45,45,45,0,45,45,45,46,45,42,42,42,42,42,42,46,46,45,0,45,0,0,0,45,45,45,45,45,0,45,45,45,44,10,42,46,43,44,45,10,42,46,43,44,45,42,43,44,45,42,42,42,46,43,44,45,10,42,46,43,44,45,43,43,43,43,43,10,42,46,43,44,45,10,43,43,10,44,42,43,43,43,43,10,42,42,46,43,44,45,10,42,46,43,44,45,10,42,46,43,44,45,52,52,47,47,47,47,47,47,47,47,47,47,47,47,47,48,0,47,47,47,48,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,47,47,47,47,47,47,48,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,47,47,0,47,47,47,47,47,48,47,48,47,48,47,48,47,48,47,48,47,47,48,47,48,47,48,48,47,48,47,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,3,-1],[[5,[4]]],6],[[1,1],1],[[1,1],7],[[1,1],1],[[1,1],7],[1,8],[1,8],[[1,1],1],[[1,1],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,3],[[2,-1],[[10,[-1]]],6],0,[[2,-1],8,6],[11,12],[13,13],[11,11],[9,9],[14,14],[4,4],[15,15],[[9,9],16],[[17,-1],1,6],[[2,-1],1,6],[[18,-1],1,6],[1,1],[[1,1],12],[[],9],[9,3],0,[11,[[19,[13,7]]]],[[1,1],1],[[],1],[[13,13],12],[[11,11],12],[[9,9],12],[[14,14],12],[[15,15],12],[[1,-1],7,[[21,[],[[20,[1]]]]]],[11,12],[[13,22],23],[[11,22],23],[[1,22],23],[[1,22],23],[[1,22],23],[[1,22],23],[[9,22],23],[[9,22],23],[[14,22],23],[[4,22],23],[[15,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[8,[[5,[1]]]],[8,1],[8,1],[8,1],[[17,-1],[[5,[2]]],6],[[17,-1],[[5,[18]]],6],[-1,1,[[21,[],[[20,[1]]]]]],[24,[[5,[1]]]],[9,3],[[6,9],12],[11,12],[[17,-1],12,6],[2,17],[18,17],[[17,-1],14,6],[[17,-1],[[7,[25,26]]],6],[[1,1],7],[[2,-1],[[7,[27,28]]],6],[11,12],[[1,1],1],[[1,1],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,12],[1,12],[1,[[29,[1]]]],[1,[[30,[1]]]],[11,12],[9,17],[8,11],[[8,3,3,3],9],[1,1],[11,12],[[9,9],[[5,[16]]]],[[18,-1],3,6],[[6,9,8],31],[11,12],[11,12],[[1,1],7],[[17,-1],[[7,[32,33,34,35]]],6],[[18,-1],3,6],[9,8],[[1,1,12],7],[11,12],[11,12],[[17,-1],11,6],[[2,-1],11,6],[[18,-1],11,6],[[1,1],1],[[1,1],7],[[18,-1],3,6],[[2,-1],[[7,[36,37]]],6],[[1,1],1],[[1,1],7],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[3,[[19,[13,-1]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[[1,1],1],[[17,-1,-2],7,6,[[40,[1],[[39,[1]]]]]],[[2,-1,-2],7,6,[[40,[1],[[39,[1]]]]]],[[18,-1,-2],7,6,[[40,[1],[[39,[1]]]]]],[[6,9,8,31],7],[[2,3,-1,41],[[19,[7,15]]],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[43,43],[44,44],[45,45],[[42,42],16],[[42,42],12],[[42,22],23],[[46,22],23],[[43,22],23],[[44,22],23],[[45,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[43,-1],31,6],[43,42],[[43,-1],42,6],[[43,-1],31,6],[43,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,12],[[43,-1],12,6],[[[10,[-1]]],[[5,[-2]]],6,[]],0,[[42,42],[[5,[16]]]],[[43,12,-1],7,6],[[43,31,3,46,-1],7,6],[[43,-1,31],7,6],[[43,42,-1],7,6],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[3,[[19,[42,-1]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],[-1,38,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[48,48],[[47,47],12],[[48,48],12],[[47,22],23],[[48,22],23],[-1,-1,[]],[[[7,[33,34]]],47],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[35,[[19,[48,-1]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,38,[]],[-1,38,[]]],"c":[],"p":[[5,"CommandRegister",0],[5,"EndpointHeader",0],[1,"u8"],[6,"Bar",0],[6,"Option",472],[10,"ConfigRegionAccess",0],[1,"tuple"],[1,"u16"],[5,"PciAddress",0],[5,"CapabilityIterator",233],[5,"StatusRegister",0],[1,"bool"],[6,"DevselTiming",0],[6,"HeaderType",0],[6,"BarWriteError",0],[6,"Ordering",473],[5,"PciHeader",0],[5,"PciPciBridgeHeader",0],[6,"Result",474],[17,"Item"],[10,"IntoIterator",475],[5,"Formatter",476],[8,"Result",476],[1,"str"],[8,"VendorId",0],[8,"DeviceId",0],[8,"InterruptPin",0],[8,"InterruptLine",0],[5,"Iter",477],[5,"IterNames",477],[1,"u32"],[8,"DeviceRevision",0],[8,"BaseClass",0],[8,"SubClass",0],[8,"Interface",0],[8,"SubsystemId",0],[8,"SubsystemVendorId",0],[5,"TypeId",478],[17,"Output"],[10,"Fn",479],[1,"usize"],[6,"MultipleMessageSupport",233],[5,"MsiCapability",233],[5,"PciCapabilityAddress",233],[6,"PciCapability",233],[6,"TriggerMode",233],[6,"DeviceType",337],[6,"UsbType",337],[15,"Memory32",226],[15,"Memory64",226],[15,"Io",226],[15,"Unknown",335]],"b":[[51,"impl-Flags-for-CommandRegister"],[52,"impl-CommandRegister"],[107,"impl-UpperHex-for-CommandRegister"],[108,"impl-Binary-for-CommandRegister"],[109,"impl-LowerHex-for-CommandRegister"],[110,"impl-Octal-for-CommandRegister"],[111,"impl-Display-for-PciAddress"],[112,"impl-Debug-for-PciAddress"],[127,"impl-CommandRegister"],[128,"impl-Flags-for-CommandRegister"]]}],\
["pin_project",{"doc":"A crate for safe and ergonomic pin-projection.","t":"KXX","n":["UnsafeUnpin","pin_project","pinned_drop"],"q":[[0,"pin_project"]],"d":["A trait used for custom implementations of <code>Unpin</code>.","An attribute that creates projection types covering all …","An attribute used for custom implementations of [<code>Drop</code>]."],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[],"b":[]}],\
["pin_project_internal",{"doc":"Implementation detail of the <code>pin-project</code> crate. - <strong>do not </strong>…","t":"XX","n":["pin_project","pinned_drop"],"q":[[0,"pin_project_internal"]],"d":["An attribute that creates projection types covering all …","An attribute used for custom implementations of <code>Drop</code>."],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]}],\
["pin_project_lite",{"doc":"A lightweight version of pin-project written with …","t":"Q","n":["pin_project"],"q":[[0,"pin_project_lite"]],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]}],\
["poplar",{"doc":"","t":"FTNNCCNNNNCNNNNCNNCNNNNNSSSSSSFGPPPPPNNNNNNNNNNNNNNNNNNNNFGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFNNNNNNONNOONNNNNOONONNNNNNPPPPSSPPGTGEEGPPPPPPPPPPPGFPPPPPPPPPPPPPEEEPGSSSSSSSSSSSSSGGPPPPPTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCEHNNNNNNNNNNNNNNNNNNNNNNNHNCEEEECHNCHNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHPPFGPPGPNNNNNNNNNNNNNNNNNNNHONNNNOONNNNNNNNNNNNNOGPPPPFGPPOONNNNNNONNNONNNNNNNONNNNHHHOONNNNNNNNNNNOOOOOHHHHHHHHHHH","n":["Handle","ZERO","borrow","borrow_mut","caps","channel","clone","clone_into","cmp","deserialize","early_logger","eq","fmt","from","into","memory_object","partial_cmp","serialize","syscall","to_owned","try_from","try_from","try_into","type_id","CAP_EARLY_LOGGING","CAP_GET_FRAMEBUFFER","CAP_PADDING","CAP_PCI_BUS_DRIVER","CAP_SERVICE_PROVIDER","CAP_SERVICE_USER","CapabilitiesRepr","Capability","EarlyLogging","GetFramebuffer","PciBusDriver","ServiceProvider","ServiceUser","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","into","into","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Channel","ChannelReceiveError","ChannelSendError","FailedToDeserialize","FailedToSerialize","ReceiveError","SendError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from_handle","into","into","into","register_service","send","try_from","try_from","try_from","try_into","try_into","try_into","try_receive","type_id","type_id","type_id","EarlyLogger","borrow","borrow_mut","enabled","flush","from","into","log","try_from","try_into","type_id","MappedMemoryObject","MemoryObject","borrow","borrow","borrow_mut","borrow_mut","create","create_physical","flags","from","from","handle","inner","into","into","map","map_address","map_at","mapped_at","phys_address","ptr","size","try_from","try_from","try_into","try_into","type_id","type_id","AddressPointerInvalid","BytesAddressInvalid","BytesAddressInvalid","BytesBufferTooSmall","CHANNEL_MAX_NUM_BYTES","CHANNEL_MAX_NUM_HANDLES","CannotTransferHandle","ChannelCannotSend","CreateMemoryObjectError","EXECUTABLE","EarlyLogError","FramebufferInfo","GetFramebufferError","GetMessageError","HandlesAddressInvalid","HandlesAddressInvalid","HandlesBufferTooSmall","InvalidChannelHandle","InvalidChannelHandle","InvalidFlags","InvalidHandle","InvalidPhysicalAddressPointer","InvalidSize","InvalidTransferredHandle","InvalidVirtualAddress","MapMemoryObjectError","MemoryObjectFlags","MessageNotValidUtf8","MessageTooLong","NameLengthNotValid","NameLengthNotValid","NamePointerNotValid","NamePointerNotValid","NoMessage","NoServiceWithThatName","NotAChannel","NotAChannel","NotAMemoryObject","NotAnAddressSpace","OtherEndDisconnected","PciDeviceInfo","PciGetInfoError","PixelFormat","RegionAlreadyMapped","RegisterServiceError","SERVICE_NAME_MAX_LENGTH","SYSCALL_CREATE_CHANNEL","SYSCALL_CREATE_MEMORY_OBJECT","SYSCALL_EARLY_LOG","SYSCALL_GET_FRAMEBUFFER","SYSCALL_GET_MESSAGE","SYSCALL_MAP_MEMORY_OBJECT","SYSCALL_PCI_GET_INFO","SYSCALL_REGISTER_SERVICE","SYSCALL_SEND_MESSAGE","SYSCALL_SUBSCRIBE_TO_SERVICE","SYSCALL_WAIT_FOR_MESSAGE","SYSCALL_YIELD","SendMessageError","SubscribeToServiceError","TaskDoesNotHaveCorrectCapability","TaskDoesNotHaveCorrectCapability","TaskDoesNotHaveCorrectCapability","TooManyBytes","TooManyHandles","WRITABLE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","contains","create_memory_object","difference","early_log","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_framebuffer","get_framebuffer","get_message","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","map_memory_object","not","pci","pci_get_info","pci_get_info_slice","pci_get_info_vec","raw","raw_x86_64","register_service","remove","result","send_message","set","sub","sub_assign","subscribe_to_service","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","yield_to_kernel","AccessDenied","Bgr32","FramebufferInfo","GetFramebufferError","InfoAddressIsInvalid","NoFramebufferCreated","PixelFormat","Rgb32","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","fmt","fmt","fmt","from","from","from","get_framebuffer","height","into","into","into","into","pixel_format","stride","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","Bar","BufferNotLargeEnough","BufferPointerInvalid","Memory32","Memory64","PciDeviceInfo","PciGetInfoError","PlatformDoesNotSupportPci","TaskDoesNotHaveCorrectCapability","address","bars","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","clone","clone_into","default","device_id","eq","fmt","fmt","fmt","from","from","from","interface","into","into","into","into","pci_get_info","pci_get_info_slice","pci_get_info_vec","revision","sub_class","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vendor_id","memory_object","memory_object","size","size","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","handle_from_syscall_repr","handle_to_syscall_repr","status_from_syscall_repr","status_to_syscall_repr","status_with_payload_to_syscall_repr"],"q":[[0,"poplar"],[24,"poplar::caps"],[57,"poplar::channel"],[91,"poplar::early_logger"],[102,"poplar::memory_object"],[130,"poplar::syscall"],[356,"poplar::syscall::get_framebuffer"],[405,"poplar::syscall::pci"],[456,"poplar::syscall::pci::Bar"],[460,"poplar::syscall::raw_x86_64"],[466,"poplar::syscall::result"],[471,"core::cmp"],[472,"ptah::de"],[473,"ptah::de"],[474,"core::fmt"],[475,"ptah::ser"],[476,"ptah::ser"],[477,"core::result"],[478,"core::any"],[479,"ptah::ser"],[480,"log"],[481,"bitflags::iter"],[482,"bitflags::iter"],[483,"core::convert"],[484,"core::convert"]],"d":["A <code>Handle</code> is used to represent a task’s access to a …","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","<code>N</code> must be a multiple of 4, and padded with zeros, so the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Receive a message from the channel, if there’s one …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","For <code>MemoryObject</code>s with a known physical mapping, translate …","","The virtual address (address in the task’s address …","","","","","","","","","","","","","","","","Transferred handles must have the <code>TRANSFER</code> right.","The <code>Channel</code> handle must have the <code>SEND</code> right to use the …","","","","","","","","","","The <code>Channel</code> handle is invalid.","","","","","","A handle to be transferred is invalid.","","","","","","Name must be greater than <code>0</code> bytes, and not greater than <code>256</code>…","Name must be greater than <code>0</code> bytes, and not greater than <code>256</code>…","","","","","The <code>Channel</code> handle isn’t a <code>Channel</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Create a MemoryObject kernel object of the given size (in …","The intersection of a source flags value with the …","","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","The calling task does not have the correct capability to …","","","","The address passed in <code>a</code> to write the info struct into was …","The kernel did not create a framebuffer.","Describes how the supplied framebuffer represents pixels.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The upper byte of the class-code. This identifies the Base …","","","","The ID of the particular device. These are allocated by …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The lower byte of the class-code. This may indicate a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Makes a raw <code>pci_get_info</code> system call, given a pointer to a …","","","A device-specific revision identifier. These are chosen by …","The middle byte of the class-code. This identifies the Sub …","","","","","","","","","","","","The ID of the manufacturer of the device. These are …","","","","","","","","","","","","","","","Convert a <code>Result</code> that carries a custom status on success. …"],"i":[0,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,16,16,16,16,16,19,16,19,16,16,16,16,16,19,16,19,16,19,16,19,16,19,16,19,16,0,0,0,21,20,21,20,22,20,21,22,20,21,20,21,22,20,21,22,22,20,21,22,22,22,20,21,22,20,21,22,22,20,21,0,28,28,28,28,28,28,28,28,28,28,0,0,32,34,32,34,32,32,32,32,34,32,34,32,34,32,34,32,34,32,34,32,32,34,32,34,32,34,35,38,39,39,0,0,38,38,0,31,0,0,0,0,38,39,39,38,39,33,35,33,33,38,33,0,0,37,37,27,40,27,40,39,40,38,39,35,35,38,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,27,40,38,38,31,31,31,31,31,31,31,31,31,31,37,33,31,35,38,39,27,40,37,33,31,35,38,39,27,40,37,33,31,35,38,39,27,40,37,33,31,35,38,39,27,40,31,31,0,31,0,31,31,31,37,33,31,31,31,31,31,35,38,39,27,40,37,33,31,35,38,39,27,40,31,31,31,31,31,31,0,0,0,31,31,31,37,37,33,33,31,35,35,38,38,39,39,27,27,40,40,31,31,31,31,31,0,31,0,0,0,0,0,0,0,31,0,0,31,31,31,0,31,37,33,31,35,38,39,27,40,31,37,37,33,33,31,35,35,38,38,39,39,27,27,40,40,37,33,31,35,38,39,27,40,37,33,31,35,38,39,27,40,31,0,46,47,0,0,46,46,0,47,46,47,48,46,47,48,46,47,48,46,47,48,47,46,47,48,46,47,48,0,48,46,46,47,48,48,48,46,47,48,46,46,47,48,46,47,48,46,47,48,48,0,49,49,51,51,0,0,49,49,50,50,50,51,49,50,51,49,50,49,49,50,50,49,50,51,49,50,51,49,50,50,51,49,49,0,0,0,50,50,49,50,51,49,49,50,51,49,50,51,49,50,56,57,56,57,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,1],[[-1,-2],2,[],[]],[[1,1],3],[4,[[5,[1]]]],0,[[1,1],6],[[1,7],8],[-1,-1,[]],[-1,-2,[],[]],0,[[1,1],[[9,[3]]]],[[1,[10,[-1]]],[[11,[2]]],12],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[1,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[-1,-2],2,[],[]],[[16,16],6],[[16,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[17]]],19],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,7],8],[[21,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,[[22,[-1,-2]]],[23,24],[23,24]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,[[13,[[22,[26,1]],27]]]],[[[22,[-1,-2]],-1],[[13,[2,20]]],[23,24],[23,24]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[22,[-1,-2]]],[[13,[[9,[-2]],21]]],[23,24],[23,24]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[28,29],6],[28,2],[-1,-1,[]],[-1,-2,[],[]],[[28,30],2],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,31],[[13,[32,33]]]],[[14,31],[[13,[32,33]]]],0,[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[32,[[13,[34,35]]]],[[34,14],[[9,[14]]]],[[32,14],[[13,[34,35]]]],0,0,[34,17],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],[[31,31],31],[[31,31],2],[[31,31],31],[[31,31],2],[31,36],[31,36],[[31,31],31],[[31,31],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[33,33],[31,31],[35,35],[38,38],[39,39],[27,27],[40,40],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[31,31],[[31,31],6],[[14,31,14],[[13,[1,33]]]],[[31,31],31],[25,[[13,[2,37]]]],[[],31],[[31,31],6],[[31,-1],2,[[42,[],[[41,[31]]]]]],[[37,7],8],[[33,7],8],[[31,7],8],[[31,7],8],[[31,7],8],[[31,7],8],[[31,7],8],[[35,7],8],[[38,7],8],[[39,7],8],[[27,7],8],[[40,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[36,[[9,[31]]]],[36,31],[36,31],[36,31],[-1,31,[[42,[],[[41,[31]]]]]],[25,[[9,[31]]]],0,0,[[1,[43,[17]],[43,[1]]],[[13,[[2,[[43,[17]],[43,[1]]]],39]]]],[[31,31],2],[[31,31],31],[[31,31],6],[-1,-2,[],[]],[37,14],[33,14],[-1,-2,[],[]],[-1,-2,[],[]],[35,14],[-1,-2,[],[]],[-1,-2,[],[]],[38,14],[39,14],[-1,-2,[],[]],[-1,-2,[],[]],[27,14],[-1,-2,[],[]],[40,14],[31,-1,[]],[31,6],[31,6],[31,[[44,[31]]]],[31,[[45,[31]]]],[[1,1,[9,[14]],14],[[13,[2,35]]]],[31,31],0,0,0,0,0,0,[25,[[13,[1,27]]]],[[31,31],2],0,[[1,[43,[17]],[43,[1]]],[[13,[2,38]]]],[[31,31,6],2],[[31,31],31],[[31,31],2],[25,[[13,[1,40]]]],[[31,31],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[31,31],2],[14,[[13,[37,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[33,-1]]],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[35,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[38,-1]]],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[39,-1]]],[]],[14,[[13,[27,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[40,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[31,31],31],[[],2],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[47,47],[48,48],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[47,47],6],[[46,7],8],[[47,7],8],[[48,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[48,[[13,[1,46]]]],0,[46,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[46,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[49,49],[[-1,-2],2,[],[]],[[],50],0,[[49,49],6],[[50,7],8],[[51,7],8],[[49,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[49,14],[-1,-2,[],[]],[[50,14],[[13,[14,49]]]],[[[43,[50]]],[[13,[[43,[50]],49]]]],[[],[[13,[[52,[50]],49]]]],0,0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[14,[[13,[49,-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,0,0,0,0,[14,14],[[14,14],14],[[14,14,14],14],[[14,14,14,14],14],[[14,14,14,14,14],14],[[14,14,14,14,14,14],14],[14,[[13,[1,-1]]],[[54,[14],[[53,[2]]]]]],[[[13,[1,-1]]],14,[[55,[14]]]],[14,[[13,[2,-1]]],[[54,[14],[[53,[2]]]]]],[[[13,[2,-1]]],14,[[55,[14]]]],[[[13,[14,-1]]],14,[[55,[14]]]]],"c":[],"p":[[5,"Handle",0],[1,"tuple"],[6,"Ordering",471],[5,"Deserializer",472],[8,"Result",472],[1,"bool"],[5,"Formatter",473],[8,"Result",473],[6,"Option",474],[5,"Serializer",475],[8,"Result",475],[10,"Writer",476],[6,"Result",477],[1,"usize"],[5,"TypeId",478],[6,"Capability",24],[1,"u8"],[1,"array"],[5,"CapabilitiesRepr",24],[6,"ChannelSendError",57],[6,"ChannelReceiveError",57],[5,"Channel",57],[10,"Serialize",475],[10,"DeserializeOwned",472],[1,"str"],[1,"never"],[6,"RegisterServiceError",130],[5,"EarlyLogger",91],[5,"Metadata",479],[5,"Record",479],[5,"MemoryObjectFlags",130],[5,"MemoryObject",102],[6,"CreateMemoryObjectError",130],[5,"MappedMemoryObject",102],[6,"MapMemoryObjectError",130],[1,"u32"],[6,"EarlyLogError",130],[6,"SendMessageError",130],[6,"GetMessageError",130],[6,"SubscribeToServiceError",130],[17,"Item"],[10,"IntoIterator",480],[1,"slice"],[5,"Iter",481],[5,"IterNames",481],[6,"GetFramebufferError",356],[6,"PixelFormat",356],[5,"FramebufferInfo",356],[6,"PciGetInfoError",405],[5,"PciDeviceInfo",405],[6,"Bar",405],[5,"Vec",482],[17,"Error"],[10,"TryFrom",483],[10,"Into",483],[15,"Memory32",456],[15,"Memory64",456]],"b":[[201,"impl-Flags-for-MemoryObjectFlags"],[202,"impl-MemoryObjectFlags"],[247,"impl-Debug-for-MemoryObjectFlags"],[248,"impl-Octal-for-MemoryObjectFlags"],[249,"impl-Binary-for-MemoryObjectFlags"],[250,"impl-UpperHex-for-MemoryObjectFlags"],[251,"impl-LowerHex-for-MemoryObjectFlags"],[266,"impl-Flags-for-MemoryObjectFlags"],[267,"impl-MemoryObjectFlags"]]}],\
["poplar_util",{"doc":"","t":"FFNNNNQCNNNNCNNNNNNQNNNNNNNNNCCCCNNNNNNNNNNQQKKMMMMKKMMMMMVNKHHHHHHMMKMMMM","n":["BinaryPrettyPrint","InitGuard","as_any","as_any","as_any_mut","as_any_mut","assert_first_call","bitmap","borrow","borrow","borrow_mut","borrow_mut","downcast","fmt","fmt","from","from","get","get_mut","impl_downcast","initialize","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","linker","math","pin","ranges","to_string","try_from","try_from","try_get","try_get_mut","try_into","try_into","type_id","type_id","uninit","unsafe_pinned","unsafe_unpinned","Bitmap","BitmapSlice","alloc","alloc","free","free","Downcast","DowncastSync","as_any","as_any_mut","into_any","into_any_arc","into_any_rc","LinkerSymbol","ptr","PowerOfTwoable","abs_difference","align_down","align_up","ceiling_integer_divide","ceiling_log2","flooring_log2","is_power_of_two","next_power_of_two","RangeIntersect","encompasses","intersection","intersects","split"],"q":[[0,"poplar_util"],[45,"poplar_util::bitmap"],[51,"poplar_util::downcast"],[58,"poplar_util::linker"],[60,"poplar_util::math"],[69,"poplar_util::ranges"],[74,"core::any"],[75,"core::fmt"],[76,"core::fmt"],[77,"alloc::boxed"],[78,"alloc::sync"],[79,"alloc::rc"],[80,"alloc::string"],[81,"core::result"],[82,"core::option"],[83,"core::any"]],"d":["Values can be wrapped in this type when they’re printed …","A guard for when you want to store some data in a static, …","","","","","This macro should be called at the beginning of functions …","It’s useful to be able to model an integral type such as …","","","","","A copy of the <code>downcast-rs</code> library, but that has been made …","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a reference to the data, if this guard has been …","Get a mutable reference to the data, if this guard has …","Adds downcasting support to traits that extend …","Initialize this <code>InitGuard</code>, allowing it to be read from in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","This module includes some macros for more easily working …","","","","","Get a reference to the data, if this guard has been …","Get a mutable reference to the data, if this guard has …","","","","","","A pinned projection of a struct field.","An unpinned projection of a struct field.","","Like <code>Bitmap</code>, but for arrays. This is unfortunately needed …","Find <code>n</code> consecutive unset bits, set them and return the …","Find <code>n</code> consecutive unset bits, set them and return the …","Free <code>n</code> previously allocated bits, starting at <code>index</code>.","Free <code>n</code> previously allocated bits, starting at <code>index</code>.","Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Anydyn Any</code>. …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Anydyn Any</code>. …","Convert <code>Box&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Box&lt;dyn Any&gt;</code>…","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;dyn Any&gt;</code>…","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;dyn Any&gt;</code>. …","<code>LinkerSymbol</code> is an extern type that represents a symbol …","","","","","","Divide <code>x</code> by <code>divide_by</code>, taking the ceiling if it does not …","","Fast integer <code>log2</code> that floors to the lower power-of-2 if <code>x</code> …","","","","Returns <code>true</code> if all values in <code>other</code> are within <code>self</code>.","","","Split <code>self</code> into three ranges: the portion before <code>other</code>, …"],"i":[0,0,2,7,2,7,0,0,2,7,2,7,0,2,2,2,7,7,7,0,7,2,7,2,7,2,7,2,7,0,0,0,0,2,2,7,7,7,2,7,2,7,7,0,0,0,0,16,18,16,18,0,0,19,19,19,20,19,0,21,0,0,0,0,0,0,0,23,23,0,25,25,25,25],"f":[0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[2,[-1]],3],4,[5,6]],[[[2,[-1]],3],4,[5,6]],[-1,-1,[]],[-1,-1,[]],[[[7,[-1]]],-1,[]],[[[7,[-1]]],-1,[]],0,[[[7,[-1]],-1],8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[1]]],[]],[[[9,[-1]]],[[9,[1]]],[]],[[[10,[-1]]],[[10,[1]]],[]],[[[10,[-1]]],[[10,[1]]],[]],[[[11,[-1]]],[[11,[1]]],[]],[[[11,[-1]]],[[11,[1]]],[]],0,0,0,0,[-1,12,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[7,[-1]]],[[14,[-1]]],[]],[[[7,[-1]]],[[14,[-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[],[[7,[-1]]],[]],0,0,0,0,[[16,17],[[14,[17]]]],[[18,17],[[14,[17]]]],[[16,17,17],8],[[18,17,17],8],0,0,[19,1],[19,1],[[[9,[19]]],[[9,[1]]]],[[[10,[20]]],[[10,[1]]]],[[[11,[19]]],[[11,[1]]]],0,[21,22],0,[[-1,-1],-1,[]],[[-1,-1],-1,[6,23]],[[-1,-1],-1,[6,23]],[[17,17],17],[17,17],[17,17],[23,24],[23,23],0,[[25,25],24],[[25,25],[[14,[25]]]],[[25,25],24],[[25,25],[[8,[[14,[25]],[14,[25]],[14,[25]]]]]]],"c":[],"p":[[10,"Any",74],[5,"BinaryPrettyPrint",0],[5,"Formatter",75],[8,"Result",75],[10,"Binary",75],[10,"PrimInt",76],[5,"InitGuard",0],[1,"tuple"],[5,"Box",77],[5,"Arc",78],[5,"Rc",79],[5,"String",80],[6,"Result",81],[6,"Option",82],[5,"TypeId",74],[10,"Bitmap",45],[1,"usize"],[10,"BitmapSlice",45],[10,"Downcast",51],[10,"DowncastSync",51],[21,"LinkerSymbol",58],[1,"u8"],[10,"PowerOfTwoable",60],[1,"bool"],[10,"RangeIntersect",69]],"b":[[13,"impl-Debug-for-BinaryPrettyPrint%3CT%3E"],[14,"impl-Display-for-BinaryPrettyPrint%3CT%3E"]]}],\
["portable_atomic",{"doc":"Portable atomic types including support for 128-bit …","t":"FFFFFFFFFFFFFFENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQQQQQQQQQQQQQQNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["AtomicBool","AtomicI128","AtomicI16","AtomicI32","AtomicI64","AtomicI8","AtomicIsize","AtomicPtr","AtomicU128","AtomicU16","AtomicU32","AtomicU64","AtomicU8","AtomicUsize","Ordering","add","add","add","add","add","add","add","add","add","add","add","add","and","and","and","and","and","and","and","and","and","and","and","and","and","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","as_ptr","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_clear","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_set","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","bit_toggle","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg_has_atomic_128","cfg_has_atomic_16","cfg_has_atomic_32","cfg_has_atomic_64","cfg_has_atomic_8","cfg_has_atomic_cas","cfg_has_atomic_ptr","cfg_no_atomic_128","cfg_no_atomic_16","cfg_no_atomic_32","cfg_no_atomic_64","cfg_no_atomic_8","cfg_no_atomic_cas","cfg_no_atomic_ptr","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compare_exchange_weak","compiler_fence","default","default","default","default","default","default","default","default","default","default","default","default","default","default","fence","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_byte_add","fetch_byte_sub","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_neg","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_not","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_ptr_add","fetch_ptr_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","from_ptr","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","hint","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_always_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","is_lock_free","load","load","load","load","load","load","load","load","load","load","load","load","load","load","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","not","not","not","not","not","not","not","not","not","not","not","not","not","or","or","or","or","or","or","or","or","or","or","or","or","or","store","store","store","store","store","store","store","store","store","store","store","store","store","store","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","swap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","xor","xor","xor","xor","xor","xor","xor","xor","xor","xor","xor","xor","xor","spin_loop"],"q":[[0,"portable_atomic"],[614,"portable_atomic::hint"],[615,"core::sync::atomic"],[616,"core::result"],[617,"core::option"],[618,"core::ops::function"],[619,"core::fmt"],[620,"core::fmt"]],"d":["A boolean type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","A raw pointer type which can be safely shared between …","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","An integer type which can be safely shared between threads.","","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Adds to the current value.","Logical “and” with a boolean value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Returns a mutable pointer to the underlying <code>bool</code>.","Returns a mutable pointer to the underlying pointer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Returns a mutable pointer to the underlying integer.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Clears the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Sets the bit at the specified bit-position to 1.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","Toggles the bit at the specified bit-position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stores a value into the <code>bool</code> if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the <code>bool</code> if the current value is the …","Stores a value into the pointer if the current value is …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","Stores a value into the atomic integer if the current …","","Creates an <code>AtomicBool</code> initialized to <code>false</code>.","Creates a null <code>AtomicPtr&lt;T&gt;</code>.","","","","","","","","","","","","","","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Adds to the current value, returning the previous value.","Logical “and” with a boolean value.","Performs a bitwise “and” operation on the address of …","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Bitwise “and” with the current value.","Offsets the pointer’s address by adding <code>val</code> <em>bytes</em>, …","Offsets the pointer’s address by subtracting <code>val</code> <em>bytes</em>, …","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Maximum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Minimum with the current value.","Logical “nand” with a boolean value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Bitwise “nand” with the current value.","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Logical “not” with a boolean value.","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical “or” with a boolean value.","Performs a bitwise “or” operation on the address of …","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Offsets the pointer’s address by adding <code>val</code> (in units of …","Offsets the pointer’s address by subtracting <code>val</code> (in …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Subtracts from the current value, returning the previous …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Fetches the value, and applies a function to it that …","Logical “xor” with a boolean value.","Performs a bitwise “xor” operation on the address of …","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts a <code>bool</code> into an <code>AtomicBool</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Creates a new <code>AtomicBool</code> from a pointer.","Creates a new <code>AtomicPtr</code> from a pointer.","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Creates a new reference to an atomic integer from a …","Returns a mutable reference to the underlying <code>bool</code>.","Returns a mutable reference to the underlying pointer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Returns a mutable reference to the underlying integer.","Re-export of the <code>core::hint</code> module.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Returns <code>true</code> if operations on values of this type are …","Loads a value from the bool.","Loads a value from the pointer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Loads a value from the atomic integer.","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Negates the current value, and sets the new value to the …","Creates a new <code>AtomicBool</code>.","Creates a new <code>AtomicPtr</code>.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Creates a new atomic integer.","Logical “not” with a boolean value.","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical negates the current value, and sets the new value …","Logical “or” with a boolean value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Bitwise “or” with the current value.","Stores a value into the bool.","Stores a value into the pointer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Stores a value into the atomic integer.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Subtracts from the current value.","Stores a value into the bool, returning the previous value.","Stores a value into the pointer, returning the previous …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","Stores a value into the atomic integer, returning the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logical “xor” with a boolean value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Bitwise “xor” with the current value.","Emits a machine instruction to signal the processor that …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,7,9,11,13,15,17,19,21,23,25,27,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,29,1,5,7,9,11,13,15,17,19,21,23,25,29,1,5,7,9,11,13,15,17,19,21,23,25,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,0,27,29,1,5,7,9,11,13,15,17,19,21,23,25,0,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,29,29,1,5,7,9,11,13,15,17,19,21,23,25,1,5,7,9,11,13,15,17,19,21,23,25,27,1,5,7,9,11,13,15,17,19,21,23,25,1,5,7,9,11,13,15,17,19,21,23,25,27,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,29,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,29,1,5,7,9,11,13,15,17,19,21,23,25,27,27,29,29,1,1,5,5,7,7,9,9,11,11,13,13,15,15,17,17,19,19,21,21,23,23,25,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,0,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,1,5,7,9,11,13,15,17,19,21,23,25,27,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,29,1,5,7,9,11,13,15,17,19,21,23,25,27,1,5,7,9,11,13,15,17,19,21,23,25,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],4],[[5,6,3],4],[[7,8,3],4],[[9,10,3],4],[[11,12,3],4],[[13,14,3],4],[[15,16,3],4],[[17,18,3],4],[[19,20,3],4],[[21,22,3],4],[[23,24,3],4],[[25,26,3],4],[[27,28,3],4],[[1,2,3],4],[[5,6,3],4],[[7,8,3],4],[[9,10,3],4],[[11,12,3],4],[[13,14,3],4],[[15,16,3],4],[[17,18,3],4],[[19,20,3],4],[[21,22,3],4],[[23,24,3],4],[[25,26,3],4],[27,28],[[[29,[-1]]],[],[]],[1,2],[5,6],[7,8],[9,10],[11,12],[13,14],[15,16],[17,18],[19,20],[21,22],[23,24],[25,26],[[[29,[-1]],18,3],28,[]],[[1,18,3],28],[[5,18,3],28],[[7,18,3],28],[[9,18,3],28],[[11,18,3],28],[[13,18,3],28],[[15,18,3],28],[[17,18,3],28],[[19,18,3],28],[[21,18,3],28],[[23,18,3],28],[[25,18,3],28],[[[29,[-1]],18,3],28,[]],[[1,18,3],28],[[5,18,3],28],[[7,18,3],28],[[9,18,3],28],[[11,18,3],28],[[13,18,3],28],[[15,18,3],28],[[17,18,3],28],[[19,18,3],28],[[21,18,3],28],[[23,18,3],28],[[25,18,3],28],[[[29,[-1]],18,3],28,[]],[[1,18,3],28],[[5,18,3],28],[[7,18,3],28],[[9,18,3],28],[[11,18,3],28],[[13,18,3],28],[[15,18,3],28],[[17,18,3],28],[[19,18,3],28],[[21,18,3],28],[[23,18,3],28],[[25,18,3],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[27,28,28,3,3],[[30,[28,28]]]],[[[29,[-1]],3,3],30,[]],[[1,2,2,3,3],[[30,[2,2]]]],[[5,6,6,3,3],[[30,[6,6]]]],[[7,8,8,3,3],[[30,[8,8]]]],[[9,10,10,3,3],[[30,[10,10]]]],[[11,12,12,3,3],[[30,[12,12]]]],[[13,14,14,3,3],[[30,[14,14]]]],[[15,16,16,3,3],[[30,[16,16]]]],[[17,18,18,3,3],[[30,[18,18]]]],[[19,20,20,3,3],[[30,[20,20]]]],[[21,22,22,3,3],[[30,[22,22]]]],[[23,24,24,3,3],[[30,[24,24]]]],[[25,26,26,3,3],[[30,[26,26]]]],[[27,28,28,3,3],[[30,[28,28]]]],[[[29,[-1]],3,3],30,[]],[[1,2,2,3,3],[[30,[2,2]]]],[[5,6,6,3,3],[[30,[6,6]]]],[[7,8,8,3,3],[[30,[8,8]]]],[[9,10,10,3,3],[[30,[10,10]]]],[[11,12,12,3,3],[[30,[12,12]]]],[[13,14,14,3,3],[[30,[14,14]]]],[[15,16,16,3,3],[[30,[16,16]]]],[[17,18,18,3,3],[[30,[18,18]]]],[[19,20,20,3,3],[[30,[20,20]]]],[[21,22,22,3,3],[[30,[22,22]]]],[[23,24,24,3,3],[[30,[24,24]]]],[[25,26,26,3,3],[[30,[26,26]]]],0,[[],27],[[],[[29,[-1]]],[]],[[],1],[[],5],[[],7],[[],9],[[],11],[[],13],[[],15],[[],17],[[],19],[[],21],[[],23],[[],25],0,[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[27,28,3],28],[[[29,[-1]],6,3],[],[]],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[[29,[-1]],6,3],[],[]],[[[29,[-1]],6,3],[],[]],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[27,28,3],28],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[1,3],2],[[5,3],6],[[7,3],8],[[9,3],10],[[11,3],12],[[13,3],14],[[15,3],16],[[17,3],18],[[19,3],20],[[21,3],22],[[23,3],24],[[25,3],26],[[27,3],28],[[1,3],2],[[5,3],6],[[7,3],8],[[9,3],10],[[11,3],12],[[13,3],14],[[15,3],16],[[17,3],18],[[19,3],20],[[21,3],22],[[23,3],24],[[25,3],26],[[27,28,3],28],[[[29,[-1]],6,3],[],[]],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[[29,[-1]],6,3],[],[]],[[[29,[-1]],6,3],[],[]],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[27,3,3,-1],[[30,[28,28]]],[[33,[28],[[31,[[32,[28]]]]]]]],[[[29,[-1]],3,3,-2],30,[],[[33,[],[[31,[32]]]]]],[[1,3,3,-1],[[30,[2,2]]],[[33,[2],[[31,[[32,[2]]]]]]]],[[5,3,3,-1],[[30,[6,6]]],[[33,[6],[[31,[[32,[6]]]]]]]],[[7,3,3,-1],[[30,[8,8]]],[[33,[8],[[31,[[32,[8]]]]]]]],[[9,3,3,-1],[[30,[10,10]]],[[33,[10],[[31,[[32,[10]]]]]]]],[[11,3,3,-1],[[30,[12,12]]],[[33,[12],[[31,[[32,[12]]]]]]]],[[13,3,3,-1],[[30,[14,14]]],[[33,[14],[[31,[[32,[14]]]]]]]],[[15,3,3,-1],[[30,[16,16]]],[[33,[16],[[31,[[32,[16]]]]]]]],[[17,3,3,-1],[[30,[18,18]]],[[33,[18],[[31,[[32,[18]]]]]]]],[[19,3,3,-1],[[30,[20,20]]],[[33,[20],[[31,[[32,[20]]]]]]]],[[21,3,3,-1],[[30,[22,22]]],[[33,[22],[[31,[[32,[22]]]]]]]],[[23,3,3,-1],[[30,[24,24]]],[[33,[24],[[31,[[32,[24]]]]]]]],[[25,3,3,-1],[[30,[26,26]]],[[33,[26],[[31,[[32,[26]]]]]]]],[[27,28,3],28],[[[29,[-1]],6,3],[],[]],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[[27,34],35],[[[29,[-1]],34],35,[]],[[[29,[-1]],34],35,[]],[[1,34],35],[[5,34],35],[[7,34],35],[[9,34],35],[[11,34],35],[[13,34],35],[[15,34],35],[[17,34],35],[[19,34],35],[[21,34],35],[[23,34],35],[[25,34],35],[-1,-1,[]],[28,27],[[],[[29,[-1]]],[]],[-1,-1,[]],[2,1],[-1,-1,[]],[-1,-1,[]],[6,5],[8,7],[-1,-1,[]],[-1,-1,[]],[10,9],[-1,-1,[]],[12,11],[-1,-1,[]],[14,13],[16,15],[-1,-1,[]],[-1,-1,[]],[18,17],[-1,-1,[]],[20,19],[22,21],[-1,-1,[]],[-1,-1,[]],[24,23],[-1,-1,[]],[26,25],[28,27],[[],[[29,[-1]]],[]],[2,1],[6,5],[8,7],[10,9],[12,11],[14,13],[16,15],[18,17],[20,19],[22,21],[24,23],[26,25],[27,28],[[[29,[-1]]],[],[]],[1,2],[5,6],[7,8],[9,10],[11,12],[13,14],[15,16],[17,18],[19,20],[21,22],[23,24],[25,26],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,28],[[[29,[-1]]],[],[]],[1,2],[5,6],[7,8],[9,10],[11,12],[13,14],[15,16],[17,18],[19,20],[21,22],[23,24],[25,26],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[27,3],28],[[[29,[-1]],3],[],[]],[[1,3],2],[[5,3],6],[[7,3],8],[[9,3],10],[[11,3],12],[[13,3],14],[[15,3],16],[[17,3],18],[[19,3],20],[[21,3],22],[[23,3],24],[[25,3],26],[[1,3],4],[[5,3],4],[[7,3],4],[[9,3],4],[[11,3],4],[[13,3],4],[[15,3],4],[[17,3],4],[[19,3],4],[[21,3],4],[[23,3],4],[[25,3],4],[28,27],[[],[[29,[-1]]],[]],[2,1],[6,5],[8,7],[10,9],[12,11],[14,13],[16,15],[18,17],[20,19],[22,21],[24,23],[26,25],[[27,3],4],[[1,3],4],[[5,3],4],[[7,3],4],[[9,3],4],[[11,3],4],[[13,3],4],[[15,3],4],[[17,3],4],[[19,3],4],[[21,3],4],[[23,3],4],[[25,3],4],[[27,28,3],4],[[1,2,3],4],[[5,6,3],4],[[7,8,3],4],[[9,10,3],4],[[11,12,3],4],[[13,14,3],4],[[15,16,3],4],[[17,18,3],4],[[19,20,3],4],[[21,22,3],4],[[23,24,3],4],[[25,26,3],4],[[27,28,3],4],[[[29,[-1]],3],4,[]],[[1,2,3],4],[[5,6,3],4],[[7,8,3],4],[[9,10,3],4],[[11,12,3],4],[[13,14,3],4],[[15,16,3],4],[[17,18,3],4],[[19,20,3],4],[[21,22,3],4],[[23,24,3],4],[[25,26,3],4],[[1,2,3],4],[[5,6,3],4],[[7,8,3],4],[[9,10,3],4],[[11,12,3],4],[[13,14,3],4],[[15,16,3],4],[[17,18,3],4],[[19,20,3],4],[[21,22,3],4],[[23,24,3],4],[[25,26,3],4],[[27,28,3],28],[[[29,[-1]],3],[],[]],[[1,2,3],2],[[5,6,3],6],[[7,8,3],8],[[9,10,3],10],[[11,12,3],12],[[13,14,3],14],[[15,16,3],16],[[17,18,3],18],[[19,20,3],20],[[21,22,3],22],[[23,24,3],24],[[25,26,3],26],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[27,28,3],4],[[1,2,3],4],[[5,6,3],4],[[7,8,3],4],[[9,10,3],4],[[11,12,3],4],[[13,14,3],4],[[15,16,3],4],[[17,18,3],4],[[19,20,3],4],[[21,22,3],4],[[23,24,3],4],[[25,26,3],4],[[],4]],"c":[],"p":[[5,"AtomicIsize",0],[1,"isize"],[6,"Ordering",615],[1,"tuple"],[5,"AtomicUsize",0],[1,"usize"],[5,"AtomicI8",0],[1,"i8"],[5,"AtomicU8",0],[1,"u8"],[5,"AtomicI16",0],[1,"i16"],[5,"AtomicU16",0],[1,"u16"],[5,"AtomicI32",0],[1,"i32"],[5,"AtomicU32",0],[1,"u32"],[5,"AtomicI64",0],[1,"i64"],[5,"AtomicU64",0],[1,"u64"],[5,"AtomicI128",0],[1,"i128"],[5,"AtomicU128",0],[1,"u128"],[5,"AtomicBool",0],[1,"bool"],[5,"AtomicPtr",0],[6,"Result",616],[17,"Output"],[6,"Option",617],[10,"FnMut",618],[5,"Formatter",619],[8,"Result",619],[5,"TypeId",620]],"b":[[326,"impl-Debug-for-AtomicPtr%3CT%3E"],[327,"impl-Pointer-for-AtomicPtr%3CT%3E"]]}],\
["proc_macro2",{"doc":"github crates-io docs-rs","t":"PPPGFPFPPFFPPPFPGFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNFENNNNNNNNNNNNNN","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[228,"proc_macro2::extra"],[243,"proc_macro2::token_stream"],[259,"core::cmp"],[260,"core::marker"],[261,"core::convert"],[262,"core::iter::traits::collect"],[263,"core::fmt"],[264,"core::fmt"],[265,"proc_macro"],[266,"core::hash"],[267,"core::option"],[268,"alloc::string"],[269,"core::ops::range"],[270,"core::any"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,24,7,6,8,9,10,1,11,12,5,24,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,7,7,0,5,5,5,5,24,24,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,24,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,24,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,6,8,9,1,12,5,6,1,24,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,24,7,8,9,1,12,5,0,24,7,6,8,9,10,1,11,12,5,24,7,6,8,9,10,1,11,12,5,24,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[12,12],14],[[],7],[9,15],[9,10],[[10,10],16],[[11,11],16],[[12,12],16],[[12,-1],16,[17,[19,[18]]]],[[7,-1],13,[[21,[],[[20,[7]]]]]],[[7,-1],13,[[21,[],[[20,[8]]]]]],0,[22,5],[22,5],[23,5],[23,5],[[24,25],26],[[24,25],26],[[7,25],26],[[7,25],26],[[6,25],26],[[8,25],26],[[8,25],26],[[9,25],26],[[9,25],26],[[10,25],26],[[1,25],26],[[1,25],26],[[11,25],26],[[12,25],26],[[12,25],26],[[5,25],26],[[5,25],26],[-1,-1,[]],[27,7],[-1,-1,[]],[8,7],[-1,-1,[]],[28,6],[1,8],[-1,-1,[]],[12,8],[5,8],[9,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,[[21,[],[[20,[7]]]]]],[-1,7,[[21,[],[[20,[8]]]]]],[18,[[29,[7,24]]]],[18,[[29,[5,24]]]],[[12,-1],13,30],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[34,5],[34,5],[35,5],[35,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,36],[7,16],[37,5],[37,5],[[6,6],[[38,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[18,6],12],[[18,6],12],[[12,12],[[38,[14]]]],[[6,6],6],[[8,6],13],[[9,6],13],[[1,6],13],[[12,6],13],[[5,6],13],[6,[[38,[39]]]],[1,11],[24,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[18,5],[[5,-1],[[38,[6]]],[[41,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],0,[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[43,5],[43,5],[44,5],[44,5],[45,5],[45,5],[46,5],[46,5],[3,5],[3,5],[6,28],[40,5],[40,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],13,[],[]],[15,6],[[15,25],26],[-1,-1,[]],[-1,-2,[],[]],[15,6],[15,6],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],13,[],[]],[[36,25],26],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,[[38,[8]]]],[36,[[13,[40,[38,[40]]]]]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,42,[]]],"c":[],"p":[[5,"Punct",0],[1,"char"],[1,"u8"],[1,"slice"],[5,"Literal",0],[5,"Span",0],[5,"TokenStream",0],[6,"TokenTree",0],[5,"Group",0],[6,"Delimiter",0],[6,"Spacing",0],[5,"Ident",0],[1,"tuple"],[6,"Ordering",259],[5,"DelimSpan",228],[1,"bool"],[10,"Sized",260],[1,"str"],[10,"AsRef",261],[17,"Item"],[10,"IntoIterator",262],[1,"f32"],[1,"f64"],[5,"LexError",0],[5,"Formatter",263],[8,"Result",263],[5,"TokenStream",264],[5,"Span",264],[6,"Result",265],[10,"Hasher",266],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[5,"IntoIter",243],[1,"isize"],[6,"Option",267],[5,"String",268],[1,"usize"],[10,"RangeBounds",269],[5,"TypeId",270],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"]],"b":[[68,"impl-PartialEq-for-Ident"],[69,"impl-PartialEq%3CT%3E-for-Ident"],[70,"impl-Extend%3CTokenStream%3E-for-TokenStream"],[71,"impl-Extend%3CTokenTree%3E-for-TokenStream"],[77,"impl-Display-for-LexError"],[78,"impl-Debug-for-LexError"],[79,"impl-Debug-for-TokenStream"],[80,"impl-Display-for-TokenStream"],[82,"impl-Display-for-TokenTree"],[83,"impl-Debug-for-TokenTree"],[84,"impl-Debug-for-Group"],[85,"impl-Display-for-Group"],[87,"impl-Display-for-Punct"],[88,"impl-Debug-for-Punct"],[90,"impl-Display-for-Ident"],[91,"impl-Debug-for-Ident"],[92,"impl-Display-for-Literal"],[93,"impl-Debug-for-Literal"],[95,"impl-From%3CTokenStream%3E-for-TokenStream"],[97,"impl-From%3CTokenTree%3E-for-TokenStream"],[100,"impl-From%3CPunct%3E-for-TokenTree"],[102,"impl-From%3CIdent%3E-for-TokenTree"],[103,"impl-From%3CLiteral%3E-for-TokenTree"],[104,"impl-From%3CGroup%3E-for-TokenTree"],[111,"impl-FromIterator%3CTokenStream%3E-for-TokenStream"],[112,"impl-FromIterator%3CTokenTree%3E-for-TokenStream"]]}],\
["ptah",{"doc":"","t":"FEEEIIEEKNNCNHHNHNMNCHHNNNMNKKFPPGPPPPPPPIPNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGFPIFKFPPNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["CursorWriter","Deserialize","DeserializeOwned","Deserializer","Handle","HandleSlot","Serialize","Serializer","Writer","borrow","borrow_mut","de","from","from_wire","index_from_handle_slot","into","make_handle_slot","new","push_handle","push_handle","ser","serialized_size","to_wire","try_from","try_into","type_id","write","write","Deserialize","DeserializeOwned","Deserializer","EndOfStream","Err","Error","InvalidBoolMarker","InvalidChar","InvalidEnumTag","InvalidHandleSlot","InvalidOptionMarker","InvalidUtf8","Ok","Result","TrailingBytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize_bool","deserialize_char","deserialize_enum_tag","deserialize_f32","deserialize_f64","deserialize_handle","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_map_length","deserialize_option","deserialize_seq_length","deserialize_str","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","eq","fmt","from","from","from_wire","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Err","Error","MapSerializer","Ok","Result","SeqSerializer","Serialize","Serializer","WriterFullOfBytes","WriterFullOfHandles","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","from","from","into","into","into","into","new","serialize","serialize_bool","serialize_char","serialize_element","serialize_enum_variant","serialize_f32","serialize_f64","serialize_handle","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_map","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_value","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"ptah"],[28,"ptah::de"],[84,"ptah::ser"],[153,"core::result"],[154,"core::any"],[155,"core::option"],[156,"core::marker"],[157,"core::fmt"],[158,"core::fmt"]],"d":["This is a <code>Writer</code> that can be used to serialize a value …","","","","","","","","A <code>Writer</code> represents a consumer of the bytes produced by …","","","","Returns the argument unchanged.","Deserialize a <code>T</code> from some bytes and, optionally, some …","","Calls <code>U::from(self)</code>.","","","","","","It can sometimes be useful to know the size of a value in …","","","","","","","","A type implements <code>DeserializeOwned</code> if it does not borrow …","","","Contains the error value","Errors that can occur during deserialization.","","","","","","","Contains the success value","","","","","","","","","","","","Start deserializing an <code>enum</code>. Any data contained should be …","","","","","","","","","Start deserializing a <code>map</code>. Returns the number of elements …","","Start deserializing a <code>seq</code>. Returns the number of elements …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Contains the error value","Errors that can occur during serialization.","","Contains the success value","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Start serializing an enum - this encodes the tag that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,7,7,0,7,0,0,7,0,7,8,7,0,0,0,7,7,7,8,7,0,0,0,15,4,0,15,15,15,15,15,15,4,0,15,16,15,16,15,15,15,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,16,15,16,16,15,15,16,15,16,15,16,15,9,0,0,9,0,0,0,0,35,35,36,37,38,35,36,37,38,35,35,35,35,35,36,37,38,35,36,37,38,35,36,11,36,36,37,36,36,36,36,36,36,36,36,36,38,36,36,36,36,36,36,36,36,36,36,38,35,36,37,38,35,36,37,38,35,36,37,38,35],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[[[2,[1]],[2,[3]]],[[4,[-1]]],5],[6,1],[-1,-2,[],[]],[1,6],[[[2,[1]]],7],[[8,3],[[9,[6]]]],[[7,3],[[9,[6]]]],0,[-1,[[9,[10]]],11],[[-1,-2],[[9,[12]]],11,8],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[[8,[2,[1]]],[[9,[12]]]],[[7,[2,[1]]],[[9,[12]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],12,[],[]],[16,[[4,[5]]]],[16,[[4,[17]]]],[16,[[4,[18]]]],[16,[[4,[19]]]],[16,[[4,[20]]]],[16,[[4,[21]]]],[16,[[4,[3]]]],[16,[[4,[22]]]],[16,[[4,[23]]]],[16,[[4,[24]]]],[16,[[4,[25]]]],[16,[[4,[26]]]],[16,[[4,[19]]]],[16,[[4,[[27,[-1]]]]],[28,5]],[16,[[4,[19]]]],[16,[[4,[29]]]],[16,[[4,[30]]]],[16,[[4,[31]]]],[16,[[4,[19]]]],[16,[[4,[32]]]],[16,[[4,[1]]]],[[15,15],17],[[15,33],34],[-1,-1,[]],[-1,-1,[]],[[[2,[1]],[2,[3]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[-1,-2],12,[],[]],[[35,35],17],[[35,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[36,[-1]]],8],[[11,[36,[-1]]],[[9,[12]]],8],[[[36,[-1]],17],[[9,[12]]],8],[[[36,[-1]],18],[[9,[12]]],8],[[[37,[-1]],-2],[[9,[12]]],8,[28,11]],[[[36,[-1]],19],[[9,[12]]],8],[[[36,[-1]],20],[[9,[12]]],8],[[[36,[-1]],21],[[9,[12]]],8],[[[36,[-1]],3],[[9,[12]]],8],[[[36,[-1]],22],[[9,[12]]],8],[[[36,[-1]],23],[[9,[12]]],8],[[[36,[-1]],24],[[9,[12]]],8],[[[36,[-1]],25],[[9,[12]]],8],[[[36,[-1]],26],[[9,[12]]],8],[[[38,[-1]],-2],[[9,[12]]],8,[28,11]],[[[36,[-1]],19],[[9,[[38,[-1]]]]],8],[[[36,[-1]]],[[9,[12]]],8],[[[36,[-1]],19],[[9,[[37,[-1]]]]],8],[[[36,[-1]],-2],[[9,[12]]],8,[28,11]],[[[36,[-1]],29],[[9,[12]]],8],[[[36,[-1]],30],[[9,[12]]],8],[[[36,[-1]],31],[[9,[12]]],8],[[[36,[-1]],19],[[9,[12]]],8],[[[36,[-1]],32],[[9,[12]]],8],[[[36,[-1]],1],[[9,[12]]],8],[[[38,[-1]],-2],[[9,[12]]],8,[28,11]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]]],"c":[],"p":[[1,"u8"],[1,"slice"],[8,"Handle",0],[8,"Result",28],[10,"Deserialize",28],[8,"HandleSlot",0],[5,"CursorWriter",0],[10,"Writer",0],[8,"Result",84],[1,"usize"],[10,"Serialize",84],[1,"tuple"],[6,"Result",153],[5,"TypeId",154],[6,"Error",28],[5,"Deserializer",28],[1,"bool"],[1,"char"],[1,"u32"],[1,"f32"],[1,"f64"],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[6,"Option",155],[10,"Sized",156],[1,"str"],[1,"u128"],[1,"u16"],[1,"u64"],[5,"Formatter",157],[8,"Result",157],[6,"Error",84],[5,"Serializer",84],[5,"SeqSerializer",84],[5,"MapSerializer",84]],"b":[]}],\
["ptah_derive",{"doc":"","t":"YY","n":["Deserialize","Serialize"],"q":[[0,"ptah_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]}],\
["quote",{"doc":"github crates-io docs-rs","t":"KKKMMMMMQNNQQNNNNM","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"],[18,"proc_macro2"],[19,"core::convert"],[20,"core::iter::traits::collect"],[21,"core::fmt"],[22,"core::fmt"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,1,1,1,1,7,0,6,6,0,0,7,7,6,6,6],"f":[0,0,0,[[1,-1],2,[[4,[3]]]],[[1,-1],2,5],[[1,-1,-2],2,5,6],[[1,-1,-2],2,5,6],[[7,8],9],0,[6,10],[6,10],0,0,[7,[[12,[11]]]],[7,[[12,[11]]]],[6,10],[6,10],[[6,10],2]],"c":[],"p":[[10,"TokenStreamExt",0],[1,"tuple"],[6,"TokenTree",18],[10,"Into",19],[10,"IntoIterator",20],[10,"ToTokens",0],[10,"IdentFragment",0],[5,"Formatter",21],[8,"Result",21],[5,"TokenStream",18],[5,"Span",18],[6,"Option",22]],"b":[]}],\
["scopeguard",{"doc":"A scope guard will run a given closure when it goes out of …","t":"GFKNNNNQNNNNNNNHNNNMNNNNNNNN","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"],[28,"core::ops::function"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,8,1,8,0,1,1,1,1,8,1,8,0,1,8,1,3,8,1,8,1,8,1,8,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1,[-1,-2,-3]]],-1,[],[[2,[-1]]],3],[[[1,[-1,-2,-3]]],-1,[],[[2,[-1]]],3],[[[1,[-1,-2,-3]]],4,[],[[2,[-1]]],3],[[[1,[-1,-2,-3]],5],6,7,[[2,[-1]]],3],[[8,5],6],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[1,[-1,-2,8]]],[],[[2,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2,-3]]],-1,[],[[2,[-1]]],3],[[],9],[[],9],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[-1,-2],[[1,[-1,-2,-3]]],[],[[2,[-1]]],3]],"c":[],"p":[[5,"ScopeGuard",0],[10,"FnOnce",28],[10,"Strategy",0],[1,"tuple"],[5,"Formatter",29],[8,"Result",29],[10,"Debug",29],[6,"Always",0],[1,"bool"],[6,"Result",30],[5,"TypeId",31]],"b":[]}],\
["seed",{"doc":"","t":"CCPSPFPPPPPFPPSSSSSIFGGPFFNNNNNNNNNNNNNNNONNNNNNNNNNNONNOONNNNNNNNONNNNNNNOOONNNNNNNOOOOONOOOOOOOONNNNNNNNNNNNNNONNNNNNNOOOTTFFNNNNNNNNNONONOOOONNNNNN","n":["boot_info","ramdisk","AcpiReclaimable","BOOT_INFO_MAGIC","Bgr32","BootInfo","BootInfo","Conventional","FdtReclaimable","KernelHeap","KernelPageTables","LoadedImage","LoadedImage","Loader","MAX_CAPABILITY_STREAM_LENGTH","MAX_IMAGE_LOADED_SEGMENTS","MAX_IMAGE_NAME_LENGTH","MAX_LOADED_IMAGES","MAX_MEMORY_MAP_ENTRIES","MemoryMap","MemoryMapEntry","MemoryType","PixelFormat","Rgb32","Segment","VideoModeInfo","address_range","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capability_stream","clone","clone","clone","clone","clone","clone","default","default","default","default","default","entry_point","eq","eq","fdt_address","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_range","framebuffer_address","from","from","from","from","from","from","from","heap_address","heap_size","height","into","into","into","into","into","into","into","loaded_images","magic","master_tls","memory_map","name","new","physical_address","pixel_format","rsdp_address","segments","size","size","start","stride","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","video_mode","virtual_address","width","MAGIC","NAME_LENGTH","RamdiskEntry","RamdiskHeader","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","magic","name","name","new","num_entries","offset","size","size","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"seed"],[2,"seed::boot_info"],[123,"seed::ramdisk"],[150,"hal::memory::physical_address"],[151,"core::ops::range"],[152,"core::fmt"],[153,"core::fmt"],[154,"hal::memory"],[155,"core::result"],[156,"core::any"]],"d":["The “boot info” refers to a data structure passed from …","","Memory that contains ACPI tables. After the OS has …","","Each pixel is represented by 4 bytes, with the layout: |…","","Memory that is occupied by the boot info constructed by …","Memory that can be used freely by the kernel.","Memory that contains the Flattened Device Tree (FDT). …","Memory that has been mapped for the kernel heap.","Memory that is occupied by page tables created by the …","Describes an image loaded from the filesystem by the …","Memory occupied by images that the loader has been asked …","Memory that the loader maps into the kernel address space. …","","","","","","","","","","Each pixel is represented by 4 bytes, with the layout: |…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The virtual address at which to start executing the image.","","","The physical address of the device tree, if one is present.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Map of available memory that the kernel. This only …","","","","","The physical address of the RSDP, the first ACPI table, if …","","","","","The number of pixels in each scan-line. May be greater …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a file held in the ramdisk.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The UTF-8 encoded name of the file. Must be …","","","","The total size of the ramdisk, including this header, the …","","","","","","",""],"i":[0,0,4,0,8,0,4,4,4,4,4,0,4,4,0,0,0,0,0,0,0,0,0,8,0,0,1,9,4,1,5,6,7,8,9,4,1,5,6,7,8,5,4,1,5,6,7,8,9,4,1,5,6,5,4,8,9,6,9,4,1,5,6,7,8,1,7,9,4,1,5,6,7,8,9,9,7,9,4,1,5,6,7,8,9,9,5,9,5,1,6,7,9,5,1,6,1,7,9,4,1,5,6,7,8,9,4,1,5,6,7,8,1,9,4,1,5,6,7,8,9,6,7,21,17,0,0,21,17,21,17,17,21,17,21,17,21,17,17,17,21,17,21,17,21,17,21,17,21,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,4],[1,1],[5,5],[6,6],[7,7],[8,8],[[],9],[[],4],[[],1],[[],5],[[],6],0,[[4,4],10],[[8,8],10],0,0,[[9,11],12],[[4,11],12],[[1,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[8,11],12],[1,[[3,[13]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[4,2,14],1],0,0,0,0,0,0,0,0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[17,[[15,[18,19]]]],0,[[18,20,20],[[15,[17,19]]]],0,0,0,0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]]],"c":[],"p":[[5,"MemoryMapEntry",2],[5,"PAddr",150],[5,"Range",151],[6,"MemoryType",2],[5,"LoadedImage",2],[5,"Segment",2],[5,"VideoModeInfo",2],[6,"PixelFormat",2],[5,"BootInfo",2],[1,"bool"],[5,"Formatter",152],[8,"Result",152],[5,"Frame",153],[8,"Bytes",154],[6,"Result",155],[5,"TypeId",156],[5,"RamdiskEntry",123],[1,"str"],[1,"tuple"],[1,"u32"],[5,"RamdiskHeader",123]],"b":[]}],\
["spinning_top",{"doc":"Provides simple spinlocks based on the abstractions …","t":"IIFFIINNNNNNNNNNNCNNNNNNENNNNCNNNNNNNNNNNNNNNNNIIIIIIIIIIFKFNNNNNNNNNNNNMNNNNNNNN","n":["BackoffRwSpinlock","BackoffSpinlock","RawRwSpinlock","RawSpinlock","RwSpinlock","Spinlock","borrow","borrow","borrow_mut","borrow_mut","downgrade","downgrade_to_upgradable","downgrade_upgradable","fmt","fmt","from","from","guard","into","into","is_locked","is_locked","is_locked_exclusive","lock","lock_api","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","relax","try_from","try_from","try_into","try_into","try_lock","try_lock_exclusive","try_lock_shared","try_lock_shared_recursive","try_lock_upgradable","try_upgrade","type_id","type_id","unlock","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","BackoffRwSpinlockReadGuard","BackoffRwSpinlockUpgradableReadGuard","BackoffRwSpinlockWriteGuard","BackoffSpinlockGuard","MappedBackoffSpinlockGuard","MappedSpinlockGuard","RwSpinlockReadGuard","RwSpinlockUpgradableReadGuard","RwSpinlockWriteGuard","SpinlockGuard","Backoff","Relax","Spin","borrow","borrow","borrow_mut","borrow_mut","default","default","fmt","fmt","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"spinning_top"],[47,"spinning_top::guard"],[57,"spinning_top::relax"],[81,"core::fmt"],[82,"core::fmt"],[83,"core::any"]],"d":["A <code>lock_api::RwLock</code> based on <code>RawRwSpinlock</code><code>&lt;</code><code>Backoff</code><code>&gt;</code>.","A mutual exclusion (Mutex) type based on busy-waiting with …","A simple, spinning, read-preferring readers-writer lock.","Provides mutual exclusion based on spinning on an …","A <code>lock_api::RwLock</code> based on <code>RawRwSpinlock</code>.","A mutual exclusion (Mutex) type based on busy-waiting.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Type aliases for guards.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The spinlock implemenation is based on the abstractions …","","","","","Relax strategies.","","","","","","","","","","","","","","","","","","A <code>lock_api::RwLockReadGuard</code> based on <code>RawRwSpinlock</code><code>&lt;</code><code>Backoff</code><code>&gt;</code>…","A <code>lock_api::RwLockUpgradableReadGuard</code> based on …","A <code>lock_api::RwLockWriteGuard</code> based on <code>RawRwSpinlock</code><code>&lt;</code><code>Backoff</code>…","A RAII guard that frees the exponential backoff spinlock …","A RAII guard returned by <code>BackoffSpinlockGuard::map</code>.","A RAII guard returned by <code>SpinlockGuard::map</code>.","A <code>lock_api::RwLockReadGuard</code> based on <code>RawRwSpinlock</code>.","A <code>lock_api::RwLockUpgradableReadGuard</code> based on …","A <code>lock_api::RwLockWriteGuard</code> based on <code>RawRwSpinlock</code>.","A RAII guard that frees the spinlock when it goes out of …","Exponential backoff.","A relax strategy.","Rapid spinning.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Relaxes the current thread.","","","","","","","",""],"i":[0,0,0,0,0,0,1,7,1,7,1,1,1,1,7,1,7,0,1,7,1,7,1,7,0,1,1,1,1,0,1,7,1,7,7,1,1,1,1,1,1,7,7,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,11,12,11,12,11,12,11,12,11,12,11,12,3,11,12,11,12,11,12,11,12],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]],4],5,[6,3]],[[[7,[-1]],4],5,[6,3]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],8,3],[[[7,[-1]]],8,3],[[[1,[-1]]],8,3],[[[7,[-1]]],2,3],0,[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[7,[-1]]],8,3],[[[1,[-1]]],8,3],[[[1,[-1]]],8,3],[[[1,[-1]]],8,3],[[[1,[-1]]],8,3],[[[1,[-1]]],8,3],[-1,10,[]],[-1,10,[]],[[[7,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],[[[1,[-1]]],2,3],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],12],[[11,4],5],[[12,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,2],[11,2],[12,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]]],"c":[],"p":[[5,"RawRwSpinlock",0],[1,"tuple"],[10,"Relax",57],[5,"Formatter",81],[8,"Result",81],[10,"Debug",81],[5,"RawSpinlock",0],[1,"bool"],[6,"Result",82],[5,"TypeId",83],[5,"Spin",57],[5,"Backoff",57]],"b":[]}],\
["stable_deref_trait",{"doc":"This module defines an unsafe marker trait, StableDeref, …","t":"KK","n":["CloneStableDeref","StableDeref"],"q":[[0,"stable_deref_trait"]],"d":["An unsafe marker trait for types where clones deref to the …","An unsafe marker trait for types that deref to a stable …"],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]}],\
["tracing",{"doc":"A scoped, structured logging and diagnostics system.","t":"KTFTFTKFFFTKTNNNNNNNNNNNNNNNNCMNQQNCNNNNNNNNNNMNQMNNNNNQQCMNQNQMNCNNNNNNNNNNNNNNNNNNNNNNQQCNXNNNNNNNNNNNNNNCNNNNNNNMNNNNNMMNMNNNCQQNQQNNNNNNNNNNNNNNQQKFFFNNNNNNNNMNNNNMNMNMNNMNNNNNNNNNNNNNMNNMNMNNNNNNNNNNNFFFNNNNNNNNNNHNNHNNNNNNNFNNNNNNNNNNNNNNNNNNKFFFFFFKFKMNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNNNNNNNNNNTTTFTFSTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFFFFFFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Collect","DEBUG","Dispatch","ERROR","Event","INFO","Instrument","Level","Metadata","Span","TRACE","Value","WARN","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone","clone_span","clone_span","cmp","collect","current_span","current_span","debug","debug_span","default","dispatch","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downcast_ref","downgrade","drop","drop_span","drop_span","enabled","enabled","enabled","enter","enter","eq","eq","eq","eq","error","error_span","event","event","event","event","event_enabled","event_enabled","exit","exit","field","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_static","from_str","ge","ge","gt","gt","hash","hash","in_current_span","info","info_span","instrument","instrument","instrument","into","into","into","into","is","is","is","is","is","is_event","is_span","le","le","level","level_filters","line","lt","lt","max_level_hint","module_path","name","new","new_span","new_span","none","on_register_dispatch","partial_cmp","partial_cmp","record","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","span","span","span_enabled","target","trace","trace_span","try_close","try_close","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","warn","warn_span","Collect","Interest","NoCollector","SetGlobalDefaultError","always","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_span","current_span","current_span","default","downcast_raw","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","from","from","into","into","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","sometimes","try_close","try_from","try_from","try_into","try_into","type_id","type_id","Dispatch","SetGlobalDefaultError","WeakDispatch","borrow","borrow","borrow_mut","borrow_mut","clone","fmt","fmt","fmt","from","from","get_default","into","into","set_global_default","try_from","try_from","try_into","try_into","type_id","type_id","upgrade","Event","borrow","borrow_mut","child_of","dispatch","fields","fmt","from","into","is_contextual","is_root","metadata","new","new_child_of","parent","record","try_from","try_into","type_id","AsField","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","as_field","as_field","as_field","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","clone","contains","debug","display","eq","eq","eq","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Instrument","Instrumented","borrow","borrow_mut","clone","drop","fmt","from","in_current_span","inner","inner_mut","inner_pin_mut","inner_pin_ref","instrument","into","into_future","into_inner","poll","span","span_mut","try_from","try_into","type_id","DEBUG","ERROR","INFO","LevelFilter","OFF","ParseLevelFilterError","STATIC_MAX_LEVEL","TRACE","WARN","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","current","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_level","from_str","ge","ge","gt","gt","hash","into","into","into_level","le","le","lt","lt","partial_cmp","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","as_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","child_of","clone","contains","contains","current","deref","drop","drop","enter","entered","eq","exit","field","fields","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from_non_zero_u64","from_u64","has_field","hash","id","id","in_scope","into","into","into","into","into","into_non_zero_u64","into_u64","is_contextual","is_disabled","is_empty","is_empty","is_none","is_root","len","metadata","metadata","new","new","new","new_disabled","new_root","new_root","none","or_current","parent","record","record","record","record_all","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","with_collector"],"q":[[0,"tracing"],[150,"tracing::collect"],[205,"tracing::dispatch"],[229,"tracing::event"],[248,"tracing::field"],[358,"tracing::instrument"],[381,"tracing::level_filters"],[430,"tracing::span"],[527,"tracing_core::callsite"],[528,"core::cmp"],[529,"tracing_core::span"],[530,"core::any"],[531,"core::ptr::non_null"],[532,"core::option"],[533,"core::any"],[534,"core::fmt"],[535,"core::fmt"],[536,"core::hash"],[537,"tracing_core::metadata"],[538,"core::convert"],[539,"core::clone"],[540,"core::fmt"],[541,"core::marker"],[542,"core::pin"],[543,"core::task::wake"],[544,"core::task::poll"],[545,"core::future::future"],[546,"core::num::nonzero"],[547,"core::ops::function"]],"d":["Trait representing the functions required to collect trace …","The “debug” level.","<code>Dispatch</code> trace data to a <code>Collect</code>.","The “error” level.","<code>Event</code>s represent single points in time where something …","The “info” level.","Attaches spans to a [<code>std::future::Future</code>].","Describes the level of verbosity of a span or event.","Metadata describing a span or event.","A handle representing a span, with the capability to enter …","The “trace” level.","A field value of an erased type.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","","Notifies the collector that a span ID has been cloned.","Notifies the collector that a span ID has been cloned.","","Collects and records trace data.","Returns a type representing this collector’s view of the …","Returns a type representing this collector’s view of the …","Constructs an event at the debug level.","Constructs a span at the debug level.","Returns the current default dispatcher","Dispatches trace events to a <code>Collect</code>.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to the <code>Collect</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","","<strong>This method is deprecated.</strong>","Notifies the collector that a span ID has been dropped.","Returns true if a span or event with the specified metadata…","Returns true if a span with the specified metadata would be","Checks whether a span or event is enabled based on the …","Records that a span has been entered.","Records that a span has been can_enter.","","","","","Constructs an event at the error level.","Constructs a span at the error level.","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Records that an <code>Event</code> has occurred.","Constructs a new <code>Event</code>.","Determine if an <code>Event</code> should be recorded.","Tests whether an event with the specified level and target …","Records that a span has been exited.","Records that a span has been exited.","Structured data associated with <code>Span</code>s and <code>Event</code>s.","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Dispatch</code> that forwards to the given static …","","","","","","","","Instruments this type with the current <code>Span</code>, returning an …","Constructs an event at the info level.","Constructs a span at the info level.","Attach a span to a <code>std::future::Future</code>.","Instruments this type with the provided <code>Span</code>, returning an …","Instruments a function to create and enter a <code>tracing</code> span …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a collector of …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Span</code>.","","","Returns the level of verbosity of the described span or …","Trace verbosity level filtering.","Returns the line number in the source code file where the …","","","Returns the highest verbosity level that this <code>Collector</code> …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Visit the construction of a new span, returning a new span …","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Invoked when this collector becomes a <code>Dispatch</code>.","","","Record a set of values on a span.","Visits this value with the given <code>Visitor</code>.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Registers a new callsite with this collector, returning …","Spans represent periods of time in which a program was …","Constructs a new span.","Tests whether a span with the specified level and target …","Returns a string describing the part of the system where …","Constructs an event at the trace level.","Constructs a span at the trace level.","Notifies the collector that a <code>span ID</code> has been dropped, …","Notifies the collector that a span ID has been dropped, …","","","","","","","","","","","","","Constructs an event at the warn level.","Constructs a span at the warn level.","Trait representing the functions required to collect trace …","Indicates a <code>Collect</code>’s interest in a particular callsite.","A no-op collector.","Returned if setting the global dispatcher fails.","Returns an <code>Interest</code> indicating the collector is always …","","","","","","","Notifies the collector that a span ID has been cloned.","Returns a type representing this collector’s view of the …","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the collector is always interested in …","Returns <code>true</code> if the collector is never interested in being …","Returns <code>true</code> if the collector is sometimes interested in …","Returns the highest verbosity level that this <code>Collector</code> …","Returns an <code>Interest</code> indicating that the collector is never …","Returns a new <code>NoCollector</code> instance.","Visit the construction of a new span, returning a new span …","","Invoked when this collector becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this collector, returning …","","Returns an <code>Interest</code> indicating the collector is sometimes …","Notifies the collector that a <code>span ID</code> has been dropped, …","","","","","","","<code>Dispatch</code> trace data to a <code>Collect</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Executes a closure with a reference to the current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets this dispatch as the global default for the duration …","","","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","<code>Event</code>s represent single points in time where something …","","","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","","","","Trait implemented to allow a type to be used as a field …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","Attempts to convert <code>&amp;self</code> into a <code>Field</code> with the specified …","","","","","","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","","","","Attaches spans to a [<code>std::future::Future</code>].","A <code>Future</code> that has been instrumented with a <code>tracing</code> <code>Span</code>.","","","","","","Returns the argument unchanged.","Instruments this type with the current <code>Span</code>, returning an …","Borrows the wrapped type.","Mutably borrows the wrapped type.","Get a pinned mutable reference to the wrapped type.","Get a pinned reference to the wrapped type.","Instruments this type with the provided <code>Span</code>, returning an …","Calls <code>U::from(self)</code>.","","Consumes the <code>Instrumented</code>, returning the wrapped type.","","Borrows the <code>Span</code> that this type is instrumented by.","Mutably borrows the <code>Span</code> that this type is instrumented by.","","","","The “debug” level.","The “error” level.","The “info” level.","A filter comparable to a verbosity <code>Level</code>.","The “off” level.","Indicates that a string could not be parsed to a valid …","The statically configured maximum trace level.","The “trace” level.","The “warn” level.","","","","","","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","","","","","","","","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a collector describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a collector.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","","","Constructs a new <code>Span</code> as child of the given parent span, …","Returns <code>Attributes</code> describing a new child span of the …","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","Returns a handle to the span considered by the <code>Collector</code> …","","","","Enters this span, returning a guard that will exit the …","Enters this span, consuming it and returning a guard that …","","Exits this span, returning the underlying <code>Span</code>.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the set of all fields defined by this span’s …","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","Returns this span’s <code>Id</code>, if it is enabled.","Returns this span’s <code>Id</code>, if it is enabled.","Executes the given function in the context of this span.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns <code>true</code> if this span was disabled by the collector …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns this span’s <code>Metadata</code>, if it is enabled.","Returns a reference to the new span’s metadata.","Constructs a new <code>Span</code> with the given metadata and set of …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new span that is <em>completely disabled</em>.","Returns this span, if it was enabled by the current …","Returns the new span’s explicitly-specified parent, if …","Records that the field described by <code>field</code> has the value …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","Records all the fields in the provided <code>ValueSet</code>.","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","Invokes a function with a reference to this span’s ID …"],"i":[0,1,0,1,0,1,0,0,0,0,1,0,1,1,5,3,6,1,5,3,6,1,3,5,6,1,7,6,1,0,7,6,0,0,6,0,7,7,7,7,7,6,6,5,7,6,7,6,0,7,6,5,3,1,1,0,0,0,7,6,0,7,0,7,6,0,3,3,21,21,5,3,6,1,1,5,3,6,1,6,1,1,1,1,1,5,1,28,0,0,0,28,0,5,3,6,1,7,7,7,7,6,3,3,1,1,3,0,3,1,1,7,3,3,3,7,6,6,7,1,1,7,21,6,7,6,7,6,0,0,0,3,0,0,7,6,5,3,6,1,5,3,6,1,5,3,6,1,0,0,0,0,0,0,36,36,37,36,37,36,37,7,7,37,37,7,7,7,37,7,37,7,37,7,7,37,36,37,36,37,36,37,36,36,36,7,36,37,7,37,7,7,37,7,37,7,37,36,7,36,37,36,37,36,37,0,0,0,38,16,38,16,16,38,38,16,38,16,0,38,16,0,38,16,38,16,38,16,16,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,44,34,34,34,20,41,34,50,43,45,48,20,41,34,50,43,45,48,41,34,34,45,48,20,0,0,20,34,50,20,20,20,41,41,34,34,50,43,45,45,48,20,41,34,50,43,45,48,34,20,41,34,50,43,45,48,20,43,20,41,20,20,41,34,20,43,21,41,50,45,48,35,35,35,35,35,35,35,35,20,41,34,50,43,45,48,20,41,34,50,43,45,48,20,41,34,50,43,45,48,0,0,29,29,29,29,29,29,28,29,29,29,29,28,29,29,29,29,29,29,29,29,29,18,18,18,0,18,0,0,18,18,18,64,18,64,18,64,18,18,18,18,18,18,64,64,18,18,18,64,18,18,18,18,18,18,18,18,64,18,18,18,18,18,18,18,18,64,18,64,18,64,0,0,0,0,0,0,0,65,67,66,8,32,33,67,66,8,32,33,5,32,8,32,33,5,66,67,66,5,5,8,66,5,32,67,66,8,32,33,5,67,66,8,32,33,8,8,5,8,5,66,5,67,66,8,32,33,8,8,32,5,32,33,5,32,33,5,32,5,32,33,5,5,32,5,5,32,5,32,33,5,67,66,8,32,33,67,66,8,32,33,67,66,8,32,33,32,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[5,5],[6,6],[1,1],[[7,8],8],[[6,8],8],[[1,1],9],0,[7,10],[6,10],0,0,[[],6],0,[[7,11],[[14,[[13,[12]]]]]],[7,[[14,[-1]]],15],[7,[[14,[-1]]],15],[7,[[14,[-1]]],15],[7,[[14,[-1]]],15],[6,[[14,[-1]]],15],[6,16],[5,12],[[7,8],12],[[6,8],12],[[7,3],17],[[6,3],17],0,[[7,8],12],[[6,8],12],[[5,5],17],[[3,3],17],[[1,18],17],[[1,1],17],0,0,0,[[7,19],12],[[6,19],12],0,[[7,19],17],0,[[7,8],12],[[6,8],12],0,[3,20],[3,[[14,[2]]]],[[21,22],[[24,[12,23]]]],[[21,22],[[24,[12,23]]]],[[5,22],25],[[3,22],[[24,[12,23]]]],[[6,22],[[24,[12,23]]]],[[1,22],[[24,[12,23]]]],[[1,22],[[24,[12,23]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[7,6],[2,[[24,[1,26]]]],[[1,1],17],[[1,18],17],[[1,18],17],[[1,1],17],[[5,-1],12,27],[[1,-1],12,27],[28,[[29,[28]]]],0,0,0,[[28,5],[[29,[28]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,17],[7,17],[7,17],[7,17],[6,17],[3,17],[3,17],[[1,1],17],[[1,18],17],[3,1],0,[3,[[14,[30]]]],[[1,1],17],[[1,18],17],[7,[[14,[18]]]],[3,[[14,[2]]]],[3,2],[[2,2,1,[14,[2]],[14,[30]],[14,[2]],20,31],3],[[7,32],8],[[6,32],8],[[],6],[[7,6],12],[[1,1],[[14,[9]]]],[[1,18],[[14,[9]]]],[[7,8,33],12],[[21,34,35],12],[[6,8,33],12],[[7,8,8],12],[[6,8,8],12],[[7,3],36],[[6,3],36],0,0,0,[3,2],0,0,[[7,8],17],[[6,8],17],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0,0,[[],36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[37,37],[[7,8],8],[7,10],[37,10],[[],37],[[7,11],[[14,[[13,[12]]]]]],[[7,8],12],[[7,3],17],[[37,3],17],[[7,8],12],[[37,8],12],[[7,19],12],[[37,19],12],[[7,19],17],[[7,8],12],[[37,8],12],[[36,22],[[24,[12,23]]]],[[37,22],[[24,[12,23]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,17],[36,17],[36,17],[7,[[14,[18]]]],[[],36],[[],37],[[7,32],8],[[37,32],8],[[7,6],12],[[7,8,33],12],[[37,8,33],12],[[7,8,8],12],[[37,8,8],12],[[7,3],36],[[37,3],36],[[],36],[[7,8],17],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[38,22],[[24,[12,23]]]],[[38,22],[[24,[12,23]]]],[[16,22],[[24,[12,23]]]],[-1,-1,[]],[-1,-1,[]],[-2,-1,[],[[40,[6],[[39,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,[[24,[12,38]]]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[16,[[14,[6]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,3,41],12,[[42,[[14,[8]]]]]],[[3,41],12],[19,43],[[19,22],[[24,[12,23]]]],[-1,-1,[]],[-1,-2,[],[]],[19,17],[19,17],[19,3],[[3,41],19],[[-1,3,41],19,[[42,[[14,[8]]]]]],[19,[[14,[8]]]],[[19,35],12],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],0,0,0,0,0,0,0,0,0,0,[[44,3],[[14,[34]]]],[[34,3],[[14,[34]]]],[[34,3],[[14,[34]]]],[34,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,4],[34,4],[34,34],[[[45,[-1]]],[[45,[-1]]],[46,47]],[[[48,[-1]]],[[48,[-1]]],[46,49]],[[20,34],17],[-1,[[48,[-1]]],49],[-1,[[45,[-1]]],47],[[20,20],17],[[34,34],17],[[50,50],17],[[20,-1],[[14,[34]]],[[51,[2]],52]],[[20,22],[[24,[12,23]]]],[[20,22],[[24,[12,23]]]],[[41,22],[[24,[12,23]]]],[[41,22],[[24,[12,23]]]],[[34,22],[[24,[12,23]]]],[[34,22],[[24,[12,23]]]],[[50,22],[[24,[12,23]]]],[[43,22],[[24,[12,23]]]],[[[45,[-1]],22],[[24,[12,23]]],47],[[[45,[-1]],22],[[24,[12,23]]],47],[[[48,[-1]],22],[[24,[12,23]]],49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[34,-1],12,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20],[-1,-2,[],[]],[20,17],[41,17],[20,43],[20,53],[41,53],[34,2],[[[54,[2]],4],20],[43,[[14,[34]]]],[[21,34,35],12],[[41,35],12],[[50,34,35],12],[[[45,[-1]],34,35],12,47],[[[48,[-1]],34,35],12,[49,49]],[[35,34,17],12],[[35,34,49],12],[[35,34,55],12],[[35,34,56],12],[[35,34,57],12],[[35,34,2],12],[[35,34,58],12],[[35,34,59],12],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[29,[-1]]],[[29,[-1]]],46],[[[29,[-1]]],12,[]],[[[29,[-1]],22],25,49],[-1,-1,[]],[28,[[29,[28]]]],[[[29,[-1]]],-1,[]],[[[29,[-1]]],-1,[]],[[[60,[[29,[-1]]]]],[[60,[-1]]],[]],[[[60,[[29,[-1]]]]],[[60,[-1]]],[]],[[28,5],[[29,[28]]]],[-1,-2,[],[]],[-1,[],[]],[[[29,[-1]]],-1,[]],[[[60,[[29,[-1]]]],61],[[62,[-2]]],63,[]],[[[29,[-1]]],5,[]],[[[29,[-1]]],5,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[64,64],[[18,18],9],[[],18],[[18,18],17],[[18,1],17],[[18,22],[[24,[12,23]]]],[[18,22],[[24,[12,23]]]],[[64,22],[[24,[12,23]]]],[[64,22],[[24,[12,23]]]],[-1,-1,[]],[1,18],[[[14,[1]]],18],[-1,-1,[]],[1,18],[2,[[24,[18]]]],[[18,1],17],[[18,18],17],[[18,18],17],[[18,1],17],[[18,-1],12,27],[-1,-2,[],[]],[-1,-2,[],[]],[18,[[14,[1]]]],[[18,18],17],[[18,1],17],[[18,1],17],[[18,18],17],[[18,18],[[14,[9]]]],[[18,1],[[14,[9]]]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0,0,0,[65,[[14,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,3,41],5,[[42,[[14,[8]]]]]],[[8,3,41],32],[8,8],[[32,34],17],[[33,34],17],[[],5],[66,5],[67,12],[66,12],[5,67],[5,66],[[8,8],17],[66,5],[[5,-1],[[14,[34]]],[44,52]],[32,20],[[67,22],25],[[66,22],25],[[8,22],[[24,[12,23]]]],[[32,22],[[24,[12,23]]]],[[33,22],[[24,[12,23]]]],[[5,-1],5,[[42,[[14,[8]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[68,8],[59,8],[[5,-1],17,[44,52]],[[8,-1],12,27],[5,[[14,[8]]]],[66,[[14,[8]]]],[[5,-2],-1,[],[[69,[],[[39,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,68],[8,59],[32,17],[5,17],[32,17],[33,17],[5,17],[32,17],[33,53],[5,[[14,[3]]]],[32,3],[[3,41],5],[[3,41],32],[41,33],[3,5],[[3,41],5],[[3,41],32],[[],5],[5,5],[32,[[14,[8]]]],[[5,-1,-2],5,[44,52],21],[[32,35],12],[[33,35],12],[[5,41],5],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[32,41],[[5,-2],[[14,[-1]]],[],[[69,[[12,[8,6]]],[[39,[-1]]]]]]],"c":[44,45,166],"p":[[5,"Level",0],[1,"str"],[5,"Metadata",0],[5,"Identifier",527],[5,"Span",0],[5,"Dispatch",0],[10,"Collect",0],[5,"Id",430],[6,"Ordering",528],[5,"Current",529],[5,"TypeId",530],[1,"tuple"],[5,"NonNull",531],[6,"Option",532],[10,"Any",530],[5,"WeakDispatch",205],[1,"bool"],[5,"LevelFilter",381],[5,"Event",229],[5,"FieldSet",248],[10,"Value",0],[5,"Formatter",533],[5,"Error",533],[6,"Result",534],[8,"Result",533],[5,"ParseLevelError",535],[10,"Hasher",536],[10,"Instrument",0],[5,"Instrumented",358],[1,"u32"],[5,"Kind",535],[5,"Attributes",430],[5,"Record",430],[5,"Field",248],[10,"Visit",248],[5,"Interest",150],[5,"NoCollector",150],[5,"SetGlobalDefaultError",205],[17,"Output"],[10,"FnMut",537],[5,"ValueSet",248],[10,"Into",538],[5,"Iter",248],[10,"AsField",248],[5,"DisplayValue",248],[10,"Clone",539],[10,"Display",533],[5,"DebugValue",248],[10,"Debug",533],[5,"Empty",248],[10,"Borrow",540],[10,"Sized",541],[1,"usize"],[1,"slice"],[1,"f64"],[1,"i128"],[1,"i64"],[1,"u128"],[1,"u64"],[5,"Pin",542],[5,"Context",543],[6,"Poll",544],[10,"Future",545],[5,"ParseLevelFilterError",381],[10,"AsId",430],[5,"EnteredSpan",430],[5,"Entered",430],[5,"NonZeroU64",546],[10,"FnOnce",537]],"b":[[37,"impl-dyn+Collect+%2B+Sync"],[38,"impl-dyn+Collect+%2B+Send"],[39,"impl-dyn+Collect"],[40,"impl-dyn+Collect+%2B+Send+%2B+Sync"],[53,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[54,"impl-PartialEq-for-Level"],[68,"impl-Debug-for-dyn+Value"],[69,"impl-Display-for-dyn+Value"],[73,"impl-Display-for-Level"],[74,"impl-Debug-for-Level"],[81,"impl-PartialOrd-for-Level"],[82,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[83,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[84,"impl-PartialOrd-for-Level"],[97,"impl-dyn+Collect+%2B+Sync"],[98,"impl-dyn+Collect"],[99,"impl-dyn+Collect+%2B+Send"],[100,"impl-dyn+Collect+%2B+Send+%2B+Sync"],[104,"impl-PartialOrd-for-Level"],[105,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[109,"impl-PartialOrd-for-Level"],[110,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[119,"impl-PartialOrd-for-Level"],[120,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[213,"impl-Display-for-SetGlobalDefaultError"],[214,"impl-Debug-for-SetGlobalDefaultError"],[259,"impl-AsField-for-%26Field"],[260,"impl-AsField-for-Field"],[288,"impl-Debug-for-FieldSet"],[289,"impl-Display-for-FieldSet"],[290,"impl-Display-for-ValueSet%3C\'a%3E"],[291,"impl-Debug-for-ValueSet%3C\'a%3E"],[292,"impl-Display-for-Field"],[293,"impl-Debug-for-Field"],[296,"impl-Debug-for-DisplayValue%3CT%3E"],[297,"impl-Display-for-DisplayValue%3CT%3E"],[398,"impl-PartialEq-for-LevelFilter"],[399,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[400,"impl-Debug-for-LevelFilter"],[401,"impl-Display-for-LevelFilter"],[402,"impl-Debug-for-ParseLevelFilterError"],[403,"impl-Display-for-ParseLevelFilterError"],[405,"impl-From%3CLevel%3E-for-LevelFilter"],[406,"impl-From%3COption%3CLevel%3E%3E-for-LevelFilter"],[410,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[411,"impl-PartialOrd-for-LevelFilter"],[412,"impl-PartialOrd-for-LevelFilter"],[413,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[418,"impl-PartialOrd-for-LevelFilter"],[419,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[420,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[421,"impl-PartialOrd-for-LevelFilter"],[422,"impl-PartialOrd-for-LevelFilter"],[423,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"]]}],\
["tracing_attributes",{"doc":"A procedural macro attribute for instrumenting functions …","t":"X","n":["instrument"],"q":[[0,"tracing_attributes"]],"d":["Instruments a function to create and enter a <code>tracing</code> span …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]}],\
["tracing_core",{"doc":"Core primitives for <code>tracing</code>.","t":"KKFFFEEFFFNNNNNNNNNNNNNCNNNNNNNCMNCNNMMNNNNNNCMNMCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNCMQMNNNNNMMNMCNNNNNNNNNNNNNNNNNNNKFFNNNNNNNNNNNNNMNHHMNNNNNNKFFNNNNNNNNMNNNNNNNNMNMNMNNMNNNNNNNNNNNNNNNNNMNNMNMNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNHNNNNNNNNHNNNNNNNNFNNNNNNNNNNFFFFFFKFKNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNTTTTTTTTFFFFTFFTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Callsite","Collect","Dispatch","Event","Field","Interest","Kind","Level","LevelFilter","Metadata","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","clone","clone","clone_span","cmp","cmp","collect","current_span","default","dispatch","downcast_raw","drop_span","enabled","enter","eq","eq","eq","eq","eq","eq","event","event","event_enabled","exit","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","ge","ge","ge","ge","gt","gt","gt","gt","hash","hash","hash","identify_callsite","into","into","into","into","into","into","le","le","le","le","lt","lt","lt","lt","max_level_hint","metadata","metadata","metadata","new_span","on_register_dispatch","partial_cmp","partial_cmp","partial_cmp","partial_cmp","record","record_follows_from","register_callsite","set_interest","span","try_close","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Callsite","Identifier","Registration","borrow","borrow","borrow_mut","borrow_mut","clone","eq","fmt","fmt","from","from","hash","into","into","metadata","new","rebuild_interest_cache","register","set_interest","try_from","try_from","try_into","try_into","type_id","type_id","Collect","Interest","NoCollector","always","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_span","current_span","current_span","default","downcast_raw","downcast_ref","downcast_ref","downcast_ref","downcast_ref","drop_span","enabled","enabled","enter","enter","event","event","event_enabled","exit","exit","fmt","fmt","from","from","into","into","is","is","is","is","is_always","is_never","is_sometimes","max_level_hint","never","new","new_span","new_span","on_register_dispatch","record","record","record_follows_from","record_follows_from","register_callsite","register_callsite","sometimes","try_close","try_from","try_from","try_into","try_into","type_id","type_id","Dispatch","SetGlobalDefaultError","WeakDispatch","borrow","borrow","borrow_mut","borrow_mut","clone","clone_span","current_span","downcast_ref","downgrade","drop_span","enabled","enter","event","exit","fmt","fmt","fmt","from","from","from_static","get_default","into","into","is","new_span","none","record","record_follows_from","register_callsite","set_global_default","try_close","try_from","try_from","try_into","try_into","type_id","type_id","upgrade","Event","child_of","dispatch","fields","is_contextual","is_root","metadata","new","new_child_of","parent","record","DebugValue","DisplayValue","Empty","Field","FieldSet","Iter","Value","ValueSet","Visit","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callsite","callsite","clone","clone","contains","debug","display","eq","eq","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","iter","len","len","name","new","next","record","record","record","record","record","record_bool","record_debug","record_f64","record_i128","record_i64","record_str","record_u128","record_u64","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","DEBUG","DEBUG","ERROR","ERROR","EVENT","HINT","INFO","INFO","Kind","Level","LevelFilter","Metadata","OFF","ParseLevelError","ParseLevelFilterError","SPAN","TRACE","TRACE","WARN","WARN","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","callsite","clone","clone","current","eq","fields","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from_level","hint","into","into","into","into_level","is_event","is_event","is_hint","is_span","is_span","level","line","module_path","name","new","target","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Attributes","Current","Id","Record","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","clone","contains","contains","eq","fields","fmt","fmt","fmt","fmt","from","from","from","from","from_non_zero_u64","from_u64","hash","id","into","into","into","into","into_inner","into_non_zero_u64","into_u64","is_contextual","is_empty","is_empty","is_known","is_root","len","metadata","metadata","new","new","new","new_root","none","parent","record","record","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unknown","values"],"q":[[0,"tracing_core"],[129,"tracing_core::callsite"],[156,"tracing_core::collect"],[218,"tracing_core::dispatch"],[259,"tracing_core::event"],[270,"tracing_core::field"],[365,"tracing_core::metadata"],[433,"tracing_core::span"],[500,"core::cmp"],[501,"core::any"],[502,"core::ptr::non_null"],[503,"core::option"],[504,"core::fmt"],[505,"core::fmt"],[506,"core::hash"],[507,"core::any"],[508,"core::convert"],[509,"core::clone"],[510,"core::fmt"],[511,"core::marker"],[512,"core::num::nonzero"]],"d":["Trait implemented by callsites.","Trait representing the functions required to collect trace …","<code>Dispatch</code> trace data to a <code>Collect</code>.","<code>Event</code>s represent single points in time where something …","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","","","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","","","","","","","","","","","","","","Callsites represent the source locations from which spans …","","","","","Notifies the collector that a span ID has been cloned.","","","Collectors collect and record trace data.","Returns a type representing this collector’s view of the …","Returns the current default dispatcher","Dispatches trace events to <code>Collect</code>s.","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","Records that a span has been entered.","","","","","","","Events represent single points in time during the …","Records that an <code>Event</code> has occurred.","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","Span and <code>Event</code> key-value data.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Statically constructs an <code>Identifier</code> for the provided …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the highest verbosity level that this <code>Collector</code> …","Metadata describing trace data.","Returns the metadata associated with the callsite.","Statically constructs new span metadata.","Visit the construction of a new span, returning a new span …","Invoked when this collector becomes a <code>Dispatch</code>.","","","","","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Sets the <code>Interest</code> for this callsite.","Spans represent periods of time in the execution of a …","Notifies the collector that a <code>span ID</code> has been dropped, …","","","","","","","","","","","","","","","","","","","Trait implemented by callsites.","Uniquely identifies a <code>Callsite</code>","A registration with the callsite registry.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the metadata associated with the callsite.","Construct a new <code>Registration</code> from some …","Clear and reregister interest on every <code>Callsite</code>","Register a new <code>Callsite</code> with the global registry.","Sets the <code>Interest</code> for this callsite.","","","","","","","Trait representing the functions required to collect trace …","Indicates a <code>Collect</code>’s interest in a particular callsite.","A no-op collector.","Returns an <code>Interest</code> indicating the collector is always …","","","","","","","Notifies the collector that a span ID has been cloned.","Returns a type representing this collector’s view of the …","","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","Returns some reference to this <code>Collector</code> value if it is of …","<strong>This method is deprecated.</strong>","Returns true if a span or event with the specified metadata…","","Records that a span has been entered.","","Records that an <code>Event</code> has occurred.","","Determine if an <code>Event</code> should be recorded.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if this <code>Collector</code> is the same type as <code>T</code>.","Returns <code>true</code> if the collector is always interested in …","Returns <code>true</code> if the collector is never interested in being …","Returns <code>true</code> if the collector is sometimes interested in …","Returns the highest verbosity level that this <code>Collector</code> …","Returns an <code>Interest</code> indicating that the collector is never …","Returns a new <code>NoCollector</code> instance.","Visit the construction of a new span, returning a new span …","","Invoked when this collector becomes a <code>Dispatch</code>.","Record a set of values on a span.","","Adds an indication that <code>span</code> follows from the span with …","","Registers a new callsite with this collector, returning …","","Returns an <code>Interest</code> indicating the collector is sometimes …","Notifies the collector that a <code>span ID</code> has been dropped, …","","","","","","","<code>Dispatch</code> trace data to a <code>Collect</code>.","Returned if setting the global dispatcher fails.","<code>WeakDispatch</code> is a version of <code>Dispatch</code> that holds a …","","","","","","Notifies the collector that a span ID has been cloned.","Returns a type representing this collector’s view of the …","Returns some reference to the <code>Collect</code> this <code>Dispatch</code> …","Creates a <code>WeakDispatch</code> from this <code>Dispatch</code>.","Notifies the collector that a span ID has been dropped.","Returns true if a span with the specified metadata would be","Records that a span has been can_enter.","Records that an <code>Event</code> has occurred.","Records that a span has been exited.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>Dispatch</code> that forwards to the given static …","Executes a closure with a reference to the current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this <code>Dispatch</code> forwards to a collector of …","Record the construction of a new span, returning a new ID …","Returns a new <code>Dispatch</code> that discards events and spans.","Record a set of values on a span.","Adds an indication that <code>span</code> follows from the span with …","Registers a new callsite with this collector, returning …","Sets this dispatch as the global default for the duration …","Notifies the collector that a span ID has been dropped, …","","","","","","","Attempts to upgrade this <code>WeakDispatch</code> to a <code>Dispatch</code>.","<code>Event</code>s represent single points in time where something …","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","Returns true if the new event’s parent should be …","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","Returns the new event’s explicitly-specified parent, if …","Visits all the fields on this <code>Event</code> with the specified …","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.","A <code>Value</code> which serializes using <code>fmt::Display</code>.","An empty field.","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>’…","Describes the fields present on a span.","An iterator over a set of fields.","A field value of an erased type.","A set of fields and values for a span.","Visits typed values.","","","","","","","","","","","","","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","Returns an <code>Identifier</code> that uniquely identifies the <code>Callsite</code>","","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can be","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that can …","","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether or not this <code>FieldSet</code> has fields.","Returns true if this <code>ValueSet</code> contains <em>no</em> values.","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.","Returns the number of fields in this <code>FieldSet</code>.","Returns the number of fields in this <code>ValueSet</code> that would …","Returns a string representing the name of the field.","Constructs a new <code>FieldSet</code> with the given array of field …","","Visits this value with the given <code>Visitor</code>.","Visits all the fields in this <code>ValueSet</code> with the provided …","","","","Visit a boolean value.","Visit a value implementing <code>fmt::Debug</code>.","Visit a double-precision floating point value.","Visit a signed 128-bit integer value.","Visit a signed 64-bit integer value.","Visit a string value.","Visit an unsigned 128-bit integer value.","Visit an unsigned 64-bit integer value.","","","","","","","","","","","","","","","","","","","The “debug” level.","The “debug” level.","The “error” level.","The “error” level.","<code>Event</code> callsite","<code>enabled!</code> callsite. <code>Collect</code>s can assume this <code>Kind</code> means …","The “info” level.","The “info” level.","Indicates whether the callsite is a span or event.","Describes the level of verbosity of a span or event.","A filter comparable to a verbosity <code>Level</code>.","Metadata describing a span or event.","The “off” level.","Returned if parsing a <code>Level</code> fails.","Indicates that a string could not be parsed to a valid …","<code>Span</code> callsite","The “trace” level.","The “trace” level.","The “warn” level.","The “warn” level.","Returns the string representation of the <code>Level</code>.","","","","","","","Returns an opaque <code>Identifier</code> that uniquely identifies the …","","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …","","Returns the names of the fields on the described span or …","Returns the name of the source code file where the span …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a <code>LevelFilter</code> that enables spans and events with …","Sets that this <code>Kind</code> is a hint.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the most verbose <code>Level</code> that this filter accepts, …","Returns true if the callsite kind is <code>Event</code>.","Return true if the callsite kind is <code>Event</code>","Return true if the callsite kind is <code>Hint</code>","Return true if the callsite kind is <code>Span</code>.","Return true if the callsite kind is <code>Span</code>","Returns the level of verbosity of the described span or …","Returns the line number in the source code file where the …","Returns the path to the Rust module where the span …","Returns the name of the span.","Construct new metadata for a span or event, with a name, …","Returns a string describing the part of the system where …","","","","","","","","","","Attributes provided to a collector describing a new span …","Indicates what the collector considers the “current” …","Identifies a span within the context of a collector.","A set of fields recorded by a span.","","","","","","","","","Returns <code>Attributes</code> describing a new child span of the …","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","Returns the set of all fields defined by this span’s …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","","Borrows the <code>Id</code> of the current span, if one exists and is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if the collector that constructed this <code>Current</code>…","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","Returns a reference to the new span’s metadata.","Borrows the <code>Metadata</code> of the current span, if one exists …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new <code>Current</code> that indicates the current …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new <code>Current</code> that indicates the current …","Returns the new span’s explicitly-specified parent, if …","Records all the fields in this set of <code>Attributes</code> with the …","Records all the fields in this <code>Record</code> with the provided …","","","","","","","","","","","","","Constructs a new <code>Current</code> that indicates the collector does …","Returns a reference to a <code>ValueSet</code> containing any values …"],"i":[0,0,0,0,0,0,0,0,0,0,1,14,3,16,1,4,5,14,3,16,1,4,5,0,3,1,4,5,6,4,5,0,6,3,0,6,6,6,6,14,1,4,4,5,5,0,6,6,6,0,14,3,16,1,1,4,4,5,5,14,3,16,1,4,5,5,5,4,5,4,4,5,5,4,4,5,5,1,4,5,0,14,3,16,1,4,5,4,4,5,5,4,4,5,5,6,0,22,0,6,6,4,4,5,5,6,6,6,22,0,6,14,3,16,1,4,5,14,3,16,1,4,5,14,3,16,1,4,5,0,0,0,27,26,27,26,26,26,27,26,27,26,26,27,26,22,27,0,0,22,27,26,27,26,27,26,0,0,0,25,25,28,25,28,25,28,6,6,28,28,6,6,6,6,6,6,6,28,6,28,6,28,6,6,28,25,28,25,28,25,28,6,6,6,6,25,25,25,6,25,28,6,28,6,6,28,6,28,6,28,25,6,25,28,25,28,25,28,0,0,0,31,30,31,30,30,3,3,3,3,3,3,3,3,3,31,31,30,31,30,3,0,31,30,3,3,3,3,3,3,0,3,31,30,31,30,31,30,30,0,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,43,34,44,36,38,41,43,34,44,36,38,41,34,1,38,41,43,0,0,43,44,43,43,43,34,34,47,47,44,36,38,38,41,43,34,44,36,38,41,43,34,44,36,38,41,43,36,43,34,43,43,34,1,43,36,47,34,44,38,41,37,37,37,37,37,37,37,37,43,34,44,36,38,41,43,34,44,36,38,41,43,34,44,36,38,41,4,5,4,5,55,55,4,5,0,0,0,0,5,0,0,55,4,5,4,5,4,55,56,19,55,56,19,14,55,56,5,55,14,14,55,56,56,19,19,55,56,19,5,55,55,56,19,5,14,55,55,14,55,14,14,14,14,14,14,55,56,19,55,56,19,55,56,19,0,0,0,0,7,23,24,9,7,23,24,9,23,7,23,24,7,23,7,23,24,9,7,23,24,9,7,7,7,9,7,23,24,9,9,7,7,23,23,24,9,23,24,23,9,23,24,9,23,9,23,23,24,7,23,24,9,7,23,24,9,7,23,24,9,9,23],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,3],[1,1],[4,4],[5,5],[[6,7],7],[[4,4],8],[[5,5],8],0,[6,9],[[],3],0,[[6,10],[[13,[[12,[11]]]]]],[[6,7],11],[[6,14],15],[[6,7],11],[[14,14],15],[[1,1],15],[[4,5],15],[[4,4],15],[[5,4],15],[[5,5],15],0,[[6,16],11],[[6,16],15],[[6,7],11],0,[[14,17],18],[[3,17],18],[[16,17],18],[[1,17],18],[[1,17],18],[[4,17],18],[[4,17],18],[[5,17],18],[[5,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[4]]],5],[4,5],[2,[[20,[4,19]]]],[2,[[20,[5,-1]]],[]],[[4,5],15],[[4,4],15],[[5,4],15],[[5,5],15],[[4,4],15],[[4,5],15],[[5,4],15],[[5,5],15],[[1,-1],11,21],[[4,-1],11,21],[[5,-1],11,21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,4],15],[[4,5],15],[[5,5],15],[[5,4],15],[[4,5],15],[[4,4],15],[[5,4],15],[[5,5],15],[6,[[13,[5]]]],0,[22,14],0,[[6,23],7],[[6,3],11],[[4,4],[[13,[8]]]],[[4,5],[[13,[8]]]],[[5,4],[[13,[8]]]],[[5,5],[[13,[8]]]],[[6,7,24],11],[[6,7,7],11],[[6,14],25],[[22,25],11],0,[[6,7],15],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[26,26],15],[[27,17],18],[[26,17],18],[-1,-1,[]],[-1,-1,[]],[[26,-1],11,21],[-1,-2,[],[]],[-1,-2,[],[]],[22,14],[-1,[[27,[-1]]],[]],[[],11],[27,11],[[22,25],11],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[[],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[28,28],[[6,7],7],[6,9],[28,9],[[],28],[[6,10],[[13,[[12,[11]]]]]],[6,[[13,[-1]]],29],[6,[[13,[-1]]],29],[6,[[13,[-1]]],29],[6,[[13,[-1]]],29],[[6,7],11],[[6,14],15],[[28,14],15],[[6,7],11],[[28,7],11],[[6,16],11],[[28,16],11],[[6,16],15],[[6,7],11],[[28,7],11],[[25,17],18],[[28,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,15],[6,15],[6,15],[6,15],[25,15],[25,15],[25,15],[6,[[13,[5]]]],[[],25],[[],28],[[6,23],7],[[28,23],7],[[6,3],11],[[6,7,24],11],[[28,7,24],11],[[6,7,7],11],[[28,7,7],11],[[6,14],25],[[28,14],25],[[],25],[[6,7],15],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[[3,7],7],[3,9],[3,[[13,[-1]]],29],[3,30],[[3,7],11],[[3,14],15],[[3,7],11],[[3,16],11],[[3,7],11],[[31,17],18],[[31,17],18],[[30,17],18],[-1,-1,[]],[-1,-1,[]],[6,3],[-2,-1,[],[[33,[3],[[32,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[3,15],[[3,23],7],[[],3],[[3,7,24],11],[[3,7,7],11],[[3,14],25],[3,[[20,[11,31]]]],[[3,7],15],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[30,[[13,[3]]]],0,[[-1,14,34],11,[[35,[[13,[7]]]]]],[[14,34],11],[16,36],[16,15],[16,15],[16,14],[[14,34],16],[[-1,14,34],16,[[35,[[13,[7]]]]]],[16,[[13,[7]]]],[[16,37],11],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,26],[1,26],[[[38,[-1]]],[[38,[-1]]],[39,40]],[[[41,[-1]]],[[41,[-1]]],[39,42]],[[43,1],15],[-1,[[41,[-1]]],42],[-1,[[38,[-1]]],40],[[43,43],15],[[44,44],15],[[43,-1],[[13,[1]]],[[45,[2]],46]],[[43,17],18],[[43,17],18],[[34,17],18],[[34,17],18],[[47,17],18],[[47,17],18],[[44,17],18],[[36,17],18],[[[38,[-1]],17],18,40],[[[38,[-1]],17],18,40],[[[41,[-1]],17],18,42],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,-1,[]],[-1,-2,[],[]],[43,15],[34,15],[43,36],[43,48],[34,48],[1,2],[[[49,[2]],26],43],[36,[[13,[1]]]],[[47,1,37],11],[[34,37],11],[[44,1,37],11],[[[38,[-1]],1,37],11,40],[[[41,[-1]],1,37],11,42],[[37,1,15],11],[[37,1,42],11],[[37,1,50],11],[[37,1,51],11],[[37,1,52],11],[[37,1,2],11],[[37,1,53],11],[[37,1,54],11],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,26],[55,55],[56,56],[[],5],[[55,55],15],[14,43],[14,[[13,[2]]]],[[55,17],18],[[56,17],18],[[56,17],18],[[19,17],18],[[19,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,5],[55,55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[13,[4]]]],[14,15],[55,15],[55,15],[14,15],[55,15],[14,4],[14,[[13,[57]]]],[14,[[13,[2]]]],[14,2],[[2,2,4,[13,[2]],[13,[57]],[13,[2]],43,55],14],[14,2],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,14,34],23],[7,7],[[23,1],15],[[24,1],15],[[7,7],15],[23,43],[[7,17],18],[[23,17],18],[[24,17],18],[[9,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[58,7],[54,7],[[7,-1],11,21],[9,[[13,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[13,[[11,[7,14]]]]]],[7,58],[7,54],[23,15],[23,15],[24,15],[9,15],[23,15],[24,48],[23,14],[9,[[13,[14]]]],[[14,34],23],[34,24],[[7,14],9],[[14,34],23],[[],9],[23,[[13,[7]]]],[[23,37],11],[[24,37],11],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[],9],[23,34]],"c":[36,175,230],"p":[[5,"Field",0],[1,"str"],[5,"Dispatch",0],[5,"Level",0],[5,"LevelFilter",0],[10,"Collect",0],[5,"Id",433],[6,"Ordering",500],[5,"Current",433],[5,"TypeId",501],[1,"tuple"],[5,"NonNull",502],[6,"Option",503],[5,"Metadata",0],[1,"bool"],[5,"Event",0],[5,"Formatter",504],[8,"Result",504],[5,"ParseLevelError",365],[6,"Result",505],[10,"Hasher",506],[10,"Callsite",0],[5,"Attributes",433],[5,"Record",433],[5,"Interest",156],[5,"Identifier",129],[5,"Registration",129],[5,"NoCollector",156],[10,"Any",501],[5,"WeakDispatch",218],[5,"SetGlobalDefaultError",218],[17,"Output"],[10,"FnMut",507],[5,"ValueSet",270],[10,"Into",508],[5,"Iter",270],[10,"Visit",270],[5,"DisplayValue",270],[10,"Clone",509],[10,"Display",504],[5,"DebugValue",270],[10,"Debug",504],[5,"FieldSet",270],[5,"Empty",270],[10,"Borrow",510],[10,"Sized",511],[10,"Value",270],[1,"usize"],[1,"slice"],[1,"f64"],[1,"i128"],[1,"i64"],[1,"u128"],[1,"u64"],[5,"Kind",365],[5,"ParseLevelFilterError",365],[1,"u32"],[5,"NonZeroU64",512]],"b":[[41,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[42,"impl-PartialEq-for-Level"],[43,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[44,"impl-PartialEq-for-LevelFilter"],[53,"impl-Display-for-Field"],[54,"impl-Debug-for-Field"],[55,"impl-Display-for-Level"],[56,"impl-Debug-for-Level"],[57,"impl-Debug-for-LevelFilter"],[58,"impl-Display-for-LevelFilter"],[65,"impl-From%3COption%3CLevel%3E%3E-for-LevelFilter"],[66,"impl-From%3CLevel%3E-for-LevelFilter"],[69,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[70,"impl-PartialOrd-for-Level"],[71,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[72,"impl-PartialOrd-for-LevelFilter"],[73,"impl-PartialOrd-for-Level"],[74,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[75,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[76,"impl-PartialOrd-for-LevelFilter"],[87,"impl-PartialOrd-for-Level"],[88,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[89,"impl-PartialOrd-for-LevelFilter"],[90,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[91,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[92,"impl-PartialOrd-for-Level"],[93,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[94,"impl-PartialOrd-for-LevelFilter"],[101,"impl-PartialOrd-for-Level"],[102,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[103,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[104,"impl-PartialOrd-for-LevelFilter"],[171,"impl-dyn+Collect+%2B+Send+%2B+Sync"],[172,"impl-dyn+Collect"],[173,"impl-dyn+Collect+%2B+Sync"],[174,"impl-dyn+Collect+%2B+Send"],[191,"impl-dyn+Collect+%2B+Send+%2B+Sync"],[192,"impl-dyn+Collect"],[193,"impl-dyn+Collect+%2B+Sync"],[194,"impl-dyn+Collect+%2B+Send"],[235,"impl-Debug-for-SetGlobalDefaultError"],[236,"impl-Display-for-SetGlobalDefaultError"],[301,"impl-Debug-for-FieldSet"],[302,"impl-Display-for-FieldSet"],[303,"impl-Display-for-ValueSet%3C\'a%3E"],[304,"impl-Debug-for-ValueSet%3C\'a%3E"],[305,"impl-Debug-for-dyn+Value"],[306,"impl-Display-for-dyn+Value"],[309,"impl-Display-for-DisplayValue%3CT%3E"],[310,"impl-Debug-for-DisplayValue%3CT%3E"],[400,"impl-Display-for-ParseLevelFilterError"],[401,"impl-Debug-for-ParseLevelFilterError"],[402,"impl-Display-for-ParseLevelError"],[403,"impl-Debug-for-ParseLevelError"]]}],\
["unicode_ident",{"doc":"github crates-io docs-rs","t":"HH","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[1,"char"],[1,"bool"]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
