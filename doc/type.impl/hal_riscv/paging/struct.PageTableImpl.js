(function() {var type_impls = {
"hal_riscv":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PageTable%3CSize4KiB%3E-for-PageTableImpl%3CLevel3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#582-782\">source</a><a href=\"#impl-PageTable%3CSize4KiB%3E-for-PageTableImpl%3CLevel3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"hal/memory/paging/trait.PageTable.html\" title=\"trait hal::memory::paging::PageTable\">PageTable</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt; for <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;<a class=\"enum\" href=\"hal_riscv/paging/enum.Level3.html\" title=\"enum hal_riscv::paging::Level3\">Level3</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_kernel_mapped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#583-602\">source</a><a href=\"#method.new_with_kernel_mapped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.new_with_kernel_mapped\" class=\"fn\">new_with_kernel_mapped</a>&lt;A&gt;(kernel_page_table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Self</a>, allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>) -&gt; Self<div class=\"where\">where\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt;,</div></h4></section></summary><div class='docblock'>Constructs a new set of page tables, but with the kernel mapped into it. This is generally useful for\nconstructing page tables for userspace.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.switch_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#604-606\">source</a><a href=\"#method.switch_to\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.switch_to\" class=\"fn\">switch_to</a>(&amp;self)</h4></section></summary><div class='docblock'>Install these page tables as the current set.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#608-620\">source</a><a href=\"#method.translate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.translate\" class=\"fn\">translate</a>(&amp;self, address: <a class=\"struct\" href=\"hal/memory/virtual_address/struct.VAddr.html\" title=\"struct hal::memory::virtual_address::VAddr\">VAddr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"hal/memory/physical_address/struct.PAddr.html\" title=\"struct hal::memory::physical_address::PAddr\">PAddr</a>&gt;</h4></section></summary><div class='docblock'>Get the physical address that a given virtual address is mapped to, if it’s mapped. Returns <code>None</code> if the\naddress is not mapped into physical memory.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#622-663\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.map\" class=\"fn\">map</a>&lt;S, A&gt;(\n    &amp;mut self,\n    page: <a class=\"struct\" href=\"hal/memory/page/struct.Page.html\" title=\"struct hal::memory::page::Page\">Page</a>&lt;S&gt;,\n    frame: <a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>&lt;S&gt;,\n    flags: <a class=\"struct\" href=\"hal/memory/paging/struct.Flags.html\" title=\"struct hal::memory::paging::Flags\">Flags</a>,\n    allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hal/memory/paging/enum.PagingError.html\" title=\"enum hal::memory::paging::PagingError\">PagingError</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hal/memory/trait.FrameSize.html\" title=\"trait hal::memory::FrameSize\">FrameSize</a>,\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt;,</div></h4></section></summary><div class='docblock'>Map a <code>Page</code> to a <code>Frame</code> with the given flags.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_area\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#665-756\">source</a><a href=\"#method.map_area\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.map_area\" class=\"fn\">map_area</a>&lt;A&gt;(\n    &amp;mut self,\n    virtual_start: <a class=\"struct\" href=\"hal/memory/virtual_address/struct.VAddr.html\" title=\"struct hal::memory::virtual_address::VAddr\">VAddr</a>,\n    physical_start: <a class=\"struct\" href=\"hal/memory/physical_address/struct.PAddr.html\" title=\"struct hal::memory::physical_address::PAddr\">PAddr</a>,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>,\n    flags: <a class=\"struct\" href=\"hal/memory/paging/struct.Flags.html\" title=\"struct hal::memory::paging::Flags\">Flags</a>,\n    allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hal/memory/paging/enum.PagingError.html\" title=\"enum hal::memory::paging::PagingError\">PagingError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt;,</div></h4></section></summary><div class='docblock'>Map an area of <code>size</code> bytes starting at the given address pair with the given flags. Implementations are\nfree to map this area however they desire, and may do so with a range of page sizes.</div></details><section id=\"method.unmap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#758-781\">source</a><a href=\"#method.unmap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.unmap\" class=\"fn\">unmap</a>&lt;S&gt;(&amp;mut self, page: <a class=\"struct\" href=\"hal/memory/page/struct.Page.html\" title=\"struct hal::memory::page::Page\">Page</a>&lt;S&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>&lt;S&gt;&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hal/memory/trait.FrameSize.html\" title=\"trait hal::memory::FrameSize\">FrameSize</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_range\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal/memory/paging.rs.html#78-87\">source</a><a href=\"#method.map_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#method.map_range\" class=\"fn\">map_range</a>&lt;S, A&gt;(\n    &amp;mut self,\n    pages: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"struct\" href=\"hal/memory/page/struct.Page.html\" title=\"struct hal::memory::page::Page\">Page</a>&lt;S&gt;&gt;,\n    frames: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>&lt;S&gt;&gt;,\n    flags: <a class=\"struct\" href=\"hal/memory/paging/struct.Flags.html\" title=\"struct hal::memory::paging::Flags\">Flags</a>,\n    allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hal/memory/paging/enum.PagingError.html\" title=\"enum hal::memory::paging::PagingError\">PagingError</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hal/memory/trait.FrameSize.html\" title=\"trait hal::memory::FrameSize\">FrameSize</a>,\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;TableSize&gt;,</div></h4></section></summary><div class='docblock'>Map each <code>Page</code> in a range to a corresponding <code>Frame</code> with the given flags.</div></details></div></details>","PageTable<Size4KiB>","hal_riscv::platform_d1::PageTableImpl","hal_riscv::platform::PageTableImpl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PageTable%3CSize4KiB%3E-for-PageTableImpl%3CLevel4%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#335-542\">source</a><a href=\"#impl-PageTable%3CSize4KiB%3E-for-PageTableImpl%3CLevel4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"hal/memory/paging/trait.PageTable.html\" title=\"trait hal::memory::paging::PageTable\">PageTable</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt; for <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;<a class=\"enum\" href=\"hal_riscv/paging/enum.Level4.html\" title=\"enum hal_riscv::paging::Level4\">Level4</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_kernel_mapped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#336-354\">source</a><a href=\"#method.new_with_kernel_mapped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.new_with_kernel_mapped\" class=\"fn\">new_with_kernel_mapped</a>&lt;A&gt;(kernel_page_table: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Self</a>, allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>) -&gt; Self<div class=\"where\">where\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt;,</div></h4></section></summary><div class='docblock'>Constructs a new set of page tables, but with the kernel mapped into it. This is generally useful for\nconstructing page tables for userspace.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.switch_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#356-358\">source</a><a href=\"#method.switch_to\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.switch_to\" class=\"fn\">switch_to</a>(&amp;self)</h4></section></summary><div class='docblock'>Install these page tables as the current set.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.translate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#360-375\">source</a><a href=\"#method.translate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.translate\" class=\"fn\">translate</a>(&amp;self, address: <a class=\"struct\" href=\"hal/memory/virtual_address/struct.VAddr.html\" title=\"struct hal::memory::virtual_address::VAddr\">VAddr</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"hal/memory/physical_address/struct.PAddr.html\" title=\"struct hal::memory::physical_address::PAddr\">PAddr</a>&gt;</h4></section></summary><div class='docblock'>Get the physical address that a given virtual address is mapped to, if it’s mapped. Returns <code>None</code> if the\naddress is not mapped into physical memory.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#377-422\">source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.map\" class=\"fn\">map</a>&lt;S, A&gt;(\n    &amp;mut self,\n    page: <a class=\"struct\" href=\"hal/memory/page/struct.Page.html\" title=\"struct hal::memory::page::Page\">Page</a>&lt;S&gt;,\n    frame: <a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>&lt;S&gt;,\n    flags: <a class=\"struct\" href=\"hal/memory/paging/struct.Flags.html\" title=\"struct hal::memory::paging::Flags\">Flags</a>,\n    allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hal/memory/paging/enum.PagingError.html\" title=\"enum hal::memory::paging::PagingError\">PagingError</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hal/memory/trait.FrameSize.html\" title=\"trait hal::memory::FrameSize\">FrameSize</a>,\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt;,</div></h4></section></summary><div class='docblock'>Map a <code>Page</code> to a <code>Frame</code> with the given flags.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_area\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#424-515\">source</a><a href=\"#method.map_area\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.map_area\" class=\"fn\">map_area</a>&lt;A&gt;(\n    &amp;mut self,\n    virtual_start: <a class=\"struct\" href=\"hal/memory/virtual_address/struct.VAddr.html\" title=\"struct hal::memory::virtual_address::VAddr\">VAddr</a>,\n    physical_start: <a class=\"struct\" href=\"hal/memory/physical_address/struct.PAddr.html\" title=\"struct hal::memory::physical_address::PAddr\">PAddr</a>,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>,\n    flags: <a class=\"struct\" href=\"hal/memory/paging/struct.Flags.html\" title=\"struct hal::memory::paging::Flags\">Flags</a>,\n    allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hal/memory/paging/enum.PagingError.html\" title=\"enum hal::memory::paging::PagingError\">PagingError</a>&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;<a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>&gt;,</div></h4></section></summary><div class='docblock'>Map an area of <code>size</code> bytes starting at the given address pair with the given flags. Implementations are\nfree to map this area however they desire, and may do so with a range of page sizes.</div></details><section id=\"method.unmap\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#517-541\">source</a><a href=\"#method.unmap\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#tymethod.unmap\" class=\"fn\">unmap</a>&lt;S&gt;(&amp;mut self, page: <a class=\"struct\" href=\"hal/memory/page/struct.Page.html\" title=\"struct hal::memory::page::Page\">Page</a>&lt;S&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>&lt;S&gt;&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hal/memory/trait.FrameSize.html\" title=\"trait hal::memory::FrameSize\">FrameSize</a>,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_range\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hal/memory/paging.rs.html#78-87\">source</a><a href=\"#method.map_range\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hal/memory/paging/trait.PageTable.html#method.map_range\" class=\"fn\">map_range</a>&lt;S, A&gt;(\n    &amp;mut self,\n    pages: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"struct\" href=\"hal/memory/page/struct.Page.html\" title=\"struct hal::memory::page::Page\">Page</a>&lt;S&gt;&gt;,\n    frames: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>&lt;S&gt;&gt;,\n    flags: <a class=\"struct\" href=\"hal/memory/paging/struct.Flags.html\" title=\"struct hal::memory::paging::Flags\">Flags</a>,\n    allocator: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;A</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hal/memory/paging/enum.PagingError.html\" title=\"enum hal::memory::paging::PagingError\">PagingError</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"hal/memory/trait.FrameSize.html\" title=\"trait hal::memory::FrameSize\">FrameSize</a>,\n    A: <a class=\"trait\" href=\"hal/memory/trait.FrameAllocator.html\" title=\"trait hal::memory::FrameAllocator\">FrameAllocator</a>&lt;TableSize&gt;,</div></h4></section></summary><div class='docblock'>Map each <code>Page</code> in a range to a corresponding <code>Frame</code> with the given flags.</div></details></div></details>","PageTable<Size4KiB>","hal_riscv::platform_virt::PageTableImpl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PageTableImpl%3CLevel3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#547-580\">source</a><a href=\"#impl-PageTableImpl%3CLevel3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;<a class=\"enum\" href=\"hal_riscv/paging/enum.Level3.html\" title=\"enum hal_riscv::paging::Level3\">Level3</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.satp\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#548-550\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.satp\" class=\"fn\">satp</a>(&amp;self) -&gt; <a class=\"enum\" href=\"hal_riscv/hw/csr/enum.Satp.html\" title=\"enum hal_riscv::hw::csr::Satp\">Satp</a></h4></section><section id=\"method.walk\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#552-579\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.walk\" class=\"fn\">walk</a>(&amp;self)</h4></section></div></details>",0,"hal_riscv::platform_d1::PageTableImpl","hal_riscv::platform::PageTableImpl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PageTableImpl%3CLevel4%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#291-333\">source</a><a href=\"#impl-PageTableImpl%3CLevel4%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;<a class=\"enum\" href=\"hal_riscv/paging/enum.Level4.html\" title=\"enum hal_riscv::paging::Level4\">Level4</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.satp\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#292-294\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.satp\" class=\"fn\">satp</a>(&amp;self) -&gt; <a class=\"enum\" href=\"hal_riscv/hw/csr/enum.Satp.html\" title=\"enum hal_riscv::hw::csr::Satp\">Satp</a></h4></section><section id=\"method.walk\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#296-332\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.walk\" class=\"fn\">walk</a>(&amp;self)</h4></section></div></details>",0,"hal_riscv::platform_virt::PageTableImpl"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PageTableImpl%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#260-286\">source</a><a href=\"#impl-PageTableImpl%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"hal_riscv/paging/trait.HierarchicalLevel.html\" title=\"trait hal_riscv::paging::HierarchicalLevel\">HierarchicalLevel</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#264-268\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.new\" class=\"fn\">new</a>(frame: <a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>, physical_base: <a class=\"struct\" href=\"hal/memory/virtual_address/struct.VAddr.html\" title=\"struct hal::memory::virtual_address::VAddr\">VAddr</a>) -&gt; <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;T&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_frame\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#275-277\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.from_frame\" class=\"fn\">from_frame</a>(frame: <a class=\"struct\" href=\"hal/memory/frame/struct.Frame.html\" title=\"struct hal::memory::frame::Frame\">Frame</a>, physical_base: <a class=\"struct\" href=\"hal/memory/virtual_address/struct.VAddr.html\" title=\"struct hal::memory::virtual_address::VAddr\">VAddr</a>) -&gt; <a class=\"struct\" href=\"hal_riscv/paging/struct.PageTableImpl.html\" title=\"struct hal_riscv::paging::PageTableImpl\">PageTableImpl</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Create a <code>PageTableImpl</code> from a <code>Frame</code> that already contains a top-level table. This is\nvery unsafe because it assumes that the frame contains a valid page table, and that no\nother <code>PageTableImpl</code>s currently exist that use this same backing frame (as calling\n<code>mapper</code> on both could lead to two mutable references aliasing the same data to exist,\nwhich is UB).</p>\n</div></details><section id=\"method.top\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#279-281\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.top\" class=\"fn\">top</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"hal_riscv/paging/struct.Table.html\" title=\"struct hal_riscv::paging::Table\">Table</a>&lt;T&gt;</h4></section><section id=\"method.top_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hal_riscv/paging.rs.html#283-285\">source</a><h4 class=\"code-header\">pub fn <a href=\"hal_riscv/paging/struct.PageTableImpl.html#tymethod.top_mut\" class=\"fn\">top_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"hal_riscv/paging/struct.Table.html\" title=\"struct hal_riscv::paging::Table\">Table</a>&lt;T&gt;</h4></section></div></details>",0,"hal_riscv::platform_d1::PageTableImpl","hal_riscv::platform_virt::PageTableImpl","hal_riscv::platform::PageTableImpl"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()