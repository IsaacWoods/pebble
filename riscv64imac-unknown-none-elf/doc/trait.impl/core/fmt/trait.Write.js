(function() {var implementors = {
"hal_riscv":[["impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for <a class=\"enum\" href=\"hal_riscv/hw/uart16550/enum.Uart16550.html\" title=\"enum hal_riscv::hw::uart16550::Uart16550\">Uart16550</a>&lt;'a&gt;"]],
"heapless":[["impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;"],["impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>, N&gt;"]],
"kernel_riscv":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for <a class=\"struct\" href=\"kernel_riscv/serial/struct.SerialWriter.html\" title=\"struct kernel_riscv::serial::SerialWriter\">SerialWriter</a>"]],
"mycelium_util":[["impl&lt;'a, W: <a class=\"trait\" href=\"mycelium_util/fmt/trait.Write.html\" title=\"trait mycelium_util::fmt::Write\">Write</a>&gt; <a class=\"trait\" href=\"mycelium_util/fmt/trait.Write.html\" title=\"trait mycelium_util::fmt::Write\">Write</a> for <a class=\"struct\" href=\"mycelium_util/fmt/struct.WithIndent.html\" title=\"struct mycelium_util::fmt::WithIndent\">WithIndent</a>&lt;'a, W&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()